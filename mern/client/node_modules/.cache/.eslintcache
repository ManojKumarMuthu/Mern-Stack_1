[{"C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\index.js":"1","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\App.js":"2","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\navbar.js":"3","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\create.js":"4","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\recordList.js":"5","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\edit.js":"6","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\login.js":"7","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\auth.js":"8","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\user.js":"9","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\homepage.js":"10","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\transaction.js":"11","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\createTransaction.js":"12"},{"size":351,"mtime":1679090026457,"results":"13","hashOfConfig":"14"},{"size":1757,"mtime":1679090734837,"results":"15","hashOfConfig":"14"},{"size":3488,"mtime":1679277513122,"results":"16","hashOfConfig":"14"},{"size":13030,"mtime":1679271655317,"results":"17","hashOfConfig":"14"},{"size":3682,"mtime":1679084894737,"results":"18","hashOfConfig":"14"},{"size":7171,"mtime":1679277310813,"results":"19","hashOfConfig":"14"},{"size":10615,"mtime":1679287084890,"results":"20","hashOfConfig":"14"},{"size":691,"mtime":1678686158495,"results":"21","hashOfConfig":"14"},{"size":2845,"mtime":1678908183960,"results":"22","hashOfConfig":"14"},{"size":1058,"mtime":1679071073588,"results":"23","hashOfConfig":"14"},{"size":1647,"mtime":1679093320294,"results":"24","hashOfConfig":"14"},{"size":4647,"mtime":1679097995545,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1y5ritk",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\index.js",[],[],[],"C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\App.js",["66","67","68","69"],[],"import React, { useEffect } from \"react\";\r\n// import { Navigate, Route, Routes, useNavigate } from \"react-router-dom\";\r\n\r\n\r\n// We use Route in order to define the different routes of our application\r\nimport { Route, Routes, Navigate, useNavigate } from \"react-router-dom\";\r\n\r\n// We import all the components we need in our app\r\nimport Navbar from \"./components/navbar\";\r\nimport RecordList from \"./components/recordList\";\r\nimport Edit from \"./components/edit\";\r\nimport Create from \"./components/create\";\r\nimport Login from \"./components/login\";\r\nimport Create_user from \"./components/user\";\r\nimport Home_page from \"./components/homepage\";\r\nimport Transaction from \"./components/transaction\";\r\nimport CreateTransaction from \"./components/createTransaction\";\r\n\r\n\r\n\r\nconst App = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Checking if user is not loggedIn\r\n    const isLoggedIn = localStorage.getItem(\"isLoggedIn\");\r\n    console.log('isLoggedIn', isLoggedIn);\r\n    if (isLoggedIn === \"false\") {\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div style={{ margin: 20 }}>\r\n      <Routes>\r\n        <Route exact path=\"/RecordList\" element={<RecordList />} />\r\n        <Route exact path=\"/\" element={<Login />} />\r\n        <Route exact path=\"/Home_page\" element={<Home_page />} />\r\n        <Route path=\"/edit/:id\" element={<Edit />} />\r\n        <Route path=\"/create\" element={<Create />} />\r\n        <Route path=\"/create_user\" element={<Create_user />} />\r\n        <Route exact path=\"/transaction\" element={<Transaction />} />\r\n        <Route exact path=\"/CreateTransaction\" element={<CreateTransaction />} />\r\n      </Routes>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\navbar.js",["70"],[],"// import React from \"react\";\r\n// import \"bootstrap/dist/css/bootstrap.css\";\r\n// import { NavLink, useNavigate } from \"react-router-dom\";\r\n// import { removeToken } from \"./auth\";\r\n// import { Alert } from 'react-bootstrap';\r\n\r\n// export default function Navbar() {\r\n//   const isLoggedIn = localStorage.getItem(\"isLoggedIn\");\r\n//   const navigate = useNavigate();\r\n//   const logout = () => {\r\n//     removeToken();\r\n//     navigate(\"/login\");\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n//         <NavLink className=\"navbar-brand\" to=\"/Home_page\">\r\n//           <img style={{ width: 10 + \"%\" }} src=\"/rocketLogo.png\" alt=\"Logo for my website\"></img>\r\n//         </NavLink>\r\n//         <button\r\n//           className=\"navbar-toggler\"\r\n//           type=\"button\"\r\n//           data-toggle=\"collapse\"\r\n//           data-target=\"#navbarSupportedContent\"\r\n//           aria-controls=\"navbarSupportedContent\"\r\n//           aria-expanded=\"false\"\r\n//           aria-label=\"Toggle navigation\"\r\n//         >\r\n//           <span className=\"navbar-toggler-icon\"></span>\r\n//         </button>\r\n\r\n//         <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n//           <ul className=\"navbar-nav ml-auto\">\r\n//             <li className=\"nav-item\">\r\n//               {isLoggedIn ? (\r\n//                 <div>\r\n//                   <button className=\"btn btn-danger\" onClick={logout}>\r\n//                     Logout\r\n//                   </button>\r\n//                 </div>\r\n//               ) : (\r\n//                 <div>\r\n//                   <NavLink className=\"nav-link\" to=\"/\">\r\n//                     Login\r\n//                   </NavLink>\r\n//                 </div>\r\n//               )}\r\n//             </li>\r\n//           </ul>\r\n//         </div>\r\n//       </nav>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nimport React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { removeToken } from \"./auth\";\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nexport default function Navbar() {\r\n  const isLoggedIn = localStorage.getItem(\"isLoggedIn\");\r\n  const navigate = useNavigate();\r\n  const logout = () => {\r\n    removeToken();\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  // Only show the navbar if the user is logged in\r\n  if (!isLoggedIn) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <NavLink className=\"navbar-brand\" to=\"/Home_page\">\r\n          <img style={{ width: 10 + \"%\" }} src=\"/rocketLogo.png\" alt=\"Logo for my website\"></img>\r\n        </NavLink>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <div>\r\n                <button className=\"btn btn-danger\" onClick={logout}>\r\n                  Logout\r\n                </button>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\create.js",[],[],"C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\recordList.js",[],[],"C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\edit.js",["71"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\n// move the Modal component declaration here\r\nfunction ConfirmationModal(props) {\r\n  return (\r\n    <Modal show={props.showModal} onHide={props.closeModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Confirmation</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure you want to update this record?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.closeModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={props.confirmUpdate}>\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default function Edit() {\r\n  const [form, setForm] = useState({\r\n    First_Name: \"\",\r\n    Last_Name: \"\",\r\n    Email: \"\",\r\n    Region: \"\",\r\n    Rating: \"\",\r\n    Fee: \"\",\r\n    Sale: \"\",\r\n    records: [],\r\n  });\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const id = params.id.toString();\r\n      const response = await fetch(`http://localhost:5000/record/${id}`);\r\n\r\n      if (!response.ok) {\r\n        const message = `An error has occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n\r\n      const record = await response.json();\r\n      if (!record) {\r\n        window.alert(`Record with id ${id} not found`);\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n\r\n      setForm(record);\r\n    }\r\n\r\n    fetchData();\r\n  }, [params.id, navigate]);\r\n\r\n  function updateForm(value) {\r\n    setForm((prev) => {\r\n      return { ...prev, ...value };\r\n    });\r\n  }\r\n\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n    const editedPerson = {\r\n      First_Name: form.First_Name,\r\n      Last_Name: form.Last_Name,\r\n      Email: form.Email,\r\n      Region: form.Region,\r\n      Rating: form.Rating,\r\n      Fee: form.Fee,\r\n      Sale: form.Sale,\r\n    };\r\n\r\n    setShowModal(true); // show confirmation modal\r\n  }\r\n\r\n  async function confirmUpdate() {\r\n    const editedPerson = {\r\n      First_Name: form.First_Name,\r\n      Last_Name: form.Last_Name,\r\n      Email: form.Email,\r\n      Region: form.Region,\r\n      Rating: form.Rating,\r\n      Fee: form.Fee,\r\n      Sale: form.Sale,\r\n    };\r\n\r\n    await fetch(`http://localhost:5000/update/${params.id}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(editedPerson),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    navigate(\"/recordList\");\r\n  }\r\n\r\n  function closeModal() {\r\n    setShowModal(false);\r\n  }\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Update Record</h3>\r\n      <form onSubmit={onSubmit}>\r\n         <div className=\"form-group\">\r\n           <label htmlFor=\"First_Name\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"First_Name\"\r\n            value={form.First_Name}\r\n            onChange={(e) => updateForm({ First_Name: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Last_Name\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"Last_Name1\"\r\n            value={form.Last_Name}\r\n            onChange={(e) => updateForm({ Last_Name: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Email\">Email</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"Email1\"\r\n            value={form.Email}\r\n            onChange={(e) => updateForm({ Email: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Rating\">Rating</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"Rating1\"\r\n            value={form.Rating}\r\n            onChange={(e) => updateForm({ Rating: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Fee\">Fee</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"Fee1\"\r\n            value={form.Fee}\r\n            onChange={(e) => updateForm({ Fee: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Sale\">Sale</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"Sale1\"\r\n            value={form.Sale}\r\n            onChange={(e) => updateForm({ Sale: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <div className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"regionOptions\"\r\n              id=\"regionEast1\"\r\n              value=\"East\"\r\n              checked={form.Region === \"East\"}\r\n              onChange={(e) => updateForm({ Region: e.target.value })}\r\n            />\r\n            <label htmlFor=\"regionEast\" className=\"form-check-label\">East</label>\r\n          </div>\r\n          <div className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"regionOptions\"\r\n              id=\"regionWest11\"\r\n              value=\"West\"\r\n              checked={form.Region === \"West\"}\r\n              onChange={(e) => updateForm({ Region: e.target.value })}\r\n            />\r\n            <label htmlFor=\"regionWest\" className=\"form-check-label\">West</label>\r\n          </div>\r\n          <div className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"regionOptions\"\r\n              id=\"regionNorth1\"\r\n              value=\"North\"\r\n              checked={form.Region === \"North\"}\r\n              onChange={(e) => updateForm({ Region: e.target.value })}\r\n            />\r\n            <label htmlFor=\"regionNorth\" className=\"form-check-label\">North</label>\r\n          </div>\r\n          <div className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"regionOptions\"\r\n              id=\"regionSouth1\"\r\n              value=\"South\"\r\n              checked={form.Region === \"South\"}\r\n              onChange={(e) => updateForm({ Region: e.target.value })}\r\n            />\r\n            <label htmlFor=\"regionSouth\" className=\"form-check-label\">South</label>\r\n          </div>\r\n        </div>\r\n        \r\n          <Button type=\"submit\" variant=\"primary\">\r\n             Save Changes\r\n          </Button>\r\n        </form>\r\n\r\n  {/* render the modal component */}\r\n        <ConfirmationModal\r\n    showModal={showModal}\r\n    closeModal={closeModal}\r\n    confirmUpdate={confirmUpdate}\r\n        />\r\n</div>\r\n\r\n);\r\n}","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\login.js",[],[],"C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\auth.js",[],[],"C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\user.js",[],[],"C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\homepage.js",[],[],"C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\transaction.js",[],[],"C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\createTransaction.js",[],[],{"ruleId":"72","severity":1,"message":"73","line":6,"column":25,"nodeType":"74","messageId":"75","endLine":6,"endColumn":33},{"ruleId":"76","severity":1,"message":"77","line":31,"column":6,"nodeType":"78","endLine":31,"endColumn":8,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":40,"column":49,"nodeType":"82","messageId":"83","endLine":40,"endColumn":62},{"ruleId":"80","severity":1,"message":"84","line":43,"column":45,"nodeType":"82","messageId":"83","endLine":43,"endColumn":60},{"ruleId":"72","severity":1,"message":"85","line":65,"column":10,"nodeType":"74","messageId":"75","endLine":65,"endColumn":15},{"ruleId":"72","severity":1,"message":"86","line":72,"column":11,"nodeType":"74","messageId":"75","endLine":72,"endColumn":23},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["87"],"react/jsx-pascal-case","Imported JSX component Home_page must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Create_user must be in PascalCase or SCREAMING_SNAKE_CASE","'Alert' is defined but never used.","'editedPerson' is assigned a value but never used.",{"desc":"88","fix":"89"},"Update the dependencies array to be: [navigate]",{"range":"90","text":"91"},[1061,1063],"[navigate]"]