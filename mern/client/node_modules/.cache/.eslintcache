[{"C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\index.js":"1","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\App.js":"2","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\navbar.js":"3","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\create.js":"4","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\recordList.js":"5","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\edit.js":"6","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\login.js":"7","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\auth.js":"8"},{"size":303,"mtime":1678684979890,"results":"9","hashOfConfig":"10"},{"size":1248,"mtime":1678684863337,"results":"11","hashOfConfig":"10"},{"size":3281,"mtime":1678687315799,"results":"12","hashOfConfig":"10"},{"size":5539,"mtime":1678522355839,"results":"13","hashOfConfig":"10"},{"size":2402,"mtime":1678484825958,"results":"14","hashOfConfig":"10"},{"size":6187,"mtime":1678522367690,"results":"15","hashOfConfig":"10"},{"size":6220,"mtime":1678687411062,"results":"16","hashOfConfig":"10"},{"size":691,"mtime":1678686158495,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ew7szn",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\index.js",[],["37","38"],"C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\App.js",["39","40"],"import React, { useEffect } from \"react\";\r\n// import { Navigate, Route, Routes, useNavigate } from \"react-router-dom\";\r\n\r\n\r\n// We use Route in order to define the different routes of our application\r\nimport { Route, Routes, Navigate, useNavigate } from \"react-router-dom\";\r\n\r\n// We import all the components we need in our app\r\nimport Navbar from \"./components/navbar\";\r\nimport RecordList from \"./components/recordList\";\r\nimport Edit from \"./components/edit\";\r\nimport Create from \"./components/create\";\r\nimport Login from \"./components/login\";\r\n\r\nconst App = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Checking if user is not loggedIn\r\n    const isLoggedIn = localStorage.getItem(\"isLoggedIn\");\r\n    console.log('isLoggedIn', isLoggedIn);\r\n    if (isLoggedIn === \"false\") {\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div style={{ margin: 20 }}>\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<RecordList />} />\r\n        <Route exact path=\"/login\" element={<Login />} />\r\n        <Route path=\"/edit/:id\" element={<Edit />} />\r\n        <Route path=\"/create\" element={<Create />} />\r\n      </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\navbar.js",[],"C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\create.js",[],"C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\recordList.js",[],"C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\edit.js",[],"C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\login.js",["41","42"],"import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isError, setIsError] = useState(false) //true = error, false = no error.\r\n  const error = \"Email or Password not matched\"\r\n  const [passwordError, setpasswordError] = useState(\"\");\r\n  const [emailError, setemailError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  \r\n  const loginSubmit = (e) => {\r\n    e.preventDefault();\r\n    logMe();\r\n  };\r\n  \r\n  const logMe = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      \"email\": email,\r\n      \"password\": password\r\n    });\r\n    var requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow'\r\n    };\r\n    fetch(\"http://localhost:5000/login\", requestOptions)\r\n      .then(response => response.text())\r\n      .then(result => {\r\n        localStorage.setItem(\"isLoggedIn\", result);\r\n        if(result === \"true\"){\r\n          navigate(\"/\");\r\n        } else {\r\n          setIsError(true)\r\n        }\r\n      })\r\n      .catch(error => console.log('error', error));\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"row d-flex justify-content-center\">\r\n          <div className=\"col-md-4\">\r\n            <form id=\"loginform\" onSubmit={loginSubmit}>\r\n              <div className=\"form-group\">\r\n                <label>Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"EmailInput\"\r\n                  name=\"EmailInput\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={(event) => setEmail(event.target.value)}\r\n                />\r\n                <small id=\"emailHelp\" className=\"text-danger form-text\">\r\n                  {emailError}\r\n                </small>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputPassword1\"\r\n                  placeholder=\"Password\"\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                />\r\n                <small id=\"passworderror\" className=\"text-danger form-text\">\r\n                  {passwordError}\r\n                </small>\r\n              </div>\r\n              {isError ? (\r\n                <p style={{color: \"red\"}}>{error}</p>\r\n              ) : (\r\n                <>\r\n                </>\r\n              )}\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { setToken } from \"./auth\";\r\n\r\n// function Login() {\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [isError, setIsError] = useState(false) //true = error, false = no error.\r\n//   const error = \"Email or Password not matched\"\r\n//   const [passwordError, setpasswordError] = useState(\"\");\r\n//   const [emailError, setemailError] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n  \r\n//   const loginSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/login\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ email, password }),\r\n//       });\r\n//       const data = await response.json();\r\n//       if (response.ok) {\r\n//         setToken(data.token);\r\n//         navigate(\"/\");\r\n//       } else {\r\n//         setIsError(true)\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       setIsError(true)\r\n//     }\r\n//   };\r\n  \r\n//   return (\r\n//     <div className=\"App\">\r\n//       <div className=\"container\">\r\n//         <div className=\"row d-flex justify-content-center\">\r\n//           <div className=\"col-md-4\">\r\n//             <form id=\"loginform\" onSubmit={loginSubmit}>\r\n//               <div className=\"form-group\">\r\n//                 <label>Email address</label>\r\n//                 <input\r\n//                   type=\"email\"\r\n//                   className=\"form-control\"\r\n//                   id=\"EmailInput\"\r\n//                   name=\"EmailInput\"\r\n//                   aria-describedby=\"emailHelp\"\r\n//                   placeholder=\"Enter email\"\r\n//                   onChange={(event) => setEmail(event.target.value)}\r\n//                 />\r\n//                 <small id=\"emailHelp\" className=\"text-danger form-text\">\r\n//                   {emailError}\r\n//                 </small>\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Password</label>\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   className=\"form-control\"\r\n//                   id=\"exampleInputPassword1\"\r\n//                   placeholder=\"Password\"\r\n//                   onChange={(event) => setPassword(event.target.value)}\r\n//                 />\r\n//                 <small id=\"passworderror\" className=\"text-danger form-text\">\r\n//                   {passwordError}\r\n//                 </small>\r\n//               </div>\r\n//               {isError ? (\r\n//                 <p style={{color: \"red\"}}>{error}</p>\r\n//               ) : (\r\n//                 <>\r\n//                 </>\r\n//               )}\r\n//               <button type=\"submit\" className=\"btn btn-primary\">\r\n//                 Submit\r\n//               </button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n","C:\\Users\\manoj\\CodeBoxxManojKumarMuthu\\mern-stack-example\\mern\\client\\src\\components\\auth.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":6,"column":25,"nodeType":"49","messageId":"50","endLine":6,"endColumn":33},{"ruleId":"51","severity":1,"message":"52","line":25,"column":6,"nodeType":"53","endLine":25,"endColumn":8,"suggestions":"54"},{"ruleId":"47","severity":1,"message":"55","line":10,"column":25,"nodeType":"49","messageId":"50","endLine":10,"endColumn":41},{"ruleId":"47","severity":1,"message":"56","line":11,"column":22,"nodeType":"49","messageId":"50","endLine":11,"endColumn":35},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["59"],"'setpasswordError' is assigned a value but never used.","'setemailError' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [navigate]",{"range":"62","text":"63"},[845,847],"[navigate]"]