{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manoj\\\\CodeBoxxManojKumarMuthu\\\\mern-stack-example\\\\mern\\\\client\\\\src\\\\components\\\\createTransaction.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router\";\n\n// export default function Create() {\n//   const [form, setForm] = useState({\n//     agent_name: \"\",\n//     transaction_number: \"\",\n//     sale: \"\",\n//     date: \"\"\n//   });\n//   const navigate = useNavigate();\n\n//   // These methods will update the state properties.\n//   function updateForm(value) {\n//     return setForm((prev) => {\n//       return { ...prev, ...value };\n//     });\n//   }\n\n//   // This function will handle the submission.\n//   async function onSubmit(e) {\n//     e.preventDefault();\n\n//     // When a post request is sent to the create url, we'll add a new record to the database.\n//     const newPerson = { ...form };\n\n//     await fetch(\"http://localhost:5000/transaction/add\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(newPerson),\n//     })\n//     .catch(error => {\n//       window.alert(error);\n//       return;\n//     });\n\n//     setForm({ \n//     agent_name: \"\",\n//     transaction_number: \"\",\n//     sale: \"\",\n//     date: \"\" });\n//     navigate(\"/transaction\");\n//   }\n\n//   // This following section will display the form that takes the input from the user.\n//   return (\n//     <div>\n//       <h3>Create New Transaction</h3>\n//       <form onSubmit={onSubmit}>\n//         <div className=\"form-group\">\n//          <label htmlFor=\"agent_name\">Agent Name</label>\n//           <select\n//             className=\"form-control\"\n//             id=\"agent_name\"\n//             value={form.agent_name}\n//             onChange={(e) => updateForm({ agent_name: e.target.value })}\n//           >\n//             <option value=\"\">Select Agent</option>\n//             <option value=\"Goku\">Goku</option>\n//             <option value=\"Lelouch\">Lelouch</option>\n//             <option value=\"Naruto\">Naruto</option>\n//             <option value=\"Bleach\">Bleach</option>\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"transaction_number\">Transaction Number</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"transaction_number\"\n//             value={form.transaction_number}\n//             onChange={(e) => updateForm({ transaction_number: e.target.value })}\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"sale\">Sale</label>\n//           <input\n//             type=\"number\"\n//             className=\"form-control\"\n//             id=\"sale\"\n//             value={form.sale}\n//             min=\"0\"\n//             onChange={(e) => updateForm({ sale: Math.max(0, e.target.value) })}\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <input\n//             type=\"submit\"\n//             value=\"Create Transaction\"\n//             className=\"btn btn-primary\"\n//           />\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router\";\n\n// export default function Create() {\n//   const [form, setForm] = useState({\n//     agent_name: \"\",\n//     transaction_number: \"\",\n//     sale: \"\",\n//     date: \"\"\n//   });\n//   const navigate = useNavigate();\n\n//   // These methods will update the state properties.\n//   function updateForm(value) {\n//     return setForm((prev) => {\n//       return { ...prev, ...value };\n//     });\n//   }\n\n//   // This function will handle the submission.\n//   async function onSubmit(e) {\n//     e.preventDefault();\n\n//     // Show confirmation modal before creating the transaction\n//     const confirmation = window.confirm(\"Are you sure you want to continue?\");\n//     if (!confirmation) {\n//       return;\n//     }\n\n//     // When a post request is sent to the create url, we'll add a new record to the database.\n//     const newPerson = { ...form };\n\n//     await fetch(\"http://localhost:5000/transaction/add\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(newPerson),\n//     })\n//     .catch(error => {\n//       window.alert(error);\n//       return;\n//     });\n\n//     setForm({ \n//     agent_name: \"\",\n//     transaction_number: \"\",\n//     sale: \"\",\n//     date: \"\" });\n//     navigate(\"/transaction\");\n//   }\n\n//   // This following section will display the form that takes the input from the user.\n//   return (\n//     <div>\n//       <h3>Create New Transaction</h3>\n//       <form onSubmit={onSubmit}>\n//         <div className=\"form-group\">\n//          <label htmlFor=\"agent_name\">Agent Name</label>\n//           <select\n//             className=\"form-control\"\n//             id=\"agent_name\"\n//             value={form.agent_name}\n//             onChange={(e) => updateForm({ agent_name: e.target.value })}\n//           >\n//             <option value=\"\">Select Agent</option>\n//             <option value=\"Goku\">Goku</option>\n//             <option value=\"Lelouch\">Lelouch</option>\n//             <option value=\"Naruto\">Naruto</option>\n//             <option value=\"Bleach\">Bleach</option>\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"transaction_number\">Transaction Number</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"transaction_number\"\n//             value={form.transaction_number}\n//             onChange={(e) => updateForm({ transaction_number: e.target.value })}\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"sale\">Sale</label>\n//           <input\n//             type=\"number\"\n//             className=\"form-control\"\n//             id=\"sale\"\n//             value={form.sale}\n//             min=\"0\"\n//             onChange={(e) => updateForm({ sale: Math.max(0, e.target.value) })}\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <input\n//             type=\"submit\"\n//             value=\"Create Transaction\"\n//             className=\"btn btn-primary\"\n//           />\n//         </div>\n//       </form>\n//       {/* Confirmation Modal */}\n//       <div\n//         className=\"modal fade\"\n//         id=\"confirmationModal\"\n//         tabIndex=\"-1\"\n//         role=\"dialog\"\n//         aria-labelledby=\"confirmationModalLabel\"\n//         aria-hidden=\"true\"\n//       >\n//         <div className=\"modal-dialog\" role=\"document\">\n//           <div className=\"modal-content\">\n//             <div className=\"modal-header\">\n//               <h5 className=\"modal-title\" id=\"confirmationModalLabel\">\n//                 Are you sure you want to\n\n//                 </h5>\n// <button\n//              type=\"button\"\n//              className=\"close\"\n//              data-dismiss=\"modal\"\n//              aria-label=\"Close\"\n//            >\n// <span aria-hidden=\"true\">Ã—</span>\n// </button>\n// </div>\n// <div className=\"modal-body\">\n// This action will create a new transaction. Are you sure you want to continue?\n// </div>\n// <div className=\"modal-footer\">\n// <button\n//              type=\"button\"\n//              className=\"btn btn-secondary\"\n//              data-dismiss=\"modal\"\n//            >\n// No/Back\n// </button>\n// <button type=\"submit\" className=\"btn btn-primary\">\n// Yes/Confirm\n// </button>\n// </div>\n// </div>\n// </div>\n// </div>\n// </div>\n// );\n// }\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  const [form, setForm] = useState({\n    agent_name: \"\",\n    transaction_number: \"\",\n    sale: \"\",\n    date: \"\"\n  });\n  const navigate = useNavigate();\n\n  // Update the form state with the provided values\n  function updateForm(values) {\n    setForm(prev => ({\n      ...prev,\n      ...values\n    }));\n  }\n\n  // Handle form submission\n  async function onSubmit(event) {\n    event.preventDefault();\n\n    // Show confirmation dialog before creating the transaction\n    const confirmation = window.confirm(\"Are you sure you want to create a new transaction?\");\n    if (!confirmation) {\n      return;\n    }\n    try {\n      // Send a POST request to the backend to create a new transaction\n      await fetch(\"http://localhost:5000/transaction/add\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(form)\n      });\n\n      // Reset the form state and navigate to the transaction page\n      setForm({\n        agent_name: \"\",\n        transaction_number: \"\",\n        sale: \"\",\n        date: \"\"\n      });\n      navigate(\"/transaction\");\n    } catch (error) {\n      // Show an error alert if the request fails\n      window.alert(error);\n    }\n  }\n\n  // Render the form component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"agent_name\",\n          children: \"Agent Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"agent_name\",\n          value: form.agent_name,\n          onChange: event => updateForm({\n            agent_name: event.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Agent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Goku\",\n            children: \"Goku\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Lelouch\",\n            children: \"Lelouch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Naruto\",\n            children: \"Naruto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Bleach\",\n            children: \"Bleach\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"transaction_number\",\n          children: \"Transaction Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"transaction_number\",\n          value: form.transaction_number,\n          onChange: event => updateForm({\n            transaction_number: event.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sale\",\n          children: \"Sale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"sale\",\n          value: form.sale,\n          min: \"0\",\n          onChange: event => updateForm({\n            sale: Math.max(0, event.target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create Transaction\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: \"confirmationModal\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"confirmationModalLabel\",\n      \"aria-hidden\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        role: \"document\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              id: \"confirmationModalLabel\",\n              children: \"Are you sure you want to create a new transaction?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              \"data-dismiss\": \"modal\",\n              \"aria-label\": \"Close\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-hidden\": \"true\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Please confirm that you want to create a new transaction.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              \"data-dismiss\": \"modal\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: onSubmit,\n              children: \"Create Transaction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n}\n_s(Create, \"6Rrw4+3lFeCnza+XbsIFeXHpUDo=\", false, function () {\n  return [useNavigate];\n});\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Create","_s","form","setForm","agent_name","transaction_number","sale","date","navigate","updateForm","values","prev","onSubmit","event","preventDefault","confirmation","window","confirm","fetch","method","headers","body","JSON","stringify","error","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","id","value","onChange","target","type","min","Math","max","tabIndex","role","onClick","_c","$RefreshReg$"],"sources":["C:/Users/manoj/CodeBoxxManojKumarMuthu/mern-stack-example/mern/client/src/components/createTransaction.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router\";\r\n\r\n// export default function Create() {\r\n//   const [form, setForm] = useState({\r\n//     agent_name: \"\",\r\n//     transaction_number: \"\",\r\n//     sale: \"\",\r\n//     date: \"\"\r\n//   });\r\n//   const navigate = useNavigate();\r\n\r\n//   // These methods will update the state properties.\r\n//   function updateForm(value) {\r\n//     return setForm((prev) => {\r\n//       return { ...prev, ...value };\r\n//     });\r\n//   }\r\n\r\n//   // This function will handle the submission.\r\n//   async function onSubmit(e) {\r\n//     e.preventDefault();\r\n\r\n//     // When a post request is sent to the create url, we'll add a new record to the database.\r\n//     const newPerson = { ...form };\r\n\r\n//     await fetch(\"http://localhost:5000/transaction/add\", {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//       body: JSON.stringify(newPerson),\r\n//     })\r\n//     .catch(error => {\r\n//       window.alert(error);\r\n//       return;\r\n//     });\r\n\r\n//     setForm({ \r\n//     agent_name: \"\",\r\n//     transaction_number: \"\",\r\n//     sale: \"\",\r\n//     date: \"\" });\r\n//     navigate(\"/transaction\");\r\n//   }\r\n\r\n//   // This following section will display the form that takes the input from the user.\r\n//   return (\r\n//     <div>\r\n//       <h3>Create New Transaction</h3>\r\n//       <form onSubmit={onSubmit}>\r\n//         <div className=\"form-group\">\r\n//          <label htmlFor=\"agent_name\">Agent Name</label>\r\n//           <select\r\n//             className=\"form-control\"\r\n//             id=\"agent_name\"\r\n//             value={form.agent_name}\r\n//             onChange={(e) => updateForm({ agent_name: e.target.value })}\r\n//           >\r\n//             <option value=\"\">Select Agent</option>\r\n//             <option value=\"Goku\">Goku</option>\r\n//             <option value=\"Lelouch\">Lelouch</option>\r\n//             <option value=\"Naruto\">Naruto</option>\r\n//             <option value=\"Bleach\">Bleach</option>\r\n//           </select>\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"transaction_number\">Transaction Number</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"transaction_number\"\r\n//             value={form.transaction_number}\r\n//             onChange={(e) => updateForm({ transaction_number: e.target.value })}\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"sale\">Sale</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             className=\"form-control\"\r\n//             id=\"sale\"\r\n//             value={form.sale}\r\n//             min=\"0\"\r\n//             onChange={(e) => updateForm({ sale: Math.max(0, e.target.value) })}\r\n//           />\r\n//         </div>\r\n  \r\n//         <div className=\"form-group\">\r\n//           <input\r\n//             type=\"submit\"\r\n//             value=\"Create Transaction\"\r\n//             className=\"btn btn-primary\"\r\n//           />\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router\";\r\n\r\n// export default function Create() {\r\n//   const [form, setForm] = useState({\r\n//     agent_name: \"\",\r\n//     transaction_number: \"\",\r\n//     sale: \"\",\r\n//     date: \"\"\r\n//   });\r\n//   const navigate = useNavigate();\r\n\r\n//   // These methods will update the state properties.\r\n//   function updateForm(value) {\r\n//     return setForm((prev) => {\r\n//       return { ...prev, ...value };\r\n//     });\r\n//   }\r\n\r\n//   // This function will handle the submission.\r\n//   async function onSubmit(e) {\r\n//     e.preventDefault();\r\n\r\n//     // Show confirmation modal before creating the transaction\r\n//     const confirmation = window.confirm(\"Are you sure you want to continue?\");\r\n//     if (!confirmation) {\r\n//       return;\r\n//     }\r\n\r\n//     // When a post request is sent to the create url, we'll add a new record to the database.\r\n//     const newPerson = { ...form };\r\n\r\n//     await fetch(\"http://localhost:5000/transaction/add\", {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//       body: JSON.stringify(newPerson),\r\n//     })\r\n//     .catch(error => {\r\n//       window.alert(error);\r\n//       return;\r\n//     });\r\n\r\n//     setForm({ \r\n//     agent_name: \"\",\r\n//     transaction_number: \"\",\r\n//     sale: \"\",\r\n//     date: \"\" });\r\n//     navigate(\"/transaction\");\r\n//   }\r\n\r\n//   // This following section will display the form that takes the input from the user.\r\n//   return (\r\n//     <div>\r\n//       <h3>Create New Transaction</h3>\r\n//       <form onSubmit={onSubmit}>\r\n//         <div className=\"form-group\">\r\n//          <label htmlFor=\"agent_name\">Agent Name</label>\r\n//           <select\r\n//             className=\"form-control\"\r\n//             id=\"agent_name\"\r\n//             value={form.agent_name}\r\n//             onChange={(e) => updateForm({ agent_name: e.target.value })}\r\n//           >\r\n//             <option value=\"\">Select Agent</option>\r\n//             <option value=\"Goku\">Goku</option>\r\n//             <option value=\"Lelouch\">Lelouch</option>\r\n//             <option value=\"Naruto\">Naruto</option>\r\n//             <option value=\"Bleach\">Bleach</option>\r\n//           </select>\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"transaction_number\">Transaction Number</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"transaction_number\"\r\n//             value={form.transaction_number}\r\n//             onChange={(e) => updateForm({ transaction_number: e.target.value })}\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"sale\">Sale</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             className=\"form-control\"\r\n//             id=\"sale\"\r\n//             value={form.sale}\r\n//             min=\"0\"\r\n//             onChange={(e) => updateForm({ sale: Math.max(0, e.target.value) })}\r\n//           />\r\n//         </div>\r\n  \r\n//         <div className=\"form-group\">\r\n//           <input\r\n//             type=\"submit\"\r\n//             value=\"Create Transaction\"\r\n//             className=\"btn btn-primary\"\r\n//           />\r\n//         </div>\r\n//       </form>\r\n//       {/* Confirmation Modal */}\r\n//       <div\r\n//         className=\"modal fade\"\r\n//         id=\"confirmationModal\"\r\n//         tabIndex=\"-1\"\r\n//         role=\"dialog\"\r\n//         aria-labelledby=\"confirmationModalLabel\"\r\n//         aria-hidden=\"true\"\r\n//       >\r\n//         <div className=\"modal-dialog\" role=\"document\">\r\n//           <div className=\"modal-content\">\r\n//             <div className=\"modal-header\">\r\n//               <h5 className=\"modal-title\" id=\"confirmationModalLabel\">\r\n//                 Are you sure you want to\r\n\r\n//                 </h5>\r\n// <button\r\n//              type=\"button\"\r\n//              className=\"close\"\r\n//              data-dismiss=\"modal\"\r\n//              aria-label=\"Close\"\r\n//            >\r\n// <span aria-hidden=\"true\">Ã—</span>\r\n// </button>\r\n// </div>\r\n// <div className=\"modal-body\">\r\n// This action will create a new transaction. Are you sure you want to continue?\r\n// </div>\r\n// <div className=\"modal-footer\">\r\n// <button\r\n//              type=\"button\"\r\n//              className=\"btn btn-secondary\"\r\n//              data-dismiss=\"modal\"\r\n//            >\r\n// No/Back\r\n// </button>\r\n// <button type=\"submit\" className=\"btn btn-primary\">\r\n// Yes/Confirm\r\n// </button>\r\n// </div>\r\n// </div>\r\n// </div>\r\n// </div>\r\n// </div>\r\n// );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nexport default function Create() {\r\n  const [form, setForm] = useState({\r\n    agent_name: \"\",\r\n    transaction_number: \"\",\r\n    sale: \"\",\r\n    date: \"\"\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  // Update the form state with the provided values\r\n  function updateForm(values) {\r\n    setForm(prev => ({ ...prev, ...values }));\r\n  }\r\n\r\n  // Handle form submission\r\n  async function onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    // Show confirmation dialog before creating the transaction\r\n    const confirmation = window.confirm(\r\n      \"Are you sure you want to create a new transaction?\"\r\n    );\r\n    if (!confirmation) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Send a POST request to the backend to create a new transaction\r\n      await fetch(\"http://localhost:5000/transaction/add\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(form),\r\n      });\r\n\r\n      // Reset the form state and navigate to the transaction page\r\n      setForm({\r\n        agent_name: \"\",\r\n        transaction_number: \"\",\r\n        sale: \"\",\r\n        date: \"\"\r\n      });\r\n      navigate(\"/transaction\");\r\n    } catch (error) {\r\n      // Show an error alert if the request fails\r\n      window.alert(error);\r\n    }\r\n  }\r\n\r\n  // Render the form component\r\n  return (\r\n    <div>\r\n      <h3>Create New Transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"agent_name\">Agent Name</label>\r\n          <select\r\n            className=\"form-control\"\r\n            id=\"agent_name\"\r\n            value={form.agent_name}\r\n            onChange={event => updateForm({ agent_name: event.target.value })}\r\n          >\r\n            <option value=\"\">Select Agent</option>\r\n            <option value=\"Goku\">Goku</option>\r\n            <option value=\"Lelouch\">Lelouch</option>\r\n            <option value=\"Naruto\">Naruto</option>\r\n            <option value=\"Bleach\">Bleach</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"transaction_number\">Transaction Number</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"transaction_number\"\r\n            value={form.transaction_number}\r\n            onChange={event =>\r\n              updateForm({ transaction_number: event.target.value })\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"sale\">Sale</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"sale\"\r\n            value={form.sale}\r\n            min=\"0\"\r\n            onChange={event =>\r\n              updateForm({ sale: Math.max(0, event.target.value) })\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Create Transaction\"\r\n            className=\"btn btn-primary\"\r\n          />\r\n        </div>\r\n      </form>\r\n      {/* Confirmation Modal */}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"confirmationModal\"\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"confirmationModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"confirmationModalLabel\">\r\n                Are you sure you want to create a new transaction?\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">Ã—</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>Please confirm that you want to create a new transaction.</p>\r\n            </div>\r\n          <div className=\"modal-footer\">\r\n              <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-dismiss=\"modal\"\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={onSubmit}\r\n              >\r\n                Create Transaction\r\n              </button>\r\n          </div>\r\n        </div>\r\n</div>\r\n</div>\r\n</div>\r\n);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ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"},"metadata":{},"sourceType":"module","externalDependencies":[]}