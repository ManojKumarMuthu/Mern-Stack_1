{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manoj\\\\CodeBoxxManojKumarMuthu\\\\mern-stack-example\\\\mern\\\\client\\\\src\\\\components\\\\recordList.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { Link, NavLink } from \"react-router-dom\";\n\n// const Record = (props) => (\n//   <tr>\n//     <td>{props.record.First_Name}</td>\n//     <td>{props.record.Last_Name}</td>\n//     <td>{props.record.Email}</td>\n//     <td>{props.record.Region}</td>\n//     <td>{props.record.Rating}</td>\n//     <td>{props.record.Fee}</td>\n//     <td>{props.record.Sale}</td>\n//     <td>\n//       <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\n//       <button className=\"btn btn-link\"\n//         onClick={() => {\n//           props.deleteRecord(props.record._id);\n//         }}\n//       >\n//         Delete\n//       </button>\n//     </td>\n//   </tr>\n// );\n\n// export default function RecordList() {\n//   const [records, setRecords] = useState([]);\n\n//   // This method fetches the records from the database.\n//   useEffect(() => {\n//     async function getRecords() {\n//       const response = await fetch(`http://localhost:5000/record/`);\n\n//       if (!response.ok) {\n//         const message = `An error occured: ${response.statusText}`;\n//         window.alert(message);\n//         return;\n//       }\n\n//       const records = await response.json();\n//       setRecords(records);\n//     }\n\n//     getRecords();\n\n//     return;\n//   }, [records.length]);\n\n//   // This method will delete a record\n//   async function deleteRecord(id) {\n//     await fetch(`http://localhost:5000/${id}`, {\n//       method: \"DELETE\"\n//     });\n\n//     const newRecords = records.filter((el) => el._id !== id);\n//     setRecords(newRecords);\n//   }\n\n//   // This method will map out the records on the table\n//   function recordList() {\n//     return records.map((record) => {\n//       return (\n//         <Record\n//           record={record}\n//           deleteRecord={() => deleteRecord(record._id)}\n//           key={record._id}\n//         />\n//       );\n//     });\n//   }\n\n//   // This following section will display the table with the records of individuals.\n//   return (\n//     <div>\n//       <div>\n//         <NavLink className=\"btn btn-secondary mt-2\" to=\"/create\">\n//           Create Agent\n//         </NavLink>\n//       </div>\n//       <h3 style={{ textAlign: \"center\" }}>Record List</h3>\n//       <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n//         <thead>\n//           <tr>\n//             <th>First Name</th>\n//             <th>Last Name</th>\n//             <th>Email</th>\n//             <th>Region</th>\n//             <th>Rating</th>\n//             <th>Fee</th>\n//             <th>Sale</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>{recordList()}</tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ConfirmationModal from \"./ConfirmationModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Record = props => {\n  _s();\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\n\n  // This method will delete a record\n  async function deleteRecord(id) {\n    await fetch(`http://localhost:5000/record/${id}`, {\n      method: \"DELETE\"\n    });\n    props.onRecordDelete(id);\n  }\n\n  // This method will delete a record\n  const handleDeleteRecord = () => {\n    deleteRecord(props.record._id);\n    setShowConfirmationModal(false);\n  };\n\n  // This method will cancel the deletion of a record\n  const handleCancelDelete = () => {\n    setShowConfirmationModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.record.First_Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.record.Last_Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.record.Email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.record.Region\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.record.Rating\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.record.Fee\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.record.Sale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-link\",\n        to: `/edit/${props.record._id}`,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), \" \", \"|\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-link\",\n        onClick: () => setShowConfirmationModal(true),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n        message: \"Are you sure you want to delete this record?\",\n        showConfirmationModal: showConfirmationModal,\n        onConfirm: handleDeleteRecord,\n        onCancel: handleCancelDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(Record, \"e9QUGGxkpsPeUPo4AX7dYy/9Pkk=\");\n_c = Record;\nexport default function RecordList() {\n  _s2();\n  const [records, setRecords] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(\"http://localhost:5000/record/\");\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const records = await response.json();\n      setRecords(records);\n    }\n    getRecords();\n  }, []);\n\n  // This method will delete a record\n  const handleRecordDelete = id => {\n    const newRecords = records.filter(el => el._id !== id);\n    setRecords(newRecords);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Record List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-light\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: records.map(record => /*#__PURE__*/_jsxDEV(Record, {\n          record: record,\n          onRecordDelete: handleRecordDelete\n        }, record._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n_s2(RecordList, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c2 = RecordList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"RecordList\");","map":{"version":3,"names":["React","useEffect","useState","Link","ConfirmationModal","jsxDEV","_jsxDEV","Record","props","_s","showConfirmationModal","setShowConfirmationModal","deleteRecord","id","fetch","method","onRecordDelete","handleDeleteRecord","record","_id","handleCancelDelete","children","First_Name","fileName","_jsxFileName","lineNumber","columnNumber","Last_Name","Email","Region","Rating","Fee","Sale","className","to","onClick","message","onConfirm","onCancel","_c","RecordList","_s2","records","setRecords","getRecords","response","ok","statusText","window","alert","json","handleRecordDelete","newRecords","filter","el","map","_c2","$RefreshReg$"],"sources":["C:/Users/manoj/CodeBoxxManojKumarMuthu/mern-stack-example/mern/client/src/components/recordList.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { Link, NavLink } from \"react-router-dom\";\r\n\r\n\r\n// const Record = (props) => (\r\n//   <tr>\r\n//     <td>{props.record.First_Name}</td>\r\n//     <td>{props.record.Last_Name}</td>\r\n//     <td>{props.record.Email}</td>\r\n//     <td>{props.record.Region}</td>\r\n//     <td>{props.record.Rating}</td>\r\n//     <td>{props.record.Fee}</td>\r\n//     <td>{props.record.Sale}</td>\r\n//     <td>\r\n//       <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\r\n//       <button className=\"btn btn-link\"\r\n//         onClick={() => {\r\n//           props.deleteRecord(props.record._id);\r\n//         }}\r\n//       >\r\n//         Delete\r\n//       </button>\r\n//     </td>\r\n//   </tr>\r\n// );\r\n\r\n// export default function RecordList() {\r\n//   const [records, setRecords] = useState([]);\r\n\r\n//   // This method fetches the records from the database.\r\n//   useEffect(() => {\r\n//     async function getRecords() {\r\n//       const response = await fetch(`http://localhost:5000/record/`);\r\n\r\n//       if (!response.ok) {\r\n//         const message = `An error occured: ${response.statusText}`;\r\n//         window.alert(message);\r\n//         return;\r\n//       }\r\n\r\n//       const records = await response.json();\r\n//       setRecords(records);\r\n//     }\r\n\r\n//     getRecords();\r\n\r\n//     return;\r\n//   }, [records.length]);\r\n\r\n//   // This method will delete a record\r\n//   async function deleteRecord(id) {\r\n//     await fetch(`http://localhost:5000/${id}`, {\r\n//       method: \"DELETE\"\r\n//     });\r\n\r\n//     const newRecords = records.filter((el) => el._id !== id);\r\n//     setRecords(newRecords);\r\n//   }\r\n\r\n//   // This method will map out the records on the table\r\n//   function recordList() {\r\n//     return records.map((record) => {\r\n//       return (\r\n//         <Record\r\n//           record={record}\r\n//           deleteRecord={() => deleteRecord(record._id)}\r\n//           key={record._id}\r\n//         />\r\n//       );\r\n//     });\r\n//   }\r\n\r\n//   // This following section will display the table with the records of individuals.\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <NavLink className=\"btn btn-secondary mt-2\" to=\"/create\">\r\n//           Create Agent\r\n//         </NavLink>\r\n//       </div>\r\n//       <h3 style={{ textAlign: \"center\" }}>Record List</h3>\r\n//       <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>First Name</th>\r\n//             <th>Last Name</th>\r\n//             <th>Email</th>\r\n//             <th>Region</th>\r\n//             <th>Rating</th>\r\n//             <th>Fee</th>\r\n//             <th>Sale</th>\r\n//             <th>Action</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>{recordList()}</tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\n\r\nconst Record = (props) => {\r\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\r\n\r\n  // This method will delete a record\r\n  async function deleteRecord(id) {\r\n    await fetch(`http://localhost:5000/record/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    props.onRecordDelete(id);\r\n  }\r\n\r\n  // This method will delete a record\r\n  const handleDeleteRecord = () => {\r\n    deleteRecord(props.record._id);\r\n    setShowConfirmationModal(false);\r\n  };\r\n\r\n  // This method will cancel the deletion of a record\r\n  const handleCancelDelete = () => {\r\n    setShowConfirmationModal(false);\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td>{props.record.First_Name}</td>\r\n      <td>{props.record.Last_Name}</td>\r\n      <td>{props.record.Email}</td>\r\n      <td>{props.record.Region}</td>\r\n      <td>{props.record.Rating}</td>\r\n      <td>{props.record.Fee}</td>\r\n      <td>{props.record.Sale}</td>\r\n      <td>\r\n        <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>\r\n          Edit\r\n        </Link>{\" \"}\r\n        |{\" \"}\r\n        <button\r\n          className=\"btn btn-link\"\r\n          onClick={() => setShowConfirmationModal(true)}\r\n        >\r\n          Delete\r\n        </button>\r\n        <ConfirmationModal\r\n          message=\"Are you sure you want to delete this record?\"\r\n          showConfirmationModal={showConfirmationModal}\r\n          onConfirm={handleDeleteRecord}\r\n          onCancel={handleCancelDelete}\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default function RecordList() {\r\n  const [records, setRecords] = useState([]);\r\n\r\n  // This method fetches the records from the database.\r\n  useEffect(() => {\r\n    async function getRecords() {\r\n      const response = await fetch(\"http://localhost:5000/record/\");\r\n\r\n      if (!response.ok) {\r\n        const message = `An error occured: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n\r\n      const records = await response.json();\r\n      setRecords(records);\r\n    }\r\n\r\n    getRecords();\r\n  }, []);\r\n\r\n  // This method will delete a record\r\n  const handleRecordDelete = (id) => {\r\n    const newRecords = records.filter((el) => el._id !== id);\r\n    setRecords(newRecords);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3>Record List</h3>\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Email</th>\r\n            <th>Region</th>\r\n            <th>Rating</th>\r\n            <th>Fee</th>\r\n            <th>Sale</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {records.map((record) => (\r\n            <Record\r\n              key={record._id}\r\n              record={record}\r\n              onRecordDelete={handleRecordDelete}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}