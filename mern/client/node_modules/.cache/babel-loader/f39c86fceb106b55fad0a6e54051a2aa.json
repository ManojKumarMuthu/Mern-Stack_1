{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manoj\\\\CodeBoxxManojKumarMuthu\\\\mern-stack-example\\\\mern\\\\client\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import { useNavigate } from \"react-router-dom\";\n\n// function Login() {\n//   const [password, setPassword] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [isError, setIsError] = useState(false) //true = error, false = no error.\n//   const error = \"Email or Password not matched\"\n//   const [passwordError, setpasswordError] = useState(\"\");\n//   const [emailError, setemailError] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const loginSubmit = (e) => {\n//     e.preventDefault();\n//     logMe();\n//   };\n\n//   const logMe = () => {\n//     var myHeaders = new Headers();\n//     myHeaders.append(\"Content-Type\", \"application/json\");\n//     var raw = JSON.stringify({\n//       \"email\": email,\n//       \"password\": password\n//     });\n//     var requestOptions = {\n//       method: 'POST',\n//       headers: myHeaders,\n//       body: raw,\n//       redirect: 'follow'\n//     };\n//     fetch(\"http://localhost:5000/login\", requestOptions)\n//       .then(response => response.text())\n//       .then(result => {\n//         localStorage.setItem(\"isLoggedIn\", result);\n//         if(result === \"true\"){\n//           navigate(\"/\");\n//         } else {\n//           setIsError(true)\n//         }\n//       })\n//       .catch(error => console.log('error', error));\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"container\">\n//         <div className=\"row d-flex justify-content-center\">\n//           <div className=\"col-md-4\">\n//             <form id=\"loginform\" onSubmit={loginSubmit}>\n//               <div className=\"form-group\">\n//                 <label>Email address</label>\n//                 <input\n//                   type=\"email\"\n//                   className=\"form-control\"\n//                   id=\"EmailInput\"\n//                   name=\"EmailInput\"\n//                   aria-describedby=\"emailHelp\"\n//                   placeholder=\"Enter email\"\n//                   onChange={(event) => setEmail(event.target.value)}\n//                 />\n//                 <small id=\"emailHelp\" className=\"text-danger form-text\">\n//                   {emailError}\n//                 </small>\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Password</label>\n//                 <input\n//                   type=\"password\"\n//                   className=\"form-control\"\n//                   id=\"exampleInputPassword1\"\n//                   placeholder=\"Password\"\n//                   onChange={(event) => setPassword(event.target.value)}\n//                 />\n//                 <small id=\"passworderror\" className=\"text-danger form-text\">\n//                   {passwordError}\n//                 </small>\n//               </div>\n//               {isError ? (\n//                 <p style={{color: \"red\"}}>{error}</p>\n//               ) : (\n//                 <>\n//                 </>\n//               )}\n//               <button type=\"submit\" className=\"btn btn-primary\">\n//                 Submit\n//               </button>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Login;\n\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isError, setIsError] = useState(false); // true = error, false = no error.\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const loginSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://localhost:5000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (response.ok) {\n      setIsLoggedIn(true);\n      navigate(\"/\");\n    } else {\n      setIsError(true);\n    }\n  };\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n    setEmailError(event.target.value ? \"\" : \"Email is required.\");\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n    setPasswordError(event.target.value ? \"\" : \"Password is required.\");\n  };\n  if (isLoggedIn) {\n    return null; // If logged in, redirect to the homepage.\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            id: \"loginform\",\n            onSubmit: loginSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"EmailInput\",\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                id: \"EmailInput\",\n                name: \"EmailInput\",\n                \"aria-describedby\": \"emailHelp\",\n                placeholder: \"Enter email\",\n                value: email,\n                onChange: handleEmailChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"emailHelp\",\n                className: \"text-danger form-text\",\n                children: emailError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInputPassword1\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                id: \"exampleInputPassword1\",\n                placeholder: \"Password\",\n                value: password,\n                onChange: handlePasswordChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"passworderror\",\n                className: \"text-danger form-text\",\n                children: passwordError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: \"Email or Password not matched\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"MxcT3Op4j01gUZYkk/XW0jbAvfI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","password","setPassword","email","setEmail","isError","setIsError","passwordError","setPasswordError","emailError","setEmailError","navigate","isLoggedIn","setIsLoggedIn","loginSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","handleEmailChange","event","target","value","handlePasswordChange","className","children","id","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","onChange","style","color","_c","$RefreshReg$"],"sources":["C:/Users/manoj/CodeBoxxManojKumarMuthu/mern-stack-example/mern/client/src/components/login.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// function Login() {\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [isError, setIsError] = useState(false) //true = error, false = no error.\r\n//   const error = \"Email or Password not matched\"\r\n//   const [passwordError, setpasswordError] = useState(\"\");\r\n//   const [emailError, setemailError] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n  \r\n//   const loginSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     logMe();\r\n//   };\r\n  \r\n//   const logMe = () => {\r\n//     var myHeaders = new Headers();\r\n//     myHeaders.append(\"Content-Type\", \"application/json\");\r\n//     var raw = JSON.stringify({\r\n//       \"email\": email,\r\n//       \"password\": password\r\n//     });\r\n//     var requestOptions = {\r\n//       method: 'POST',\r\n//       headers: myHeaders,\r\n//       body: raw,\r\n//       redirect: 'follow'\r\n//     };\r\n//     fetch(\"http://localhost:5000/login\", requestOptions)\r\n//       .then(response => response.text())\r\n//       .then(result => {\r\n//         localStorage.setItem(\"isLoggedIn\", result);\r\n//         if(result === \"true\"){\r\n//           navigate(\"/\");\r\n//         } else {\r\n//           setIsError(true)\r\n//         }\r\n//       })\r\n//       .catch(error => console.log('error', error));\r\n//   }\r\n  \r\n//   return (\r\n//     <div className=\"App\">\r\n//       <div className=\"container\">\r\n//         <div className=\"row d-flex justify-content-center\">\r\n//           <div className=\"col-md-4\">\r\n//             <form id=\"loginform\" onSubmit={loginSubmit}>\r\n//               <div className=\"form-group\">\r\n//                 <label>Email address</label>\r\n//                 <input\r\n//                   type=\"email\"\r\n//                   className=\"form-control\"\r\n//                   id=\"EmailInput\"\r\n//                   name=\"EmailInput\"\r\n//                   aria-describedby=\"emailHelp\"\r\n//                   placeholder=\"Enter email\"\r\n//                   onChange={(event) => setEmail(event.target.value)}\r\n//                 />\r\n//                 <small id=\"emailHelp\" className=\"text-danger form-text\">\r\n//                   {emailError}\r\n//                 </small>\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Password</label>\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   className=\"form-control\"\r\n//                   id=\"exampleInputPassword1\"\r\n//                   placeholder=\"Password\"\r\n//                   onChange={(event) => setPassword(event.target.value)}\r\n//                 />\r\n//                 <small id=\"passworderror\" className=\"text-danger form-text\">\r\n//                   {passwordError}\r\n//                 </small>\r\n//               </div>\r\n//               {isError ? (\r\n//                 <p style={{color: \"red\"}}>{error}</p>\r\n//               ) : (\r\n//                 <>\r\n//                 </>\r\n//               )}\r\n//               <button type=\"submit\" className=\"btn btn-primary\">\r\n//                 Submit\r\n//               </button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isError, setIsError] = useState(false); // true = error, false = no error.\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const loginSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch(\"http://localhost:5000/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      setIsLoggedIn(true);\r\n      navigate(\"/\");\r\n    } else {\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n    setEmailError(event.target.value ? \"\" : \"Email is required.\");\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPassword(event.target.value);\r\n    setPasswordError(event.target.value ? \"\" : \"Password is required.\");\r\n  };\r\n\r\n  if (isLoggedIn) {\r\n    return null; // If logged in, redirect to the homepage.\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"row d-flex justify-content-center\">\r\n          <div className=\"col-md-4\">\r\n            <form id=\"loginform\" onSubmit={loginSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"EmailInput\">Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"EmailInput\"\r\n                  name=\"EmailInput\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange={handleEmailChange}\r\n                />\r\n                <small id=\"emailHelp\" className=\"text-danger form-text\">\r\n                  {emailError}\r\n                </small>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputPassword1\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange={handlePasswordChange}\r\n                />\r\n                <small\r\n                  id=\"passworderror\"\r\n                  className=\"text-danger form-text\"\r\n                >\r\n                  {passwordError}\r\n                </small>\r\n              </div>\r\n              {isError && (\r\n                <p style={{ color: \"red\" }}>Email or Password not matched</p>\r\n              )}\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n           \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}