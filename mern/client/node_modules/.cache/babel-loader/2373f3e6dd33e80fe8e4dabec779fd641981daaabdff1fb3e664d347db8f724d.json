{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manoj\\\\CodeBoxxManojKumarMuthu\\\\mern-stack-example\\\\mern\\\\client\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setToken } from \"./auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isError, setIsError] = useState(false); //true = error, false = no error.\n  const error = \"Email or Password not matched\";\n  const [passwordError, setpasswordError] = useState(\"\");\n  const [emailError, setemailError] = useState(\"\");\n  const navigate = useNavigate();\n  const loginSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setToken(data.token);\n        navigate(\"/Home_page\");\n      } else {\n        setIsError(true);\n      }\n    } catch (error) {\n      console.error(error);\n      setIsError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            id: \"loginform\",\n            onSubmit: loginSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                id: \"EmailInput\",\n                name: \"EmailInput\",\n                \"aria-describedby\": \"emailHelp\",\n                placeholder: \"Enter email\",\n                onChange: event => setEmail(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"emailHelp\",\n                className: \"text-danger form-text\",\n                children: emailError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                id: \"exampleInputPassword1\",\n                placeholder: \"Password\",\n                onChange: event => setPassword(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"passworderror\",\n                className: \"text-danger form-text\",\n                children: passwordError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), isError ? /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"Kt6yiITroGobHacQ8VS+Ni0rchY=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\n\n// import React, { useState, useEffect } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import { useNavigate } from \"react-router-dom\";\n// import Alert  from \"react-bootstrap/Alert\";\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// function Login() {\n//   const [showAlert, setShowAlert] = useState(true);\n//   const [showToast, setShowToast] = useState(true);\n//   const isLoggedIn = localStorage.isLoggedIn;\n//   const [password, setPassword] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [isError, setIsError] = useState(false) //true = error, false = no error.\n//   const [isLogin, setIsLogin] = useState(false) //true = error, false = no error.\n//   const error = \"Connexion Fail\"\n//   const [passwordError, setpasswordError] = useState(\"\");\n//   const [emailError, setemailError] = useState(\"\");\n//   const navigate = useNavigate();\n//   useEffect(() => {\n//     if (error) {\n//       setShowAlert(true);\n//       setTimeout(() => {\n//         setShowAlert(false);\n//         setIsError('');\n//       }, 5000);\n//     }\n//   }, [error]);\n//   const logMe = () => {\n//     var myHeaders = new Headers();\n//     myHeaders.append(\"Content-Type\", \"application/json\");\n//     var raw = JSON.stringify({\n//       \"email\": email,\n//       \"password\": password\n//     });\n//     var requestOptions = {\n//       method: 'POST',\n//       headers: myHeaders,\n//       body: raw,\n//       redirect: 'follow'\n//     };\n//     fetch(\"http://localhost:5000/login\", requestOptions)\n//       .then(response => response.text())\n//       .then(result => {\n//         // isConnected(result)\n//           localStorage.setItem(\"isLoggedIn\", result);\n//         if(result === \"true\"){\n//     toast.success(':unicorn_face: Connected', {\n//         position: \"top-right\",\n//         autoClose: 5000,\n//         hideProgressBar: false,\n//         closeOnClick: true,\n//         pauseOnHover: true,\n//         draggable: true,\n//         progress: undefined,\n//         theme: \"light\",\n//     });\n//     setTimeout(() => window.location = \"/\", 7000);\n// } else {\n//     setIsError(true);\n//     setTimeout(() => setIsError(false), 5000);\n// }\n//       })\n//       .catch(error => console.log('error', error));\n//   }\n//   return (\n//     <div className=\"App\">\n//       <div className=\"container\">\n//         <div className=\"row d-flex justify-content-center\">\n//           <div className=\"col-md-4\">\n//             <form id=\"loginform\" onSubmit={logMe}>\n//               <div className=\"form-group\">\n//                 <label>Email address</label>\n//                 <input\n//                   type=\"email\"\n//                   className=\"form-control\"\n//                   id=\"EmailInput\"\n//                   name=\"EmailInput\"\n//                   aria-describedby=\"emailHelp\"\n//                   placeholder=\"Enter email\"\n//                   onChange={(event) => setEmail(event.target.value)}\n//                 />\n//                 <small id=\"emailHelp\" className=\"text-danger form-text\">\n//                   {emailError}\n//                 </small>\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Password</label>\n//                 <input\n//                   type=\"password\"\n//                   className=\"form-control\"\n//                   id=\"exampleInputPassword1\"\n//                   placeholder=\"Password\"\n//                   onChange={(event) => setPassword(event.target.value)}\n//                 />\n//                 <small id=\"passworderror\" className=\"text-danger form-text\">\n//                   {passwordError}\n//                 </small>\n//               </div>\n//               {showAlert &&\n//                   <Alert variant=\"danger\" onClose={() => setShowAlert(false)}>\n//                   <Alert.Heading>{error}</Alert.Heading>\n//                   </Alert>\n//               }\n//               <button type=\"submit\" className=\"btn btn-primary\">\n//                 Submit\n//               </button>\n//             <ToastContainer\n//               position=\"top-right\"\n//               autoClose={5000}\n//               hideProgressBar={false}\n//               newestOnTop={false}\n//               closeOnClick\n//               rtl={false}\n//               pauseOnFocusLoss\n//               draggable\n//               pauseOnHover\n//               theme=\"light\"\n//               />\n//             </form>\n//           </div>\n//           {/* Source: <a href=\"https://askavy.com/react-form/\">React Form</a> */}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// export default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","setToken","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","password","setPassword","email","setEmail","isError","setIsError","error","passwordError","setpasswordError","emailError","setemailError","navigate","loginSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","token","console","className","children","id","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","onChange","event","target","value","style","color","_c","$RefreshReg$"],"sources":["C:/Users/manoj/CodeBoxxManojKumarMuthu/mern-stack-example/mern/client/src/components/login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setToken } from \"./auth\";\r\n\r\nfunction Login() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isError, setIsError] = useState(false) //true = error, false = no error.\r\n  const error = \"Email or Password not matched\"\r\n  const [passwordError, setpasswordError] = useState(\"\");\r\n  const [emailError, setemailError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  \r\n  const loginSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setToken(data.token);\r\n        navigate(\"/Home_page\");\r\n      } else {\r\n        setIsError(true)\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setIsError(true)\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"row d-flex justify-content-center\">\r\n          <div className=\"col-md-4\">\r\n            <form id=\"loginform\" onSubmit={loginSubmit}>\r\n              <div className=\"form-group\">\r\n                <label>Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"EmailInput\"\r\n                  name=\"EmailInput\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={(event) => setEmail(event.target.value)}\r\n                />\r\n                <small id=\"emailHelp\" className=\"text-danger form-text\">\r\n                  {emailError}\r\n                </small>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputPassword1\"\r\n                  placeholder=\"Password\"\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                />\r\n                <small id=\"passworderror\" className=\"text-danger form-text\">\r\n                  {passwordError}\r\n                </small>\r\n              </div>\r\n              {isError ? (\r\n                <p style={{color: \"red\"}}>{error}</p>\r\n              ) : (\r\n                <>\r\n                </>\r\n              )}\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n\r\n\r\n            \r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import Alert  from \"react-bootstrap/Alert\";\r\n// import { ToastContainer, toast } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n// function Login() {\r\n//   const [showAlert, setShowAlert] = useState(true);\r\n//   const [showToast, setShowToast] = useState(true);\r\n//   const isLoggedIn = localStorage.isLoggedIn;\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [isError, setIsError] = useState(false) //true = error, false = no error.\r\n//   const [isLogin, setIsLogin] = useState(false) //true = error, false = no error.\r\n//   const error = \"Connexion Fail\"\r\n//   const [passwordError, setpasswordError] = useState(\"\");\r\n//   const [emailError, setemailError] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n//   useEffect(() => {\r\n//     if (error) {\r\n//       setShowAlert(true);\r\n//       setTimeout(() => {\r\n//         setShowAlert(false);\r\n//         setIsError('');\r\n//       }, 5000);\r\n//     }\r\n//   }, [error]);\r\n//   const logMe = () => {\r\n//     var myHeaders = new Headers();\r\n//     myHeaders.append(\"Content-Type\", \"application/json\");\r\n//     var raw = JSON.stringify({\r\n//       \"email\": email,\r\n//       \"password\": password\r\n//     });\r\n//     var requestOptions = {\r\n//       method: 'POST',\r\n//       headers: myHeaders,\r\n//       body: raw,\r\n//       redirect: 'follow'\r\n//     };\r\n//     fetch(\"http://localhost:5000/login\", requestOptions)\r\n//       .then(response => response.text())\r\n//       .then(result => {\r\n//         // isConnected(result)\r\n//           localStorage.setItem(\"isLoggedIn\", result);\r\n//         if(result === \"true\"){\r\n//     toast.success(':unicorn_face: Connected', {\r\n//         position: \"top-right\",\r\n//         autoClose: 5000,\r\n//         hideProgressBar: false,\r\n//         closeOnClick: true,\r\n//         pauseOnHover: true,\r\n//         draggable: true,\r\n//         progress: undefined,\r\n//         theme: \"light\",\r\n//     });\r\n//     setTimeout(() => window.location = \"/\", 7000);\r\n// } else {\r\n//     setIsError(true);\r\n//     setTimeout(() => setIsError(false), 5000);\r\n// }\r\n//       })\r\n//       .catch(error => console.log('error', error));\r\n//   }\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <div className=\"container\">\r\n//         <div className=\"row d-flex justify-content-center\">\r\n//           <div className=\"col-md-4\">\r\n//             <form id=\"loginform\" onSubmit={logMe}>\r\n//               <div className=\"form-group\">\r\n//                 <label>Email address</label>\r\n//                 <input\r\n//                   type=\"email\"\r\n//                   className=\"form-control\"\r\n//                   id=\"EmailInput\"\r\n//                   name=\"EmailInput\"\r\n//                   aria-describedby=\"emailHelp\"\r\n//                   placeholder=\"Enter email\"\r\n//                   onChange={(event) => setEmail(event.target.value)}\r\n//                 />\r\n//                 <small id=\"emailHelp\" className=\"text-danger form-text\">\r\n//                   {emailError}\r\n//                 </small>\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Password</label>\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   className=\"form-control\"\r\n//                   id=\"exampleInputPassword1\"\r\n//                   placeholder=\"Password\"\r\n//                   onChange={(event) => setPassword(event.target.value)}\r\n//                 />\r\n//                 <small id=\"passworderror\" className=\"text-danger form-text\">\r\n//                   {passwordError}\r\n//                 </small>\r\n//               </div>\r\n//               {showAlert &&\r\n//                   <Alert variant=\"danger\" onClose={() => setShowAlert(false)}>\r\n//                   <Alert.Heading>{error}</Alert.Heading>\r\n//                   </Alert>\r\n//               }\r\n//               <button type=\"submit\" className=\"btn btn-primary\">\r\n//                 Submit\r\n//               </button>\r\n//             <ToastContainer\r\n//               position=\"top-right\"\r\n//               autoClose={5000}\r\n//               hideProgressBar={false}\r\n//               newestOnTop={false}\r\n//               closeOnClick\r\n//               rtl={false}\r\n//               pauseOnFocusLoss\r\n//               draggable\r\n//               pauseOnHover\r\n//               theme=\"light\"\r\n//               />\r\n//             </form>\r\n//           </div>\r\n//           {/* Source: <a href=\"https://askavy.com/react-form/\">React Form</a> */}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n// export default Login;"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}