{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manoj\\\\CodeBoxxManojKumarMuthu\\\\mern-stack-example\\\\mern\\\\client\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import { useNavigate } from \"react-router-dom\";\n\n// function Login() {\n//   const [password, setPassword] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [isError, setIsError] = useState(false) //true = error, false = no error.\n//   const error = \"Email or Password not matched\"\n//   const [passwordError, setpasswordError] = useState(\"\");\n//   const [emailError, setemailError] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const loginSubmit = (e) => {\n//     e.preventDefault();\n//     logMe();\n//   };\n\n//   const logMe = () => {\n//     var myHeaders = new Headers();\n//     myHeaders.append(\"Content-Type\", \"application/json\");\n//     var raw = JSON.stringify({\n//       \"email\": email,\n//       \"password\": password\n//     });\n//     var requestOptions = {\n//       method: 'POST',\n//       headers: myHeaders,\n//       body: raw,\n//       redirect: 'follow'\n//     };\n//     fetch(\"http://localhost:5000/login\", requestOptions)\n//       .then(response => response.text())\n//       .then(result => {\n//         localStorage.setItem(\"isLoggedIn\", result);\n//         if(result === \"true\"){\n//           navigate(\"/\");\n//         } else {\n//           setIsError(true)\n//         }\n//       })\n//       .catch(error => console.log('error', error));\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"container\">\n//         <div className=\"row d-flex justify-content-center\">\n//           <div className=\"col-md-4\">\n//             <form id=\"loginform\" onSubmit={loginSubmit}>\n//               <div className=\"form-group\">\n//                 <label>Email address</label>\n//                 <input\n//                   type=\"email\"\n//                   className=\"form-control\"\n//                   id=\"EmailInput\"\n//                   name=\"EmailInput\"\n//                   aria-describedby=\"emailHelp\"\n//                   placeholder=\"Enter email\"\n//                   onChange={(event) => setEmail(event.target.value)}\n//                 />\n//                 <small id=\"emailHelp\" className=\"text-danger form-text\">\n//                   {emailError}\n//                 </small>\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Password</label>\n//                 <input\n//                   type=\"password\"\n//                   className=\"form-control\"\n//                   id=\"exampleInputPassword1\"\n//                   placeholder=\"Password\"\n//                   onChange={(event) => setPassword(event.target.value)}\n//                 />\n//                 <small id=\"passworderror\" className=\"text-danger form-text\">\n//                   {passwordError}\n//                 </small>\n//               </div>\n//               {isError ? (\n//                 <p style={{color: \"red\"}}>{error}</p>\n//               ) : (\n//                 <>\n//                 </>\n//               )}\n//               <button type=\"submit\" className=\"btn btn-primary\">\n//                 Submit\n//               </button>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Login;\n\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setToken } from \".\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isError, setIsError] = useState(false); //true = error, false = no error.\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setToken(data.token);\n        navigate(\"/\");\n      } else {\n        setIsError(true);\n        setErrorMessage(data.message);\n      }\n    } catch (error) {\n      console.error(error);\n      setIsError(true);\n      setErrorMessage(\"Something went wrong. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"emailInput\",\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                id: \"emailInput\",\n                name: \"emailInput\",\n                \"aria-describedby\": \"emailHelp\",\n                placeholder: \"Enter email\",\n                onChange: event => setEmail(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"passwordInput\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 1\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                id: \"passwordInput\",\n                placeholder: \"Password\",\n                onChange: event => setPassword(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 1\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 1\n            }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-danger\",\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 1\n  }, this);\n}\n_s(Login, \"vinbZ6ZFGq2PXBfyU2VbvT8Yz8U=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","setToken","jsxDEV","_jsxDEV","Login","_s","password","setPassword","email","setEmail","isError","setIsError","errorMessage","setErrorMessage","navigate","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","token","message","error","console","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","placeholder","onChange","target","value","_c","$RefreshReg$"],"sources":["C:/Users/manoj/CodeBoxxManojKumarMuthu/mern-stack-example/mern/client/src/components/login.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// function Login() {\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [isError, setIsError] = useState(false) //true = error, false = no error.\r\n//   const error = \"Email or Password not matched\"\r\n//   const [passwordError, setpasswordError] = useState(\"\");\r\n//   const [emailError, setemailError] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n  \r\n//   const loginSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     logMe();\r\n//   };\r\n  \r\n//   const logMe = () => {\r\n//     var myHeaders = new Headers();\r\n//     myHeaders.append(\"Content-Type\", \"application/json\");\r\n//     var raw = JSON.stringify({\r\n//       \"email\": email,\r\n//       \"password\": password\r\n//     });\r\n//     var requestOptions = {\r\n//       method: 'POST',\r\n//       headers: myHeaders,\r\n//       body: raw,\r\n//       redirect: 'follow'\r\n//     };\r\n//     fetch(\"http://localhost:5000/login\", requestOptions)\r\n//       .then(response => response.text())\r\n//       .then(result => {\r\n//         localStorage.setItem(\"isLoggedIn\", result);\r\n//         if(result === \"true\"){\r\n//           navigate(\"/\");\r\n//         } else {\r\n//           setIsError(true)\r\n//         }\r\n//       })\r\n//       .catch(error => console.log('error', error));\r\n//   }\r\n  \r\n//   return (\r\n//     <div className=\"App\">\r\n//       <div className=\"container\">\r\n//         <div className=\"row d-flex justify-content-center\">\r\n//           <div className=\"col-md-4\">\r\n//             <form id=\"loginform\" onSubmit={loginSubmit}>\r\n//               <div className=\"form-group\">\r\n//                 <label>Email address</label>\r\n//                 <input\r\n//                   type=\"email\"\r\n//                   className=\"form-control\"\r\n//                   id=\"EmailInput\"\r\n//                   name=\"EmailInput\"\r\n//                   aria-describedby=\"emailHelp\"\r\n//                   placeholder=\"Enter email\"\r\n//                   onChange={(event) => setEmail(event.target.value)}\r\n//                 />\r\n//                 <small id=\"emailHelp\" className=\"text-danger form-text\">\r\n//                   {emailError}\r\n//                 </small>\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Password</label>\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   className=\"form-control\"\r\n//                   id=\"exampleInputPassword1\"\r\n//                   placeholder=\"Password\"\r\n//                   onChange={(event) => setPassword(event.target.value)}\r\n//                 />\r\n//                 <small id=\"passworderror\" className=\"text-danger form-text\">\r\n//                   {passwordError}\r\n//                 </small>\r\n//               </div>\r\n//               {isError ? (\r\n//                 <p style={{color: \"red\"}}>{error}</p>\r\n//               ) : (\r\n//                 <>\r\n//                 </>\r\n//               )}\r\n//               <button type=\"submit\" className=\"btn btn-primary\">\r\n//                 Submit\r\n//               </button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setToken } from \".\";\r\n\r\nfunction Login() {\r\nconst [password, setPassword] = useState(\"\");\r\nconst [email, setEmail] = useState(\"\");\r\nconst [isError, setIsError] = useState(false); //true = error, false = no error.\r\nconst [errorMessage, setErrorMessage] = useState(\"\");\r\nconst navigate = useNavigate();\r\n\r\nconst handleSubmit = async (event) => {\r\nevent.preventDefault();\r\ntry {\r\nconst response = await fetch(\"http://localhost:5000/login\", {\r\nmethod: \"POST\",\r\nheaders: { \"Content-Type\": \"application/json\" },\r\nbody: JSON.stringify({ email, password }),\r\n});\r\nconst data = await response.json();\r\nif (response.ok) {\r\nsetToken(data.token);\r\nnavigate(\"/\");\r\n} else {\r\nsetIsError(true);\r\nsetErrorMessage(data.message);\r\n}\r\n} catch (error) {\r\nconsole.error(error);\r\nsetIsError(true);\r\nsetErrorMessage(\"Something went wrong. Please try again later.\");\r\n}\r\n};\r\n\r\nreturn (\r\n<div className=\"App\">\r\n<div className=\"container\">\r\n<div className=\"row d-flex justify-content-center\">\r\n<div className=\"col-md-4\">\r\n<form onSubmit={handleSubmit}>\r\n<div className=\"form-group\">\r\n<label htmlFor=\"emailInput\">Email address</label>\r\n<input\r\ntype=\"email\"\r\nclassName=\"form-control\"\r\nid=\"emailInput\"\r\nname=\"emailInput\"\r\naria-describedby=\"emailHelp\"\r\nplaceholder=\"Enter email\"\r\nonChange={(event) => setEmail(event.target.value)}\r\n/>\r\n</div>\r\n<div className=\"form-group\">\r\n<label htmlFor=\"passwordInput\">Password</label>\r\n<input\r\ntype=\"password\"\r\nclassName=\"form-control\"\r\nid=\"passwordInput\"\r\nplaceholder=\"Password\"\r\nonChange={(event) => setPassword(event.target.value)}\r\n/>\r\n</div>\r\n{isError && (\r\n<p className=\"text-danger\">{errorMessage}</p>\r\n)}\r\n<button type=\"submit\" className=\"btn btn-primary\">\r\nSubmit\r\n</button>\r\n</form>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n);\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}