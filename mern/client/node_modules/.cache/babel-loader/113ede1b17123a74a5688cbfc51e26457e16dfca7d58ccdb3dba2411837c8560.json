{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manoj\\\\CodeBoxxManojKumarMuthu\\\\mern-stack-example\\\\mern\\\\client\\\\src\\\\components\\\\recordList.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { Link, NavLink } from \"react-router-dom\";\n\n// const Record = (props) => (\n//   <tr>\n//     <td>{props.record.First_Name}</td>\n//     <td>{props.record.Last_Name}</td>\n//     <td>{props.record.Email}</td>\n//     <td>{props.record.Region}</td>\n//     <td>{props.record.Rating}</td>\n//     <td>{props.record.Fee}</td>\n//     <td>{props.record.Sale}</td>\n//     <td>\n//       <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\n//       <button className=\"btn btn-link\"\n//         onClick={() => {\n//           props.deleteRecord(props.record._id);\n//         }}\n//       >\n//         Delete\n//       </button>\n//     </td>\n//   </tr>\n// );\n\n// export default function RecordList() {\n//   const [records, setRecords] = useState([]);\n\n//   // This method fetches the records from the database.\n//   useEffect(() => {\n//     async function getRecords() {\n//       const response = await fetch(`http://localhost:5000/record/`);\n\n//       if (!response.ok) {\n//         const message = `An error occured: ${response.statusText}`;\n//         window.alert(message);\n//         return;\n//       }\n\n//       const records = await response.json();\n//       setRecords(records);\n//     }\n\n//     getRecords();\n\n//     return;\n//   }, [records.length]);\n\n//   // This method will delete a record\n//   async function deleteRecord(id) {\n//     await fetch(`http://localhost:5000/${id}`, {\n//       method: \"DELETE\"\n//     });\n\n//     const newRecords = records.filter((el) => el._id !== id);\n//     setRecords(newRecords);\n//   }\n\n//   // This method will map out the records on the table\n//   function recordList() {\n//     return records.map((record) => {\n//       return (\n//         <Record\n//           record={record}\n//           deleteRecord={() => deleteRecord(record._id)}\n//           key={record._id}\n//         />\n//       );\n//     });\n//   }\n\n//   // This following section will display the table with the records of individuals.\n//   return (\n//     <div>\n//       <div>\n//         <NavLink className=\"btn btn-secondary mt-2\" to=\"/create\">\n//           Create Agent\n//         </NavLink>\n//       </div>\n//       <h3 style={{ textAlign: \"center\" }}>Record List</h3>\n//       <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n//         <thead>\n//           <tr>\n//             <th>First Name</th>\n//             <th>Last Name</th>\n//             <th>Email</th>\n//             <th>Region</th>\n//             <th>Rating</th>\n//             <th>Fee</th>\n//             <th>Sale</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>{recordList()}</tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// RecordList.js\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ConfirmationModal from \"./ConfirmationModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Record = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.First_Name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.Last_Name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.Email\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.Region\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.Rating\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.Fee\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.record.Sale\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-link\",\n      to: `/edit/${props.record._id}`,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), \" \", \"|\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-link\",\n      onClick: () => {\n        setShowConfirmationModal(true);\n        setAgent(props.record);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n      message: \"Are you sure you want to delete this agent?\",\n      showConfirmationModal: showConfirmationModal,\n      onConfirm: handleDeleteAgent,\n      onCancel: handleCancelDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 107,\n  columnNumber: 3\n}, this);\n_c = Record;\nexport default function RecordList() {\n  _s();\n  const [records, setRecords] = useState([]);\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\n  const [agent, setAgent] = useState(null);\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5000/record/`);\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const records = await response.json();\n      setRecords(records);\n    }\n    getRecords();\n  }, []);\n  async function deleteAgent(id) {\n    await fetch(`http://localhost:5000/record/${id}`, {\n      method: \"DELETE\"\n    });\n    const newRecords = records.filter(el => el._id !== id);\n    setRecords(newRecords);\n    setShowConfirmationModal(false);\n    setAgent(null);\n  }\n  const handleDeleteAgent = () => {\n    if (agent) {\n      deleteAgent(agent._id);\n    }\n  };\n  const handleCancelDelete = () => {\n    setShowConfirmationModal(false);\n    setAgent(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Record List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"thead-light\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: records.map(record => /*#__PURE__*/_jsxDEV(Record, {\n          record: record\n        }, record._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(RecordList, \"E+cBNe4PCzUqUiHVw052no4+0yA=\");\n_c2 = RecordList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"RecordList\");","map":{"version":3,"names":["React","useEffect","useState","Link","ConfirmationModal","jsxDEV","_jsxDEV","Record","props","children","record","First_Name","fileName","_jsxFileName","lineNumber","columnNumber","Last_Name","Email","Region","Rating","Fee","Sale","className","to","_id","onClick","setShowConfirmationModal","setAgent","message","showConfirmationModal","onConfirm","handleDeleteAgent","onCancel","handleCancelDelete","_c","RecordList","_s","records","setRecords","agent","getRecords","response","fetch","ok","statusText","window","alert","json","deleteAgent","id","method","newRecords","filter","el","map","_c2","$RefreshReg$"],"sources":["C:/Users/manoj/CodeBoxxManojKumarMuthu/mern-stack-example/mern/client/src/components/recordList.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { Link, NavLink } from \"react-router-dom\";\r\n\r\n\r\n// const Record = (props) => (\r\n//   <tr>\r\n//     <td>{props.record.First_Name}</td>\r\n//     <td>{props.record.Last_Name}</td>\r\n//     <td>{props.record.Email}</td>\r\n//     <td>{props.record.Region}</td>\r\n//     <td>{props.record.Rating}</td>\r\n//     <td>{props.record.Fee}</td>\r\n//     <td>{props.record.Sale}</td>\r\n//     <td>\r\n//       <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\r\n//       <button className=\"btn btn-link\"\r\n//         onClick={() => {\r\n//           props.deleteRecord(props.record._id);\r\n//         }}\r\n//       >\r\n//         Delete\r\n//       </button>\r\n//     </td>\r\n//   </tr>\r\n// );\r\n\r\n// export default function RecordList() {\r\n//   const [records, setRecords] = useState([]);\r\n\r\n//   // This method fetches the records from the database.\r\n//   useEffect(() => {\r\n//     async function getRecords() {\r\n//       const response = await fetch(`http://localhost:5000/record/`);\r\n\r\n//       if (!response.ok) {\r\n//         const message = `An error occured: ${response.statusText}`;\r\n//         window.alert(message);\r\n//         return;\r\n//       }\r\n\r\n//       const records = await response.json();\r\n//       setRecords(records);\r\n//     }\r\n\r\n//     getRecords();\r\n\r\n//     return;\r\n//   }, [records.length]);\r\n\r\n//   // This method will delete a record\r\n//   async function deleteRecord(id) {\r\n//     await fetch(`http://localhost:5000/${id}`, {\r\n//       method: \"DELETE\"\r\n//     });\r\n\r\n//     const newRecords = records.filter((el) => el._id !== id);\r\n//     setRecords(newRecords);\r\n//   }\r\n\r\n//   // This method will map out the records on the table\r\n//   function recordList() {\r\n//     return records.map((record) => {\r\n//       return (\r\n//         <Record\r\n//           record={record}\r\n//           deleteRecord={() => deleteRecord(record._id)}\r\n//           key={record._id}\r\n//         />\r\n//       );\r\n//     });\r\n//   }\r\n\r\n//   // This following section will display the table with the records of individuals.\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <NavLink className=\"btn btn-secondary mt-2\" to=\"/create\">\r\n//           Create Agent\r\n//         </NavLink>\r\n//       </div>\r\n//       <h3 style={{ textAlign: \"center\" }}>Record List</h3>\r\n//       <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>First Name</th>\r\n//             <th>Last Name</th>\r\n//             <th>Email</th>\r\n//             <th>Region</th>\r\n//             <th>Rating</th>\r\n//             <th>Fee</th>\r\n//             <th>Sale</th>\r\n//             <th>Action</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>{recordList()}</tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// RecordList.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ConfirmationModal from \"./ConfirmationModal\";\r\n\r\nconst Record = (props) => (\r\n  <tr>\r\n    <td>{props.record.First_Name}</td>\r\n    <td>{props.record.Last_Name}</td>\r\n    <td>{props.record.Email}</td>\r\n    <td>{props.record.Region}</td>\r\n    <td>{props.record.Rating}</td>\r\n    <td>{props.record.Fee}</td>\r\n    <td>{props.record.Sale}</td>\r\n    <td>\r\n      <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>\r\n        Edit\r\n      </Link>{\" \"}\r\n      |\r\n      <button\r\n        className=\"btn btn-link\"\r\n        onClick={() => {\r\n          setShowConfirmationModal(true);\r\n          setAgent(props.record);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n      <ConfirmationModal\r\n        message=\"Are you sure you want to delete this agent?\"\r\n        showConfirmationModal={showConfirmationModal}\r\n        onConfirm={handleDeleteAgent}\r\n        onCancel={handleCancelDelete}\r\n      />\r\n    </td>\r\n  </tr>\r\n);\r\n\r\nexport default function RecordList() {\r\n  const [records, setRecords] = useState([]);\r\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\r\n  const [agent, setAgent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function getRecords() {\r\n      const response = await fetch(`http://localhost:5000/record/`);\r\n\r\n      if (!response.ok) {\r\n        const message = `An error occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n\r\n      const records = await response.json();\r\n      setRecords(records);\r\n    }\r\n\r\n    getRecords();\r\n  }, []);\r\n\r\n  async function deleteAgent(id) {\r\n    await fetch(`http://localhost:5000/record/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n\r\n    const newRecords = records.filter((el) => el._id !== id);\r\n    setRecords(newRecords);\r\n    setShowConfirmationModal(false);\r\n    setAgent(null);\r\n  }\r\n\r\n  const handleDeleteAgent = () => {\r\n    if (agent) {\r\n      deleteAgent(agent._id);\r\n    }\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setShowConfirmationModal(false);\r\n    setAgent(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Record List</h3>\r\n      <table className=\"table\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Email</th>\r\n            <th>Region</th>\r\n            <th>Rating</th>\r\n            <th>Fee</th>\r\n            <th>Sale</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {records.map((record) => (\r\n            <Record record={record} key={record._id} />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}