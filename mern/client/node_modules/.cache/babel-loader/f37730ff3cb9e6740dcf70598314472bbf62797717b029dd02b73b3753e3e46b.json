{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router\";\n\n// export default function Create() {\n//   const [form, setForm] = useState({\n//     agent_name: \"\",\n//     transaction_number: \"\",\n//     sale: \"\",\n//     date: \"\"\n//   });\n//   const navigate = useNavigate();\n\n//   // These methods will update the state properties.\n//   function updateForm(value) {\n//     return setForm((prev) => {\n//       return { ...prev, ...value };\n//     });\n//   }\n\n//   // This function will handle the submission.\n//   async function onSubmit(e) {\n//     e.preventDefault();\n\n//     // When a post request is sent to the create url, we'll add a new record to the database.\n//     const newPerson = { ...form };\n\n//     await fetch(\"http://localhost:5000/transaction/add\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(newPerson),\n//     })\n//     .catch(error => {\n//       window.alert(error);\n//       return;\n//     });\n\n//     setForm({ \n//     agent_name: \"\",\n//     transaction_number: \"\",\n//     sale: \"\",\n//     date: \"\" });\n//     navigate(\"/transaction\");\n//   }\n\n//   // This following section will display the form that takes the input from the user.\n//   return (\n//     <div>\n//       <h3>Create New Transaction</h3>\n//       <form onSubmit={onSubmit}>\n//         <div className=\"form-group\">\n//          <label htmlFor=\"agent_name\">Agent Name</label>\n//           <select\n//             className=\"form-control\"\n//             id=\"agent_name\"\n//             value={form.agent_name}\n//             onChange={(e) => updateForm({ agent_name: e.target.value })}\n//           >\n//             <option value=\"\">Select Agent</option>\n//             <option value=\"Goku\">Goku</option>\n//             <option value=\"Lelouch\">Lelouch</option>\n//             <option value=\"Naruto\">Naruto</option>\n//             <option value=\"Bleach\">Bleach</option>\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"transaction_number\">Transaction Number</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"transaction_number\"\n//             value={form.transaction_number}\n//             onChange={(e) => updateForm({ transaction_number: e.target.value })}\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"sale\">Sale</label>\n//           <input\n//             type=\"number\"\n//             className=\"form-control\"\n//             id=\"sale\"\n//             value={form.sale}\n//             min=\"0\"\n//             onChange={(e) => updateForm({ sale: Math.max(0, e.target.value) })}\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <input\n//             type=\"submit\"\n//             value=\"Create Transaction\"\n//             className=\"btn btn-primary\"\n//           />\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router\";\n\n// export default function Create() {\n//   const [form, setForm] = useState({\n//     agent_name: \"\",\n//     transaction_number: \"\",\n//     sale: \"\",\n//     date: \"\"\n//   });\n//   const navigate = useNavigate();\n\n//   // These methods will update the state properties.\n//   function updateForm(value) {\n//     return setForm((prev) => {\n//       return { ...prev, ...value };\n//     });\n//   }\n\n//   // This function will handle the submission.\n//   async function onSubmit(e) {\n//     e.preventDefault();\n\n//     // Show confirmation modal before creating the transaction\n//     const confirmation = window.confirm(\"Are you sure you want to continue?\");\n//     if (!confirmation) {\n//       return;\n//     }\n\n//     // When a post request is sent to the create url, we'll add a new record to the database.\n//     const newPerson = { ...form };\n\n//     await fetch(\"http://localhost:5000/transaction/add\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(newPerson),\n//     })\n//     .catch(error => {\n//       window.alert(error);\n//       return;\n//     });\n\n//     setForm({ \n//     agent_name: \"\",\n//     transaction_number: \"\",\n//     sale: \"\",\n//     date: \"\" });\n//     navigate(\"/transaction\");\n//   }\n\n//   // This following section will display the form that takes the input from the user.\n//   return (\n//     <div>\n//       <h3>Create New Transaction</h3>\n//       <form onSubmit={onSubmit}>\n//         <div className=\"form-group\">\n//          <label htmlFor=\"agent_name\">Agent Name</label>\n//           <select\n//             className=\"form-control\"\n//             id=\"agent_name\"\n//             value={form.agent_name}\n//             onChange={(e) => updateForm({ agent_name: e.target.value })}\n//           >\n//             <option value=\"\">Select Agent</option>\n//             <option value=\"Goku\">Goku</option>\n//             <option value=\"Lelouch\">Lelouch</option>\n//             <option value=\"Naruto\">Naruto</option>\n//             <option value=\"Bleach\">Bleach</option>\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"transaction_number\">Transaction Number</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"transaction_number\"\n//             value={form.transaction_number}\n//             onChange={(e) => updateForm({ transaction_number: e.target.value })}\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"sale\">Sale</label>\n//           <input\n//             type=\"number\"\n//             className=\"form-control\"\n//             id=\"sale\"\n//             value={form.sale}\n//             min=\"0\"\n//             onChange={(e) => updateForm({ sale: Math.max(0, e.target.value) })}\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <input\n//             type=\"submit\"\n//             value=\"Create Transaction\"\n//             className=\"btn btn-primary\"\n//           />\n//         </div>\n//       </form>\n//       {/* Confirmation Modal */}\n//       <div\n//         className=\"modal fade\"\n//         id=\"confirmationModal\"\n//         tabIndex=\"-1\"\n//         role=\"dialog\"\n//         aria-labelledby=\"confirmationModalLabel\"\n//         aria-hidden=\"true\"\n//       >\n//         <div className=\"modal-dialog\" role=\"document\">\n//           <div className=\"modal-content\">\n//             <div className=\"modal-header\">\n//               <h5 className=\"modal-title\" id=\"confirmationModalLabel\">\n//                 Are you sure you want to\n\n//                 </h5>\n// <button\n//              type=\"button\"\n//              className=\"close\"\n//              data-dismiss=\"modal\"\n//              aria-label=\"Close\"\n//            >\n// <span aria-hidden=\"true\">Ã—</span>\n// </button>\n// </div>\n// <div className=\"modal-body\">\n// This action will create a new transaction. Are you sure you want to continue?\n// </div>\n// <div className=\"modal-footer\">\n// <button\n//              type=\"button\"\n//              className=\"btn btn-secondary\"\n//              data-dismiss=\"modal\"\n//            >\n// No/Back\n// </button>\n// <button type=\"submit\" className=\"btn btn-primary\">\n// Yes/Confirm\n// </button>\n// </div>\n// </div>\n// </div>\n// </div>\n// </div>\n// );\n// }\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router\";\n\n// export default function Create() {\n//   const [form, setForm] = useState({\n//     agent_name: \"\",\n//     transaction_number: \"\",\n//     sale: \"\",\n//     date: \"\"\n//   });\n//   const navigate = useNavigate();\n\n//   // Update the form state with the provided values\n//   function updateForm(values) {\n//     setForm(prev => ({ ...prev, ...values }));\n//   }\n\n//   // Handle form submission\n//   async function onSubmit(event) {\n//     event.preventDefault();\n\n//     // Show confirmation dialog before creating the transaction\n//     const confirmation = window.confirm(\n//       \"Are you sure you want to create a new transaction?\"\n//     );\n//     if (!confirmation) {\n//       return;\n//     }\n\n//     try {\n//       // Send a POST request to the backend to create a new transaction\n//       await fetch(\"http://localhost:5000/transaction/add\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(form),\n//       });\n\n//       // Reset the form state and navigate to the transaction page\n//       setForm({\n//         agent_name: \"\",\n//         transaction_number: \"\",\n//         sale: \"\",\n//         date: \"\"\n//       });\n//       navigate(\"/transaction\");\n//     } catch (error) {\n//       // Show an error alert if the request fails\n//       window.alert(error);\n//     }\n//   }\n\n//   // Render the form component\n//   return (\n//     <div>\n//       <h3>Create New Transaction</h3>\n//       <form onSubmit={onSubmit}>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"agent_name\">Agent Name</label>\n//           <select\n//             className=\"form-control\"\n//             id=\"agent_name\"\n//             value={form.agent_name}\n//             onChange={event => updateForm({ agent_name: event.target.value })}\n//           >\n//             <option value=\"\">Select Agent</option>\n//             <option value=\"Goku\">Goku</option>\n//             <option value=\"Lelouch\">Lelouch</option>\n//             <option value=\"Naruto\">Naruto</option>\n//             <option value=\"Bleach\">Bleach</option>\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"transaction_number\">Transaction Number</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"transaction_number\"\n//             value={form.transaction_number}\n//             onChange={event =>\n//               updateForm({ transaction_number: event.target.value })\n//             }\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"sale\">Sale</label>\n//           <input\n//             type=\"number\"\n//             className=\"form-control\"\n//             id=\"sale\"\n//             value={form.sale}\n//             min=\"0\"\n//             onChange={event =>\n//               updateForm({ sale: Math.max(0, event.target.value) })\n//             }\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <input\n//             type=\"submit\"\n//             value=\"Create Transaction\"\n//             className=\"btn btn-primary\"\n//           />\n//         </div>\n//       </form>\n//       {/* Confirmation Modal */}\n//       <div\n//         className=\"modal fade\"\n//         id=\"confirmationModal\"\n//         tabIndex=\"-1\"\n//         role=\"dialog\"\n//         aria-labelledby=\"confirmationModalLabel\"\n//         aria-hidden=\"true\"\n//       >\n//         <div className=\"modal-dialog\" role=\"document\">\n//           <div className=\"modal-content\">\n//             <div className=\"modal-header\">\n//               <h5 className=\"modal-title\" id=\"confirmationModalLabel\">\n//                 Are you sure you want to create a new transaction?\n//               </h5>\n//               <button\n//                 type=\"button\"\n//                 className=\"close\"\n//                 data-dismiss=\"modal\"\n//                 aria-label=\"Close\"\n//               >\n//                 <span aria-hidden=\"true\">Ã—</span>\n//               </button>\n//             </div>\n//             <div className=\"modal-body\">\n//               <p>Please confirm that you want to create a new transaction.</p>\n//             </div>\n//           <div className=\"modal-footer\">\n//               <button\n//               type=\"button\"\n//               className=\"btn btn-secondary\"\n//               data-dismiss=\"modal\"\n//               >\n//                 Cancel\n//               </button>\n//               <button\n//               type=\"button\"\n//               className=\"btn btn-primary\"\n//               onClick={onSubmit}\n//               >\n//                 Create Transaction\n//               </button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n// </div>\n// );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/manoj/CodeBoxxManojKumarMuthu/mern-stack-example/mern/client/src/components/createTransaction.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router\";\r\n\r\n// export default function Create() {\r\n//   const [form, setForm] = useState({\r\n//     agent_name: \"\",\r\n//     transaction_number: \"\",\r\n//     sale: \"\",\r\n//     date: \"\"\r\n//   });\r\n//   const navigate = useNavigate();\r\n\r\n//   // These methods will update the state properties.\r\n//   function updateForm(value) {\r\n//     return setForm((prev) => {\r\n//       return { ...prev, ...value };\r\n//     });\r\n//   }\r\n\r\n//   // This function will handle the submission.\r\n//   async function onSubmit(e) {\r\n//     e.preventDefault();\r\n\r\n//     // When a post request is sent to the create url, we'll add a new record to the database.\r\n//     const newPerson = { ...form };\r\n\r\n//     await fetch(\"http://localhost:5000/transaction/add\", {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//       body: JSON.stringify(newPerson),\r\n//     })\r\n//     .catch(error => {\r\n//       window.alert(error);\r\n//       return;\r\n//     });\r\n\r\n//     setForm({ \r\n//     agent_name: \"\",\r\n//     transaction_number: \"\",\r\n//     sale: \"\",\r\n//     date: \"\" });\r\n//     navigate(\"/transaction\");\r\n//   }\r\n\r\n//   // This following section will display the form that takes the input from the user.\r\n//   return (\r\n//     <div>\r\n//       <h3>Create New Transaction</h3>\r\n//       <form onSubmit={onSubmit}>\r\n//         <div className=\"form-group\">\r\n//          <label htmlFor=\"agent_name\">Agent Name</label>\r\n//           <select\r\n//             className=\"form-control\"\r\n//             id=\"agent_name\"\r\n//             value={form.agent_name}\r\n//             onChange={(e) => updateForm({ agent_name: e.target.value })}\r\n//           >\r\n//             <option value=\"\">Select Agent</option>\r\n//             <option value=\"Goku\">Goku</option>\r\n//             <option value=\"Lelouch\">Lelouch</option>\r\n//             <option value=\"Naruto\">Naruto</option>\r\n//             <option value=\"Bleach\">Bleach</option>\r\n//           </select>\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"transaction_number\">Transaction Number</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"transaction_number\"\r\n//             value={form.transaction_number}\r\n//             onChange={(e) => updateForm({ transaction_number: e.target.value })}\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"sale\">Sale</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             className=\"form-control\"\r\n//             id=\"sale\"\r\n//             value={form.sale}\r\n//             min=\"0\"\r\n//             onChange={(e) => updateForm({ sale: Math.max(0, e.target.value) })}\r\n//           />\r\n//         </div>\r\n  \r\n//         <div className=\"form-group\">\r\n//           <input\r\n//             type=\"submit\"\r\n//             value=\"Create Transaction\"\r\n//             className=\"btn btn-primary\"\r\n//           />\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router\";\r\n\r\n// export default function Create() {\r\n//   const [form, setForm] = useState({\r\n//     agent_name: \"\",\r\n//     transaction_number: \"\",\r\n//     sale: \"\",\r\n//     date: \"\"\r\n//   });\r\n//   const navigate = useNavigate();\r\n\r\n//   // These methods will update the state properties.\r\n//   function updateForm(value) {\r\n//     return setForm((prev) => {\r\n//       return { ...prev, ...value };\r\n//     });\r\n//   }\r\n\r\n//   // This function will handle the submission.\r\n//   async function onSubmit(e) {\r\n//     e.preventDefault();\r\n\r\n//     // Show confirmation modal before creating the transaction\r\n//     const confirmation = window.confirm(\"Are you sure you want to continue?\");\r\n//     if (!confirmation) {\r\n//       return;\r\n//     }\r\n\r\n//     // When a post request is sent to the create url, we'll add a new record to the database.\r\n//     const newPerson = { ...form };\r\n\r\n//     await fetch(\"http://localhost:5000/transaction/add\", {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//       body: JSON.stringify(newPerson),\r\n//     })\r\n//     .catch(error => {\r\n//       window.alert(error);\r\n//       return;\r\n//     });\r\n\r\n//     setForm({ \r\n//     agent_name: \"\",\r\n//     transaction_number: \"\",\r\n//     sale: \"\",\r\n//     date: \"\" });\r\n//     navigate(\"/transaction\");\r\n//   }\r\n\r\n//   // This following section will display the form that takes the input from the user.\r\n//   return (\r\n//     <div>\r\n//       <h3>Create New Transaction</h3>\r\n//       <form onSubmit={onSubmit}>\r\n//         <div className=\"form-group\">\r\n//          <label htmlFor=\"agent_name\">Agent Name</label>\r\n//           <select\r\n//             className=\"form-control\"\r\n//             id=\"agent_name\"\r\n//             value={form.agent_name}\r\n//             onChange={(e) => updateForm({ agent_name: e.target.value })}\r\n//           >\r\n//             <option value=\"\">Select Agent</option>\r\n//             <option value=\"Goku\">Goku</option>\r\n//             <option value=\"Lelouch\">Lelouch</option>\r\n//             <option value=\"Naruto\">Naruto</option>\r\n//             <option value=\"Bleach\">Bleach</option>\r\n//           </select>\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"transaction_number\">Transaction Number</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"transaction_number\"\r\n//             value={form.transaction_number}\r\n//             onChange={(e) => updateForm({ transaction_number: e.target.value })}\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"sale\">Sale</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             className=\"form-control\"\r\n//             id=\"sale\"\r\n//             value={form.sale}\r\n//             min=\"0\"\r\n//             onChange={(e) => updateForm({ sale: Math.max(0, e.target.value) })}\r\n//           />\r\n//         </div>\r\n  \r\n//         <div className=\"form-group\">\r\n//           <input\r\n//             type=\"submit\"\r\n//             value=\"Create Transaction\"\r\n//             className=\"btn btn-primary\"\r\n//           />\r\n//         </div>\r\n//       </form>\r\n//       {/* Confirmation Modal */}\r\n//       <div\r\n//         className=\"modal fade\"\r\n//         id=\"confirmationModal\"\r\n//         tabIndex=\"-1\"\r\n//         role=\"dialog\"\r\n//         aria-labelledby=\"confirmationModalLabel\"\r\n//         aria-hidden=\"true\"\r\n//       >\r\n//         <div className=\"modal-dialog\" role=\"document\">\r\n//           <div className=\"modal-content\">\r\n//             <div className=\"modal-header\">\r\n//               <h5 className=\"modal-title\" id=\"confirmationModalLabel\">\r\n//                 Are you sure you want to\r\n\r\n//                 </h5>\r\n// <button\r\n//              type=\"button\"\r\n//              className=\"close\"\r\n//              data-dismiss=\"modal\"\r\n//              aria-label=\"Close\"\r\n//            >\r\n// <span aria-hidden=\"true\">Ã—</span>\r\n// </button>\r\n// </div>\r\n// <div className=\"modal-body\">\r\n// This action will create a new transaction. Are you sure you want to continue?\r\n// </div>\r\n// <div className=\"modal-footer\">\r\n// <button\r\n//              type=\"button\"\r\n//              className=\"btn btn-secondary\"\r\n//              data-dismiss=\"modal\"\r\n//            >\r\n// No/Back\r\n// </button>\r\n// <button type=\"submit\" className=\"btn btn-primary\">\r\n// Yes/Confirm\r\n// </button>\r\n// </div>\r\n// </div>\r\n// </div>\r\n// </div>\r\n// </div>\r\n// );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router\";\r\n\r\n// export default function Create() {\r\n//   const [form, setForm] = useState({\r\n//     agent_name: \"\",\r\n//     transaction_number: \"\",\r\n//     sale: \"\",\r\n//     date: \"\"\r\n//   });\r\n//   const navigate = useNavigate();\r\n\r\n//   // Update the form state with the provided values\r\n//   function updateForm(values) {\r\n//     setForm(prev => ({ ...prev, ...values }));\r\n//   }\r\n\r\n//   // Handle form submission\r\n//   async function onSubmit(event) {\r\n//     event.preventDefault();\r\n\r\n//     // Show confirmation dialog before creating the transaction\r\n//     const confirmation = window.confirm(\r\n//       \"Are you sure you want to create a new transaction?\"\r\n//     );\r\n//     if (!confirmation) {\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       // Send a POST request to the backend to create a new transaction\r\n//       await fetch(\"http://localhost:5000/transaction/add\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify(form),\r\n//       });\r\n\r\n//       // Reset the form state and navigate to the transaction page\r\n//       setForm({\r\n//         agent_name: \"\",\r\n//         transaction_number: \"\",\r\n//         sale: \"\",\r\n//         date: \"\"\r\n//       });\r\n//       navigate(\"/transaction\");\r\n//     } catch (error) {\r\n//       // Show an error alert if the request fails\r\n//       window.alert(error);\r\n//     }\r\n//   }\r\n\r\n//   // Render the form component\r\n//   return (\r\n//     <div>\r\n//       <h3>Create New Transaction</h3>\r\n//       <form onSubmit={onSubmit}>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"agent_name\">Agent Name</label>\r\n//           <select\r\n//             className=\"form-control\"\r\n//             id=\"agent_name\"\r\n//             value={form.agent_name}\r\n//             onChange={event => updateForm({ agent_name: event.target.value })}\r\n//           >\r\n//             <option value=\"\">Select Agent</option>\r\n//             <option value=\"Goku\">Goku</option>\r\n//             <option value=\"Lelouch\">Lelouch</option>\r\n//             <option value=\"Naruto\">Naruto</option>\r\n//             <option value=\"Bleach\">Bleach</option>\r\n//           </select>\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"transaction_number\">Transaction Number</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"transaction_number\"\r\n//             value={form.transaction_number}\r\n//             onChange={event =>\r\n//               updateForm({ transaction_number: event.target.value })\r\n//             }\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"sale\">Sale</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             className=\"form-control\"\r\n//             id=\"sale\"\r\n//             value={form.sale}\r\n//             min=\"0\"\r\n//             onChange={event =>\r\n//               updateForm({ sale: Math.max(0, event.target.value) })\r\n//             }\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <input\r\n//             type=\"submit\"\r\n//             value=\"Create Transaction\"\r\n//             className=\"btn btn-primary\"\r\n//           />\r\n//         </div>\r\n//       </form>\r\n//       {/* Confirmation Modal */}\r\n//       <div\r\n//         className=\"modal fade\"\r\n//         id=\"confirmationModal\"\r\n//         tabIndex=\"-1\"\r\n//         role=\"dialog\"\r\n//         aria-labelledby=\"confirmationModalLabel\"\r\n//         aria-hidden=\"true\"\r\n//       >\r\n//         <div className=\"modal-dialog\" role=\"document\">\r\n//           <div className=\"modal-content\">\r\n//             <div className=\"modal-header\">\r\n//               <h5 className=\"modal-title\" id=\"confirmationModalLabel\">\r\n//                 Are you sure you want to create a new transaction?\r\n//               </h5>\r\n//               <button\r\n//                 type=\"button\"\r\n//                 className=\"close\"\r\n//                 data-dismiss=\"modal\"\r\n//                 aria-label=\"Close\"\r\n//               >\r\n//                 <span aria-hidden=\"true\">Ã—</span>\r\n//               </button>\r\n//             </div>\r\n//             <div className=\"modal-body\">\r\n//               <p>Please confirm that you want to create a new transaction.</p>\r\n//             </div>\r\n//           <div className=\"modal-footer\">\r\n//               <button\r\n//               type=\"button\"\r\n//               className=\"btn btn-secondary\"\r\n//               data-dismiss=\"modal\"\r\n//               >\r\n//                 Cancel\r\n//               </button>\r\n//               <button\r\n//               type=\"button\"\r\n//               className=\"btn btn-primary\"\r\n//               onClick={onSubmit}\r\n//               >\r\n//                 Create Transaction\r\n//               </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n// </div>\r\n// );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}