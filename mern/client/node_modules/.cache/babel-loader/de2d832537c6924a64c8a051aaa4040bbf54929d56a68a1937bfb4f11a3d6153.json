{"ast":null,"code":"// import React, { useState } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import { useNavigate } from \"react-router-dom\";\n// import { setToken } from \"./auth\";\n// import { NavLink } from \"react-router-dom\";\n// import { Alert } from 'react-bootstrap';\n\n// function Login() {\n//   const [password, setPassword] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [showAlert, setShowAlert] = useState(false);\n//   const [alertVariant, setAlertVariant] = useState(\"\");\n//   const [alertMessage, setAlertMessage] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const loginSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch(\"http://localhost:5000/login\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ email, password }),\n//       });\n//       const data = await response.json();\n//       if (response.ok) {\n//         setToken(data.token);\n//         navigate(\"/Home_page\");\n//       } else {\n//         setShowAlert(true);\n//         setAlertVariant(\"danger\");\n//         setAlertMessage(\"Email or password is incorrect.\");\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       setShowAlert(true);\n//       setAlertVariant(\"danger\");\n//       setAlertMessage(\"An error occurred. Please try again later.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"container\">\n//         <div className=\"row d-flex justify-content-center\">\n//           <div className=\"col-md-4\">\n//             {showAlert && (\n//               <Alert variant={alertVariant} onClose={() => setShowAlert(false)} dismissible>\n//                 {alertMessage}\n//               </Alert>\n//             )}\n//             <form id=\"loginform\" onSubmit={loginSubmit}>\n//               <div className=\"form-group\">\n//                 <label>Email address</label>\n//                 <input\n//                   type=\"email\"\n//                   className=\"form-control\"\n//                   id=\"EmailInput\"\n//                   name=\"EmailInput\"\n//                   aria-describedby=\"emailHelp\"\n//                   placeholder=\"Enter email\"\n//                   onChange={(event) => setEmail(event.target.value)}\n//                 />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Password</label>\n//                 <input\n//                   type=\"password\"\n//                   className=\"form-control\"\n//                   id=\"exampleInputPassword1\"\n//                   placeholder=\"Password\"\n//                   onChange={(event) => setPassword(event.target.value)}\n//                 />\n//               </div>\n//               <button type=\"submit\" className=\"btn btn-primary\">\n//                 Submit\n//               </button>\n//               <br></br>\n//               <div>\n//                 <NavLink className=\"btn btn-secondary mt-2\" to=\"/create_user\">\n//                   Create User\n//                 </NavLink>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Login;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { Alert } from 'react-bootstrap';\n// import { NavLink } from \"react-router-dom\";\n\n// function Login() {\n//   const [password, setPassword] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [showAlert, setShowAlert] = useState(false);\n//   const [alertVariant, setAlertVariant] = useState(\"\");\n//   const [alertMessage, setAlertMessage] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const loginSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch(\"http://localhost:5000/login\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ email, password }),\n//       });\n//       const data = await response.json();\n//       if (response.ok) {\n//         localStorage.setItem(\"token\", data.token);\n//         navigate(\"/Home_page\");\n//       } else {\n//         setShowAlert(true);\n//         setAlertVariant(\"danger\");\n//         setAlertMessage(\"Email or password is incorrect.\");\n//         setTimeout(() => setShowAlert(false), 5000); // Set a timeout of 5 seconds to hide the alert\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       setShowAlert(true);\n//       setAlertVariant(\"danger\");\n//       setAlertMessage(\"An error occurred. Please try again later.\");\n//       setTimeout(() => setShowAlert(false), 5000); // Set a timeout of 5 seconds to hide the alert\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"container\">\n//         <div className=\"row d-flex justify-content-center\">\n//           <div className=\"col-md-4\">\n//             {showAlert && (\n//               <Alert variant={alertVariant} onClose={() => setShowAlert(false)} dismissible>\n//                 {alertMessage}\n//               </Alert>\n//             )}\n//             <form id=\"loginform\" onSubmit={loginSubmit}>\n//               <div className=\"form-group\">\n//                 <label>Email address</label>\n//                 <input\n//                   type=\"email\"\n//                   className=\"form-control\"\n//                   id=\"EmailInput\"\n//                   name=\"EmailInput\"\n//                   aria-describedby=\"emailHelp\"\n//                   placeholder=\"Enter email\"\n//                   onChange={(event) => setEmail(event.target.value)}\n//                 />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Password</label>\n//                 <input\n//                   type=\"password\"\n//                   className=\"form-control\"\n//                   id=\"exampleInputPassword1\"\n//                   placeholder=\"Password\"\n//                   onChange={(event) => setPassword(event.target.value)}\n//                 />\n//               </div>\n//               <button type=\"submit\" className=\"btn btn-primary\">\n//                 Submit\n//               </button>\n//               <br></br>\n//               <div>\n//                 <NavLink className=\"btn btn-secondary mt-2\" to=\"/create_user\">\n//                   Create User\n//                 </NavLink>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Login;\n\n// import React, { useState } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import { useNavigate } from \"react-router-dom\";\n// import { setToken } from \"./auth\";\n// import { NavLink } from \"react-router-dom\";\n// import { Alert } from 'react-bootstrap';\n// import Navbar from \"./navbar\";\n\n// function Login() {\n//   const [password, setPassword] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [showAlert, setShowAlert] = useState(false);\n//   const [alertVariant, setAlertVariant] = useState(\"\");\n//   const [alertMessage, setAlertMessage] = useState(\"\");\n//   const navigate = useNavigate();\n//   const isLoggedIn = false; // Set isLoggedIn to false on the Login page\n\n//   const uuid = require('uuid');\n//   const cookieParser = require('cookie-parser');\n\n//   app.use(cookieParser());\n\n//   app.post('/login', async (req, res) => {\n//     try {\n//       // Validate user credentials\n\n//       // Create session token using UUID\n//       const sessionToken = uuid.v4();\n\n//       // Set expiration date to 24 hours from now\n//       const expirationDate = new Date();\n//       expirationDate.setTime(expirationDate.getTime() + (24 * 60 * 60 * 1000));\n\n//       // Save session to MongoDB\n//       const session = {\n//         session_token: sessionToken,\n//         user_id: userId, // Get user ID from database query\n//         expiration_date: expirationDate\n//       };\n//       await db.collection('sessions').insertOne(session);\n\n//       // Set session token cookie\n//       res.cookie('session_token', sessionToken, { expires: expirationDate });\n\n//       // Redirect to home page\n//       res.redirect('/home');\n//     } catch (err) {\n//       console.error(err);\n//       res.status(500).send('Internal server error');\n//     }\n//   });\n\n//   const loginSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch(\"http://localhost:5000/login\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ email, password }),\n//       });\n//       const data = await response.json();\n//       if (response.ok) {\n//         setToken(data.token);\n//         navigate(\"/Home_page\");\n//       } else {\n//         setShowAlert(true);\n//         setAlertVariant(\"danger\");\n//         setAlertMessage(\"Email or password is incorrect.\");\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       setShowAlert(true);\n//       setAlertVariant(\"danger\");\n//       setAlertMessage(\"An error occurred. Please try again later.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {/* Render Navbar only if isLoggedIn is true */}\n//       {isLoggedIn && <Navbar />}\n//       <div className=\"container\">\n//         <div className=\"row d-flex justify-content-center\">\n//           <div className=\"col-md-4\">\n//             {showAlert && (\n//               <Alert variant={alertVariant} onClose={() => setShowAlert(false)} dismissible>\n//                 {alertMessage}\n//               </Alert>\n//             )}\n//             <form id=\"loginform\" onSubmit={loginSubmit}>\n//               <div className=\"form-group\">\n//                 <label>Email address</label>\n//                 <input\n//                   type=\"email\"\n//                   className=\"form-control\"\n//                   id=\"EmailInput\"\n//                   name=\"EmailInput\"\n//                   aria-describedby=\"emailHelp\"\n//                   placeholder=\"Enter email\"\n//                   onChange={(event) => setEmail(event.target.value)}\n//                 />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Password</label>\n//                 <input\n//                   type=\"password\"\n//                   className=\"form-control\"\n//                   id=\"exampleInputPassword1\"\n//                   placeholder=\"Password\"\n//                   onChange={(event) => setPassword(event.target.value)}\n//                 />\n//               </div>\n//               <button type=\"submit\" className=\"btn btn-primary\">\n//                 Submit\n//               </button>\n//               <br></br>\n//               <div>\n//                 <NavLink className=\"btn btn-secondary mt-2\" to=\"/create_user\">\n//                   Create User\n//                 </NavLink>\n//               </div>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Login;","map":{"version":3,"names":[],"sources":["C:/Users/manoj/CodeBoxxManojKumarMuthu/mern-stack-example/mern/client/src/components/login.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { setToken } from \"./auth\";\r\n// import { NavLink } from \"react-router-dom\";\r\n// import { Alert } from 'react-bootstrap';\r\n\r\n// function Login() {\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [showAlert, setShowAlert] = useState(false);\r\n//   const [alertVariant, setAlertVariant] = useState(\"\");\r\n//   const [alertMessage, setAlertMessage] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n  \r\n//   const loginSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/login\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ email, password }),\r\n//       });\r\n//       const data = await response.json();\r\n//       if (response.ok) {\r\n//         setToken(data.token);\r\n//         navigate(\"/Home_page\");\r\n//       } else {\r\n//         setShowAlert(true);\r\n//         setAlertVariant(\"danger\");\r\n//         setAlertMessage(\"Email or password is incorrect.\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       setShowAlert(true);\r\n//       setAlertVariant(\"danger\");\r\n//       setAlertMessage(\"An error occurred. Please try again later.\");\r\n//     }\r\n//   };\r\n  \r\n//   return (\r\n//     <div className=\"App\">\r\n//       <div className=\"container\">\r\n//         <div className=\"row d-flex justify-content-center\">\r\n//           <div className=\"col-md-4\">\r\n//             {showAlert && (\r\n//               <Alert variant={alertVariant} onClose={() => setShowAlert(false)} dismissible>\r\n//                 {alertMessage}\r\n//               </Alert>\r\n//             )}\r\n//             <form id=\"loginform\" onSubmit={loginSubmit}>\r\n//               <div className=\"form-group\">\r\n//                 <label>Email address</label>\r\n//                 <input\r\n//                   type=\"email\"\r\n//                   className=\"form-control\"\r\n//                   id=\"EmailInput\"\r\n//                   name=\"EmailInput\"\r\n//                   aria-describedby=\"emailHelp\"\r\n//                   placeholder=\"Enter email\"\r\n//                   onChange={(event) => setEmail(event.target.value)}\r\n//                 />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Password</label>\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   className=\"form-control\"\r\n//                   id=\"exampleInputPassword1\"\r\n//                   placeholder=\"Password\"\r\n//                   onChange={(event) => setPassword(event.target.value)}\r\n//                 />\r\n//               </div>\r\n//               <button type=\"submit\" className=\"btn btn-primary\">\r\n//                 Submit\r\n//               </button>\r\n//               <br></br>\r\n//               <div>\r\n//                 <NavLink className=\"btn btn-secondary mt-2\" to=\"/create_user\">\r\n//                   Create User\r\n//                 </NavLink>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { Alert } from 'react-bootstrap';\r\n// import { NavLink } from \"react-router-dom\";\r\n\r\n// function Login() {\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [showAlert, setShowAlert] = useState(false);\r\n//   const [alertVariant, setAlertVariant] = useState(\"\");\r\n//   const [alertMessage, setAlertMessage] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n  \r\n//   const loginSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/login\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ email, password }),\r\n//       });\r\n//       const data = await response.json();\r\n//       if (response.ok) {\r\n//         localStorage.setItem(\"token\", data.token);\r\n//         navigate(\"/Home_page\");\r\n//       } else {\r\n//         setShowAlert(true);\r\n//         setAlertVariant(\"danger\");\r\n//         setAlertMessage(\"Email or password is incorrect.\");\r\n//         setTimeout(() => setShowAlert(false), 5000); // Set a timeout of 5 seconds to hide the alert\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       setShowAlert(true);\r\n//       setAlertVariant(\"danger\");\r\n//       setAlertMessage(\"An error occurred. Please try again later.\");\r\n//       setTimeout(() => setShowAlert(false), 5000); // Set a timeout of 5 seconds to hide the alert\r\n//     }\r\n//   };\r\n  \r\n//   return (\r\n//     <div className=\"App\">\r\n//       <div className=\"container\">\r\n//         <div className=\"row d-flex justify-content-center\">\r\n//           <div className=\"col-md-4\">\r\n//             {showAlert && (\r\n//               <Alert variant={alertVariant} onClose={() => setShowAlert(false)} dismissible>\r\n//                 {alertMessage}\r\n//               </Alert>\r\n//             )}\r\n//             <form id=\"loginform\" onSubmit={loginSubmit}>\r\n//               <div className=\"form-group\">\r\n//                 <label>Email address</label>\r\n//                 <input\r\n//                   type=\"email\"\r\n//                   className=\"form-control\"\r\n//                   id=\"EmailInput\"\r\n//                   name=\"EmailInput\"\r\n//                   aria-describedby=\"emailHelp\"\r\n//                   placeholder=\"Enter email\"\r\n//                   onChange={(event) => setEmail(event.target.value)}\r\n//                 />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Password</label>\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   className=\"form-control\"\r\n//                   id=\"exampleInputPassword1\"\r\n//                   placeholder=\"Password\"\r\n//                   onChange={(event) => setPassword(event.target.value)}\r\n//                 />\r\n//               </div>\r\n//               <button type=\"submit\" className=\"btn btn-primary\">\r\n//                 Submit\r\n//               </button>\r\n//               <br></br>\r\n//               <div>\r\n//                 <NavLink className=\"btn btn-secondary mt-2\" to=\"/create_user\">\r\n//                   Create User\r\n//                 </NavLink>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { setToken } from \"./auth\";\r\n// import { NavLink } from \"react-router-dom\";\r\n// import { Alert } from 'react-bootstrap';\r\n// import Navbar from \"./navbar\";\r\n\r\n// function Login() {\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [showAlert, setShowAlert] = useState(false);\r\n//   const [alertVariant, setAlertVariant] = useState(\"\");\r\n//   const [alertMessage, setAlertMessage] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n//   const isLoggedIn = false; // Set isLoggedIn to false on the Login page\r\n  \r\n//   const uuid = require('uuid');\r\n//   const cookieParser = require('cookie-parser');\r\n  \r\n//   app.use(cookieParser());\r\n  \r\n//   app.post('/login', async (req, res) => {\r\n//     try {\r\n//       // Validate user credentials\r\n  \r\n//       // Create session token using UUID\r\n//       const sessionToken = uuid.v4();\r\n  \r\n//       // Set expiration date to 24 hours from now\r\n//       const expirationDate = new Date();\r\n//       expirationDate.setTime(expirationDate.getTime() + (24 * 60 * 60 * 1000));\r\n  \r\n//       // Save session to MongoDB\r\n//       const session = {\r\n//         session_token: sessionToken,\r\n//         user_id: userId, // Get user ID from database query\r\n//         expiration_date: expirationDate\r\n//       };\r\n//       await db.collection('sessions').insertOne(session);\r\n  \r\n//       // Set session token cookie\r\n//       res.cookie('session_token', sessionToken, { expires: expirationDate });\r\n  \r\n//       // Redirect to home page\r\n//       res.redirect('/home');\r\n//     } catch (err) {\r\n//       console.error(err);\r\n//       res.status(500).send('Internal server error');\r\n//     }\r\n//   });\r\n  \r\n\r\n//   const loginSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/login\", {\r\n//         method: \"POST\",\r\n//         headers: { \"Content-Type\": \"application/json\" },\r\n//         body: JSON.stringify({ email, password }),\r\n//       });\r\n//       const data = await response.json();\r\n//       if (response.ok) {\r\n//         setToken(data.token);\r\n//         navigate(\"/Home_page\");\r\n//       } else {\r\n//         setShowAlert(true);\r\n//         setAlertVariant(\"danger\");\r\n//         setAlertMessage(\"Email or password is incorrect.\");\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       setShowAlert(true);\r\n//       setAlertVariant(\"danger\");\r\n//       setAlertMessage(\"An error occurred. Please try again later.\");\r\n//     }\r\n//   };\r\n  \r\n//   return (\r\n//     <div className=\"App\">\r\n//       {/* Render Navbar only if isLoggedIn is true */}\r\n//       {isLoggedIn && <Navbar />}\r\n//       <div className=\"container\">\r\n//         <div className=\"row d-flex justify-content-center\">\r\n//           <div className=\"col-md-4\">\r\n//             {showAlert && (\r\n//               <Alert variant={alertVariant} onClose={() => setShowAlert(false)} dismissible>\r\n//                 {alertMessage}\r\n//               </Alert>\r\n//             )}\r\n//             <form id=\"loginform\" onSubmit={loginSubmit}>\r\n//               <div className=\"form-group\">\r\n//                 <label>Email address</label>\r\n//                 <input\r\n//                   type=\"email\"\r\n//                   className=\"form-control\"\r\n//                   id=\"EmailInput\"\r\n//                   name=\"EmailInput\"\r\n//                   aria-describedby=\"emailHelp\"\r\n//                   placeholder=\"Enter email\"\r\n//                   onChange={(event) => setEmail(event.target.value)}\r\n//                 />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Password</label>\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   className=\"form-control\"\r\n//                   id=\"exampleInputPassword1\"\r\n//                   placeholder=\"Password\"\r\n//                   onChange={(event) => setPassword(event.target.value)}\r\n//                 />\r\n//               </div>\r\n//               <button type=\"submit\" className=\"btn btn-primary\">\r\n//                 Submit\r\n//               </button>\r\n//               <br></br>\r\n//               <div>\r\n//                 <NavLink className=\"btn btn-secondary mt-2\" to=\"/create_user\">\r\n//                   Create User\r\n//                 </NavLink>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}