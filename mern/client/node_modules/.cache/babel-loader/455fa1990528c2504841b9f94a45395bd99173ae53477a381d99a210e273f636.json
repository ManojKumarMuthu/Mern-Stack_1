{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manoj\\\\CodeBoxxManojKumarMuthu\\\\mern-stack-example\\\\mern\\\\client\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import { useNavigate } from \"react-router-dom\";\n\n// function Login() {\n//   const [password, setPassword] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [isError, setIsError] = useState(false) //true = error, false = no error.\n//   const error = \"Email or Password not matched\"\n//   const [passwordError, setpasswordError] = useState(\"\");\n//   const [emailError, setemailError] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const loginSubmit = (e) => {\n//     e.preventDefault();\n//     logMe();\n//   };\n\n//   const logMe = () => {\n//     var myHeaders = new Headers();\n//     myHeaders.append(\"Content-Type\", \"application/json\");\n//     var raw = JSON.stringify({\n//       \"email\": email,\n//       \"password\": password\n//     });\n//     var requestOptions = {\n//       method: 'POST',\n//       headers: myHeaders,\n//       body: raw,\n//       redirect: 'follow'\n//     };\n//     fetch(\"http://localhost:5000/login\", requestOptions)\n//       .then(response => response.text())\n//       .then(result => {\n//         localStorage.setItem(\"isLoggedIn\", result);\n//         if(result === \"true\"){\n//           navigate(\"/\");\n//         } else {\n//           setIsError(true)\n//         }\n//       })\n//       .catch(error => console.log('error', error));\n//   }\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"container\">\n//         <div className=\"row d-flex justify-content-center\">\n//           <div className=\"col-md-4\">\n//             <form id=\"loginform\" onSubmit={loginSubmit}>\n//               <div className=\"form-group\">\n//                 <label>Email address</label>\n//                 <input\n//                   type=\"email\"\n//                   className=\"form-control\"\n//                   id=\"EmailInput\"\n//                   name=\"EmailInput\"\n//                   aria-describedby=\"emailHelp\"\n//                   placeholder=\"Enter email\"\n//                   onChange={(event) => setEmail(event.target.value)}\n//                 />\n//                 <small id=\"emailHelp\" className=\"text-danger form-text\">\n//                   {emailError}\n//                 </small>\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Password</label>\n//                 <input\n//                   type=\"password\"\n//                   className=\"form-control\"\n//                   id=\"exampleInputPassword1\"\n//                   placeholder=\"Password\"\n//                   onChange={(event) => setPassword(event.target.value)}\n//                 />\n//                 <small id=\"passworderror\" className=\"text-danger form-text\">\n//                   {passwordError}\n//                 </small>\n//               </div>\n//               {isError ? (\n//                 <p style={{color: \"red\"}}>{error}</p>\n//               ) : (\n//                 <>\n//                 </>\n//               )}\n//               <button type=\"submit\" className=\"btn btn-primary\">\n//                 Submit\n//               </button>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Login;\n\n// // import React, { useState } from \"react\";\n// // import \"bootstrap/dist/css/bootstrap.min.css\";\n// // import { useNavigate } from \"react-router-dom\";\n// // import { setToken } from \"./auth\";\n\n// // function Login() {\n// //   const [password, setPassword] = useState(\"\");\n// //   const [email, setEmail] = useState(\"\");\n// //   const [isError, setIsError] = useState(false) //true = error, false = no error.\n// //   const error = \"Email or Password not matched\"\n// //   const [passwordError, setpasswordError] = useState(\"\");\n// //   const [emailError, setemailError] = useState(\"\");\n// //   const navigate = useNavigate();\n\n// //   const loginSubmit = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       const response = await fetch(\"http://localhost:5000/login\", {\n// //         method: \"POST\",\n// //         headers: { \"Content-Type\": \"application/json\" },\n// //         body: JSON.stringify({ email, password }),\n// //       });\n// //       const data = await response.json();\n// //       if (response.ok) {\n// //         setToken(data.token);\n// //         navigate(\"/\");\n// //       } else {\n// //         setIsError(true)\n// //       }\n// //     } catch (error) {\n// //       console.error(error);\n// //       setIsError(true)\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"App\">\n// //       <div className=\"container\">\n// //         <div className=\"row d-flex justify-content-center\">\n// //           <div className=\"col-md-4\">\n// //             <form id=\"loginform\" onSubmit={loginSubmit}>\n// //               <div className=\"form-group\">\n// //                 <label>Email address</label>\n// //                 <input\n// //                   type=\"email\"\n// //                   className=\"form-control\"\n// //                   id=\"EmailInput\"\n// //                   name=\"EmailInput\"\n// //                   aria-describedby=\"emailHelp\"\n// //                   placeholder=\"Enter email\"\n// //                   onChange={(event) => setEmail(event.target.value)}\n// //                 />\n// //                 <small id=\"emailHelp\" className=\"text-danger form-text\">\n// //                   {emailError}\n// //                 </small>\n// //               </div>\n// //               <div className=\"form-group\">\n// //                 <label>Password</label>\n// //                 <input\n// //                   type=\"password\"\n// //                   className=\"form-control\"\n// //                   id=\"exampleInputPassword1\"\n// //                   placeholder=\"Password\"\n// //                   onChange={(event) => setPassword(event.target.value)}\n// //                 />\n// //                 <small id=\"passworderror\" className=\"text-danger form-text\">\n// //                   {passwordError}\n// //                 </small>\n// //               </div>\n// //               {isError ? (\n// //                 <p style={{color: \"red\"}}>{error}</p>\n// //               ) : (\n// //                 <>\n// //                 </>\n// //               )}\n// //               <button type=\"submit\" className=\"btn btn-primary\">\n// //                 Submit\n// //               </button>\n// //             </form>\n// //           </div>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // export default Login;\n\nimport React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [showAlert, setShowAlert] = useState(true);\n  const [showToast, setShowToast] = useState(true);\n  const isLoggedIn = localStorage.isLoggedIn;\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isError, setIsError] = useState(false); //true = error, false = no error.\n  const [isLogin, setIsLogin] = useState(false); //true = error, false = no error.\n  const error = \"Connexion Fail\";\n  const [passwordError, setpasswordError] = useState(\"\");\n  const [emailError, setemailError] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n      setTimeout(() => {\n        setShowAlert(false);\n        setIsError('');\n      }, 5000);\n    }\n  }, [error]);\n  const logMe = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"email\": email,\n      \"password\": password\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(\"http://localhost:5000/login\", requestOptions).then(response => response.text()).then(result => {\n      // isConnected(result)\n      localStorage.setItem(\"isLoggedIn\", result);\n      if (result === \"true\") {\n        toast.success(':unicorn_face: Connected', {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: \"light\"\n        });\n        setTimeout(() => window.location = \"/\", 7000);\n      } else {\n        setIsError(true);\n        setTimeout(() => setIsError(false), 5000);\n      }\n    }).catch(error => console.log('error', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            id: \"loginform\",\n            onSubmit: logMe,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                className: \"form-control\",\n                id: \"EmailInput\",\n                name: \"EmailInput\",\n                \"aria-describedby\": \"emailHelp\",\n                placeholder: \"Enter email\",\n                onChange: event => setEmail(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"emailHelp\",\n                className: \"text-danger form-text\",\n                children: emailError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                id: \"exampleInputPassword1\",\n                placeholder: \"Password\",\n                onChange: event => setPassword(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"passworderror\",\n                className: \"text-danger form-text\",\n                children: passwordError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              onClose: () => setShowAlert(false),\n              children: /*#__PURE__*/_jsxDEV(Alert.Heading, {\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              newestOnTop: false,\n              closeOnClick: true,\n              rtl: false,\n              pauseOnFocusLoss: true,\n              draggable: true,\n              pauseOnHover: true,\n              theme: \"light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"CKxtishDH/aQFc3ydpGQCVhu6ic=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Alert","ToastContainer","toast","jsxDEV","_jsxDEV","Login","_s","showAlert","setShowAlert","showToast","setShowToast","isLoggedIn","localStorage","password","setPassword","email","setEmail","isError","setIsError","isLogin","setIsLogin","error","passwordError","setpasswordError","emailError","setemailError","navigate","setTimeout","logMe","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","then","response","text","result","setItem","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","window","location","catch","console","log","className","children","id","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","onChange","event","target","value","variant","onClose","Heading","newestOnTop","rtl","pauseOnFocusLoss","_c","$RefreshReg$"],"sources":["C:/Users/manoj/CodeBoxxManojKumarMuthu/mern-stack-example/mern/client/src/components/login.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// function Login() {\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [isError, setIsError] = useState(false) //true = error, false = no error.\r\n//   const error = \"Email or Password not matched\"\r\n//   const [passwordError, setpasswordError] = useState(\"\");\r\n//   const [emailError, setemailError] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n  \r\n//   const loginSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     logMe();\r\n//   };\r\n  \r\n//   const logMe = () => {\r\n//     var myHeaders = new Headers();\r\n//     myHeaders.append(\"Content-Type\", \"application/json\");\r\n//     var raw = JSON.stringify({\r\n//       \"email\": email,\r\n//       \"password\": password\r\n//     });\r\n//     var requestOptions = {\r\n//       method: 'POST',\r\n//       headers: myHeaders,\r\n//       body: raw,\r\n//       redirect: 'follow'\r\n//     };\r\n//     fetch(\"http://localhost:5000/login\", requestOptions)\r\n//       .then(response => response.text())\r\n//       .then(result => {\r\n//         localStorage.setItem(\"isLoggedIn\", result);\r\n//         if(result === \"true\"){\r\n//           navigate(\"/\");\r\n//         } else {\r\n//           setIsError(true)\r\n//         }\r\n//       })\r\n//       .catch(error => console.log('error', error));\r\n//   }\r\n  \r\n//   return (\r\n//     <div className=\"App\">\r\n//       <div className=\"container\">\r\n//         <div className=\"row d-flex justify-content-center\">\r\n//           <div className=\"col-md-4\">\r\n//             <form id=\"loginform\" onSubmit={loginSubmit}>\r\n//               <div className=\"form-group\">\r\n//                 <label>Email address</label>\r\n//                 <input\r\n//                   type=\"email\"\r\n//                   className=\"form-control\"\r\n//                   id=\"EmailInput\"\r\n//                   name=\"EmailInput\"\r\n//                   aria-describedby=\"emailHelp\"\r\n//                   placeholder=\"Enter email\"\r\n//                   onChange={(event) => setEmail(event.target.value)}\r\n//                 />\r\n//                 <small id=\"emailHelp\" className=\"text-danger form-text\">\r\n//                   {emailError}\r\n//                 </small>\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Password</label>\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   className=\"form-control\"\r\n//                   id=\"exampleInputPassword1\"\r\n//                   placeholder=\"Password\"\r\n//                   onChange={(event) => setPassword(event.target.value)}\r\n//                 />\r\n//                 <small id=\"passworderror\" className=\"text-danger form-text\">\r\n//                   {passwordError}\r\n//                 </small>\r\n//               </div>\r\n//               {isError ? (\r\n//                 <p style={{color: \"red\"}}>{error}</p>\r\n//               ) : (\r\n//                 <>\r\n//                 </>\r\n//               )}\r\n//               <button type=\"submit\" className=\"btn btn-primary\">\r\n//                 Submit\r\n//               </button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // import React, { useState } from \"react\";\r\n// // import \"bootstrap/dist/css/bootstrap.min.css\";\r\n// // import { useNavigate } from \"react-router-dom\";\r\n// // import { setToken } from \"./auth\";\r\n\r\n// // function Login() {\r\n// //   const [password, setPassword] = useState(\"\");\r\n// //   const [email, setEmail] = useState(\"\");\r\n// //   const [isError, setIsError] = useState(false) //true = error, false = no error.\r\n// //   const error = \"Email or Password not matched\"\r\n// //   const [passwordError, setpasswordError] = useState(\"\");\r\n// //   const [emailError, setemailError] = useState(\"\");\r\n// //   const navigate = useNavigate();\r\n  \r\n// //   const loginSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     try {\r\n// //       const response = await fetch(\"http://localhost:5000/login\", {\r\n// //         method: \"POST\",\r\n// //         headers: { \"Content-Type\": \"application/json\" },\r\n// //         body: JSON.stringify({ email, password }),\r\n// //       });\r\n// //       const data = await response.json();\r\n// //       if (response.ok) {\r\n// //         setToken(data.token);\r\n// //         navigate(\"/\");\r\n// //       } else {\r\n// //         setIsError(true)\r\n// //       }\r\n// //     } catch (error) {\r\n// //       console.error(error);\r\n// //       setIsError(true)\r\n// //     }\r\n// //   };\r\n  \r\n// //   return (\r\n// //     <div className=\"App\">\r\n// //       <div className=\"container\">\r\n// //         <div className=\"row d-flex justify-content-center\">\r\n// //           <div className=\"col-md-4\">\r\n// //             <form id=\"loginform\" onSubmit={loginSubmit}>\r\n// //               <div className=\"form-group\">\r\n// //                 <label>Email address</label>\r\n// //                 <input\r\n// //                   type=\"email\"\r\n// //                   className=\"form-control\"\r\n// //                   id=\"EmailInput\"\r\n// //                   name=\"EmailInput\"\r\n// //                   aria-describedby=\"emailHelp\"\r\n// //                   placeholder=\"Enter email\"\r\n// //                   onChange={(event) => setEmail(event.target.value)}\r\n// //                 />\r\n// //                 <small id=\"emailHelp\" className=\"text-danger form-text\">\r\n// //                   {emailError}\r\n// //                 </small>\r\n// //               </div>\r\n// //               <div className=\"form-group\">\r\n// //                 <label>Password</label>\r\n// //                 <input\r\n// //                   type=\"password\"\r\n// //                   className=\"form-control\"\r\n// //                   id=\"exampleInputPassword1\"\r\n// //                   placeholder=\"Password\"\r\n// //                   onChange={(event) => setPassword(event.target.value)}\r\n// //                 />\r\n// //                 <small id=\"passworderror\" className=\"text-danger form-text\">\r\n// //                   {passwordError}\r\n// //                 </small>\r\n// //               </div>\r\n// //               {isError ? (\r\n// //                 <p style={{color: \"red\"}}>{error}</p>\r\n// //               ) : (\r\n// //                 <>\r\n// //                 </>\r\n// //               )}\r\n// //               <button type=\"submit\" className=\"btn btn-primary\">\r\n// //                 Submit\r\n// //               </button>\r\n// //             </form>\r\n// //           </div>\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default Login;\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Alert  from \"react-bootstrap/Alert\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nfunction Login() {\r\n  const [showAlert, setShowAlert] = useState(true);\r\n  const [showToast, setShowToast] = useState(true);\r\n  const isLoggedIn = localStorage.isLoggedIn;\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isError, setIsError] = useState(false) //true = error, false = no error.\r\n  const [isLogin, setIsLogin] = useState(false) //true = error, false = no error.\r\n  const error = \"Connexion Fail\"\r\n  const [passwordError, setpasswordError] = useState(\"\");\r\n  const [emailError, setemailError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (error) {\r\n      setShowAlert(true);\r\n      setTimeout(() => {\r\n        setShowAlert(false);\r\n        setIsError('');\r\n      }, 5000);\r\n    }\r\n  }, [error]);\r\n  const logMe = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n    var raw = JSON.stringify({\r\n      \"email\": email,\r\n      \"password\": password\r\n    });\r\n    var requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow'\r\n    };\r\n    fetch(\"http://localhost:5000/login\", requestOptions)\r\n      .then(response => response.text())\r\n      .then(result => {\r\n        // isConnected(result)\r\n          localStorage.setItem(\"isLoggedIn\", result);\r\n        if(result === \"true\"){\r\n    toast.success(':unicorn_face: Connected', {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n    });\r\n    setTimeout(() => window.location = \"/\", 7000);\r\n} else {\r\n    setIsError(true);\r\n    setTimeout(() => setIsError(false), 5000);\r\n}\r\n      })\r\n      .catch(error => console.log('error', error));\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"row d-flex justify-content-center\">\r\n          <div className=\"col-md-4\">\r\n            <form id=\"loginform\" onSubmit={logMe}>\r\n              <div className=\"form-group\">\r\n                <label>Email address</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"EmailInput\"\r\n                  name=\"EmailInput\"\r\n                  aria-describedby=\"emailHelp\"\r\n                  placeholder=\"Enter email\"\r\n                  onChange={(event) => setEmail(event.target.value)}\r\n                />\r\n                <small id=\"emailHelp\" className=\"text-danger form-text\">\r\n                  {emailError}\r\n                </small>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"exampleInputPassword1\"\r\n                  placeholder=\"Password\"\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                />\r\n                <small id=\"passworderror\" className=\"text-danger form-text\">\r\n                  {passwordError}\r\n                </small>\r\n              </div>\r\n              {showAlert &&\r\n                  <Alert variant=\"danger\" onClose={() => setShowAlert(false)}>\r\n                  <Alert.Heading>{error}</Alert.Heading>\r\n                  </Alert>\r\n              }\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Submit\r\n              </button>\r\n            <ToastContainer\r\n              position=\"top-right\"\r\n              autoClose={5000}\r\n              hideProgressBar={false}\r\n              newestOnTop={false}\r\n              closeOnClick\r\n              rtl={false}\r\n              pauseOnFocusLoss\r\n              draggable\r\n              pauseOnHover\r\n              theme=\"light\"\r\n              />\r\n            </form>\r\n          </div>\r\n          {/* Source: <a href=\"https://askavy.com/react-form/\">React Form</a> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Login;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAOA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sCAAsC;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAO,uBAAuB;AAC1C,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}