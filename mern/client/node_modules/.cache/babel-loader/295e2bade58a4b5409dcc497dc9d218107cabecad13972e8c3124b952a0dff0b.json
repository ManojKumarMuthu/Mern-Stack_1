{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manoj\\\\CodeBoxxManojKumarMuthu\\\\mern-stack-example\\\\mern\\\\client\\\\src\\\\components\\\\create.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router\";\n\n// export default function Create() {\n//   const [form, setForm] = useState({\n//     First_Name: \"\",\n//     Last_Name: \"\",\n//     Email: \"\",\n//     Region: \"\",\n//     Rating: \"\",\n//     Fee: \"\",\n//     Sale: \"\"\n//   });\n//   const navigate = useNavigate();\n\n//   // These methods will update the state properties.\n//   function updateForm(value) {\n//     return setForm((prev) => {\n//       return { ...prev, ...value };\n//     });\n//   }\n\n//   // This function will handle the submission.\n//   async function onSubmit(e) {\n//     e.preventDefault();\n\n//     // When a post request is sent to the create url, we'll add a new record to the database.\n//     const newPerson = { ...form };\n\n//     await fetch(\"http://localhost:5000/record/add\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(newPerson),\n//     })\n//     .catch(error => {\n//       window.alert(error);\n//       return;\n//     });\n\n//     setForm({ \n//     First_Name: \"\",\n//     Last_Name: \"\",\n//     Email: \"\",\n//     Region: \"\",\n//     Rating: \"\",\n//     Fee: \"\",\n//     Sale: \"\" });\n//     navigate(\"/recordList\");\n//   }\n\n//   // This following section will display the form that takes the input from the user.\n//   return (\n//     <div>\n//       <h3>Create New Agent</h3>\n//       <form onSubmit={onSubmit}>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"First_Name\">First Name</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"First_Name\"\n//             value={form.First_Name}\n//             onChange={(e) => updateForm({ First_Name: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Last_Name\">Last Name</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Last_Name\"\n//             value={form.Last_Name}\n//             onChange={(e) => updateForm({ Last_Name: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Email\">Email</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Email\"\n//             value={form.Email}\n//             onChange={(e) => updateForm({ Email: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Rating\">Rating</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Rating\"\n//             value={form.Rating}\n//             onChange={(e) => updateForm({ Rating: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Fee\">Fee</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Fee\"\n//             value={form.Fee}\n//             onChange={(e) => updateForm({ Fee: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Sale\">Sale</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Sale\"\n//             value={form.Sale}\n//             onChange={(e) => updateForm({ Sale: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <div className=\"form-check form-check-inline\">\n//             <input\n//               className=\"form-check-input\"\n//               type=\"radio\"\n//               name=\"regionOptions\"\n//               id=\"regionEast\"\n//               value=\"East\"\n//               checked={form.Region === \"East\"}\n//               onChange={(e) => updateForm({ Region: e.target.value })}\n//             />\n//             <label htmlFor=\"regionEast\" className=\"form-check-label\">East</label>\n//           </div>\n//           <div className=\"form-check form-check-inline\">\n//             <input\n//               className=\"form-check-input\"\n//               type=\"radio\"\n//               name=\"regionOptions\"\n//               id=\"regionWest\"\n//               value=\"West\"\n//               checked={form.Region === \"West\"}\n//               onChange={(e) => updateForm({ Region: e.target.value })}\n//             />\n//             <label htmlFor=\"regionWest\" className=\"form-check-label\">West</label>\n//           </div>\n//           <div className=\"form-check form-check-inline\">\n//             <input\n//               className=\"form-check-input\"\n//               type=\"radio\"\n//               name=\"regionOptions\"\n//               id=\"regionNorth\"\n//               value=\"North\"\n//               checked={form.Region === \"North\"}\n//               onChange={(e) => updateForm({ Region: e.target.value })}\n//             />\n//             <label htmlFor=\"regionNorth\" className=\"form-check-label\">North</label>\n//           </div>\n//           <div className=\"form-check form-check-inline\">\n//             <input\n//               className=\"form-check-input\"\n//               type=\"radio\"\n//               name=\"regionOptions\"\n//               id=\"regionSouth\"\n//               value=\"South\"\n//               checked={form.Region === \"South\"}\n//               onChange={(e) => updateForm({ Region: e.target.value })}\n//             />\n//             <label htmlFor=\"regionSouth\" className=\"form-check-label\">South</label>\n//           </div>\n//         </div>\n//         <div className=\"form-group\">\n//           <input\n//             type=\"submit\"\n//             value=\"Create Agent\"\n//             className=\"btn btn-primary\"\n//           />\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  const [form, setForm] = useState({\n    First_Name: \"\",\n    Last_Name: \"\",\n    Email: \"\",\n    Region: \"\",\n    Rating: \"\",\n    Fee: \"\",\n    Sale: \"\"\n  });\n  const navigate = useNavigate();\n  const [showModal, setShowModal] = useState(false);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = {\n      ...form\n    };\n    setShowModal(true);\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Agent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"First_Name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"First_Name\",\n          value: form.First_Name,\n          onChange: e => updateForm({\n            First_Name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Last_Name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"Last_Name\",\n          value: form.Last_Name,\n          onChange: e => updateForm({\n            Last_Name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"Email\",\n          value: form.Email,\n          onChange: e => updateForm({\n            Email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Rating\",\n          children: \"Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"Rating\",\n          value: form.Rating,\n          onChange: e => updateForm({\n            Rating: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Fee\",\n          children: \"Fee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"Fee\",\n          value: form.Fee,\n          onChange: e => updateForm({\n            Fee: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Sale\",\n          children: \"Sale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"Sale\",\n          value: form.Sale,\n          onChange: e => updateForm({\n            Sale: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"regionOptions\",\n            id: \"regionEast\",\n            value: \"East\",\n            checked: form.Region === \"East\",\n            onChange: e => updateForm({\n              Region: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: \"regionEast\",\n            children: \"East\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"regionOptions\",\n            id: \"regionWest\",\n            value: \"West\",\n            checked: form.Region === \"West\",\n            onChange: e => updateForm({\n              Region: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: \"regionWest\",\n            children: \"West\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"regionOptions\",\n            id: \"regionNorth\",\n            value: \"North\",\n            checked: form.Region === \"North\",\n            onChange: e => updateForm({\n              Region: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: \"regionNorth\",\n            children: \"North\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"regionOptions\",\n            id: \"regionSouth\",\n            value: \"South\",\n            checked: form.Region === \"South\",\n            onChange: e => updateForm({\n              Region: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: \"regionSouth\",\n            children: \"South\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create Agent\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Are you sure you want to continue?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowModal(false),\n            children: \"No/Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(\"/agents\"),\n            children: \"Yes/Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n}\n_s(Create, \"hhmZacbFTXsLIRHmGVQv0uMs2k0=\", false, function () {\n  return [useNavigate];\n});\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","useNavigate","Modal","jsxDEV","_jsxDEV","Create","_s","form","setForm","First_Name","Last_Name","Email","Region","Rating","Fee","Sale","navigate","showModal","setShowModal","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","id","onChange","target","name","checked","isOpen","onClick","_c","$RefreshReg$"],"sources":["C:/Users/manoj/CodeBoxxManojKumarMuthu/mern-stack-example/mern/client/src/components/create.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router\";\r\n\r\n\r\n// export default function Create() {\r\n//   const [form, setForm] = useState({\r\n//     First_Name: \"\",\r\n//     Last_Name: \"\",\r\n//     Email: \"\",\r\n//     Region: \"\",\r\n//     Rating: \"\",\r\n//     Fee: \"\",\r\n//     Sale: \"\"\r\n//   });\r\n//   const navigate = useNavigate();\r\n\r\n//   // These methods will update the state properties.\r\n//   function updateForm(value) {\r\n//     return setForm((prev) => {\r\n//       return { ...prev, ...value };\r\n//     });\r\n//   }\r\n\r\n//   // This function will handle the submission.\r\n//   async function onSubmit(e) {\r\n//     e.preventDefault();\r\n\r\n//     // When a post request is sent to the create url, we'll add a new record to the database.\r\n//     const newPerson = { ...form };\r\n\r\n//     await fetch(\"http://localhost:5000/record/add\", {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//       body: JSON.stringify(newPerson),\r\n//     })\r\n//     .catch(error => {\r\n//       window.alert(error);\r\n//       return;\r\n//     });\r\n\r\n//     setForm({ \r\n//     First_Name: \"\",\r\n//     Last_Name: \"\",\r\n//     Email: \"\",\r\n//     Region: \"\",\r\n//     Rating: \"\",\r\n//     Fee: \"\",\r\n//     Sale: \"\" });\r\n//     navigate(\"/recordList\");\r\n//   }\r\n\r\n//   // This following section will display the form that takes the input from the user.\r\n//   return (\r\n//     <div>\r\n//       <h3>Create New Agent</h3>\r\n//       <form onSubmit={onSubmit}>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"First_Name\">First Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"First_Name\"\r\n//             value={form.First_Name}\r\n//             onChange={(e) => updateForm({ First_Name: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Last_Name\">Last Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Last_Name\"\r\n//             value={form.Last_Name}\r\n//             onChange={(e) => updateForm({ Last_Name: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Email\">Email</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Email\"\r\n//             value={form.Email}\r\n//             onChange={(e) => updateForm({ Email: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Rating\">Rating</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Rating\"\r\n//             value={form.Rating}\r\n//             onChange={(e) => updateForm({ Rating: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Fee\">Fee</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Fee\"\r\n//             value={form.Fee}\r\n//             onChange={(e) => updateForm({ Fee: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Sale\">Sale</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Sale\"\r\n//             value={form.Sale}\r\n//             onChange={(e) => updateForm({ Sale: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <div className=\"form-check form-check-inline\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"regionOptions\"\r\n//               id=\"regionEast\"\r\n//               value=\"East\"\r\n//               checked={form.Region === \"East\"}\r\n//               onChange={(e) => updateForm({ Region: e.target.value })}\r\n//             />\r\n//             <label htmlFor=\"regionEast\" className=\"form-check-label\">East</label>\r\n//           </div>\r\n//           <div className=\"form-check form-check-inline\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"regionOptions\"\r\n//               id=\"regionWest\"\r\n//               value=\"West\"\r\n//               checked={form.Region === \"West\"}\r\n//               onChange={(e) => updateForm({ Region: e.target.value })}\r\n//             />\r\n//             <label htmlFor=\"regionWest\" className=\"form-check-label\">West</label>\r\n//           </div>\r\n//           <div className=\"form-check form-check-inline\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"regionOptions\"\r\n//               id=\"regionNorth\"\r\n//               value=\"North\"\r\n//               checked={form.Region === \"North\"}\r\n//               onChange={(e) => updateForm({ Region: e.target.value })}\r\n//             />\r\n//             <label htmlFor=\"regionNorth\" className=\"form-check-label\">North</label>\r\n//           </div>\r\n//           <div className=\"form-check form-check-inline\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"regionOptions\"\r\n//               id=\"regionSouth\"\r\n//               value=\"South\"\r\n//               checked={form.Region === \"South\"}\r\n//               onChange={(e) => updateForm({ Region: e.target.value })}\r\n//             />\r\n//             <label htmlFor=\"regionSouth\" className=\"form-check-label\">South</label>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <input\r\n//             type=\"submit\"\r\n//             value=\"Create Agent\"\r\n//             className=\"btn btn-primary\"\r\n//           />\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport Modal from \"react-modal\";\r\n\r\nexport default function Create() {\r\n  const [form, setForm] = useState({\r\n    First_Name: \"\",\r\n    Last_Name: \"\",\r\n    Email: \"\",\r\n    Region: \"\",\r\n    Rating: \"\",\r\n    Fee: \"\",\r\n    Sale: \"\"\r\n  });\r\n  const navigate = useNavigate();\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // These methods will update the state properties.\r\n  function updateForm(value) {\r\n    return setForm((prev) => {\r\n      return { ...prev, ...value };\r\n    });\r\n  }\r\n\r\n  // This function will handle the submission.\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // When a post request is sent to the create url, we'll add a new record to the database.\r\n    const newPerson = { ...form };\r\n    setShowModal(true);\r\n  }\r\n\r\n  // This following section will display the form that takes the input from the user.\r\n  return (\r\n    <div>\r\n      <h3>Create New Agent</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"First_Name\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"First_Name\"\r\n            value={form.First_Name}\r\n            onChange={(e) => updateForm({ First_Name: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Last_Name\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"Last_Name\"\r\n            value={form.Last_Name}\r\n            onChange={(e) => updateForm({ Last_Name: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Email\">Email</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"Email\"\r\n            value={form.Email}\r\n            onChange={(e) => updateForm({ Email: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Rating\">Rating</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"Rating\"\r\n            value={form.Rating}\r\n            onChange={(e) => updateForm({ Rating: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Fee\">Fee</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"Fee\"\r\n            value={form.Fee}\r\n            onChange={(e) => updateForm({ Fee: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Sale\">Sale</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"Sale\"\r\n            value={form.Sale}\r\n            onChange={(e) => updateForm({ Sale: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <div className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"regionOptions\"\r\n              id=\"regionEast\"\r\n              value=\"East\"\r\n              checked={form.Region === \"East\"}\r\n              onChange={(e) => updateForm({ Region: e.target.value })}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"regionEast\">\r\n              East\r\n              </label>\r\n              </div>\r\n              <div className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"regionOptions\"\r\n              id=\"regionWest\"\r\n              value=\"West\"\r\n              checked={form.Region === \"West\"}\r\n              onChange={(e) => updateForm({ Region: e.target.value })}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"regionWest\">\r\n              West\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"regionOptions\"\r\n              id=\"regionNorth\"\r\n              value=\"North\"\r\n              checked={form.Region === \"North\"}\r\n              onChange={(e) => updateForm({ Region: e.target.value })}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"regionNorth\">\r\n              North\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"regionOptions\"\r\n              id=\"regionSouth\"\r\n              value=\"South\"\r\n              checked={form.Region === \"South\"}\r\n              onChange={(e) => updateForm({ Region: e.target.value })}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"regionSouth\">\r\n              South\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Create Agent\"\r\n            className=\"btn btn-primary\"\r\n          />\r\n        </div>\r\n      </form>\r\n      <Modal isOpen={showModal}>\r\n        <div className=\"modal-content\">\r\n          <h4>Are you sure you want to continue?</h4>\r\n          <div className=\"modal-buttons\">\r\n            <button onClick={() => setShowModal(false)}>No/Back</button>\r\n            <button onClick={() => navigate(\"/agents\")}>Yes/Confirm</button>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n);\r\n}\r\n"],"mappings":";;AAAA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,cAAc;AAC1C,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAC/BS,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,GAAG,EA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}