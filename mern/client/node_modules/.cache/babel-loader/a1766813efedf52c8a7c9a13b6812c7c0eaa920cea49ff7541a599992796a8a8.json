{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manoj\\\\CodeBoxxManojKumarMuthu\\\\mern-stack-example\\\\mern\\\\client\\\\src\\\\components\\\\recordList.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { Link, NavLink } from \"react-router-dom\";\n\n// const Record = (props) => (\n//   <tr>\n//     <td>{props.record.First_Name}</td>\n//     <td>{props.record.Last_Name}</td>\n//     <td>{props.record.Email}</td>\n//     <td>{props.record.Region}</td>\n//     <td>{props.record.Rating}</td>\n//     <td>{props.record.Fee}</td>\n//     <td>{props.record.Sale}</td>\n//     <td>\n//       <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\n//       <button className=\"btn btn-link\"\n//         onClick={() => {\n//           props.deleteRecord(props.record._id);\n//         }}\n//       >\n//         Delete\n//       </button>\n//     </td>\n//   </tr>\n// );\n\n// export default function RecordList() {\n//   const [records, setRecords] = useState([]);\n\n//   // This method fetches the records from the database.\n//   useEffect(() => {\n//     async function getRecords() {\n//       const response = await fetch(`http://localhost:5000/record/`);\n\n//       if (!response.ok) {\n//         const message = `An error occured: ${response.statusText}`;\n//         window.alert(message);\n//         return;\n//       }\n\n//       const records = await response.json();\n//       setRecords(records);\n//     }\n\n//     getRecords();\n\n//     return;\n//   }, [records.length]);\n\n//   // This method will delete a record\n//   async function deleteRecord(id) {\n//     await fetch(`http://localhost:5000/${id}`, {\n//       method: \"DELETE\"\n//     });\n\n//     const newRecords = records.filter((el) => el._id !== id);\n//     setRecords(newRecords);\n//   }\n\n//   // This method will map out the records on the table\n//   function recordList() {\n//     return records.map((record) => {\n//       return (\n//         <Record\n//           record={record}\n//           deleteRecord={() => deleteRecord(record._id)}\n//           key={record._id}\n//         />\n//       );\n//     });\n//   }\n\n//   // This following section will display the table with the records of individuals.\n//   return (\n//     <div>\n//       <div>\n//         <NavLink className=\"btn btn-secondary mt-2\" to=\"/create\">\n//           Create Agent\n//         </NavLink>\n//       </div>\n//       <h3 style={{ textAlign: \"center\" }}>Record List</h3>\n//       <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n//         <thead>\n//           <tr>\n//             <th>First Name</th>\n//             <th>Last Name</th>\n//             <th>Email</th>\n//             <th>Region</th>\n//             <th>Rating</th>\n//             <th>Fee</th>\n//             <th>Sale</th>\n//             <th>Action</th>\n//           </tr>\n//         </thead>\n//         <tbody>{recordList()}</tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// RecordList.js\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Record = props => {\n  _s();\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\n  const [record, setRecord] = useState(props.record);\n  function ConfirmationModal(_ref) {\n    let {\n      message,\n      showConfirmationModal,\n      onConfirm,\n      onCancel\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: showConfirmationModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onConfirm,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: onCancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  }\n\n  // This method will delete a record\n  async function deleteRecord(id) {\n    await fetch(`http://localhost:5000/record/${id}`, {\n      method: \"DELETE\"\n    });\n  }\n\n  // This method will delete an agent\n  const handleDeleteAgent = async () => {\n    await deleteRecord(record._id);\n    setShowConfirmationModal(false);\n    setRecord(null);\n  };\n\n  // This method will cancel the deletion of an agent\n  const handleCancelDelete = () => {\n    setShowConfirmationModal(false);\n  };\n  if (!record) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: record.First_Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: record.Last_Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: record.Email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: record.Region\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: record.Rating\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: record.Fee\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: record.Sale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-link\",\n        to: `/edit/${record._id}`,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), \" |\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-link\",\n        onClick: () => {\n          setShowConfirmationModal(true);\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n        message: \"Are you sure you want to delete this agent?\",\n        showConfirmationModal: showConfirmationModal,\n        onConfirm: handleDeleteAgent,\n        onCancel: handleCancelDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(Record, \"Mk15LB2PHBGp3R7eSiv6irMPDhw=\");\n_c = Record;\nexport default function RecordList() {\n  _s2();\n  const [records, setRecords] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5000/record/`);\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const records = await response.json();\n      setRecords(records);\n    }\n    getRecords();\n    return;\n  }, []);\n  if (records.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No records found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Fee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Sale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: records.map(record => /*#__PURE__*/_jsxDEV(Record, {\n        record: record\n      }, record._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s2(RecordList, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c2 = RecordList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"RecordList\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Record","props","_s","showConfirmationModal","setShowConfirmationModal","record","setRecord","ConfirmationModal","_ref","message","onConfirm","onCancel","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","deleteRecord","id","fetch","method","handleDeleteAgent","_id","handleCancelDelete","First_Name","Last_Name","Email","Region","Rating","Fee","Sale","to","_c","RecordList","_s2","records","setRecords","getRecords","response","ok","statusText","window","alert","json","length","map","_c2","$RefreshReg$"],"sources":["C:/Users/manoj/CodeBoxxManojKumarMuthu/mern-stack-example/mern/client/src/components/recordList.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { Link, NavLink } from \"react-router-dom\";\r\n\r\n\r\n// const Record = (props) => (\r\n//   <tr>\r\n//     <td>{props.record.First_Name}</td>\r\n//     <td>{props.record.Last_Name}</td>\r\n//     <td>{props.record.Email}</td>\r\n//     <td>{props.record.Region}</td>\r\n//     <td>{props.record.Rating}</td>\r\n//     <td>{props.record.Fee}</td>\r\n//     <td>{props.record.Sale}</td>\r\n//     <td>\r\n//       <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\r\n//       <button className=\"btn btn-link\"\r\n//         onClick={() => {\r\n//           props.deleteRecord(props.record._id);\r\n//         }}\r\n//       >\r\n//         Delete\r\n//       </button>\r\n//     </td>\r\n//   </tr>\r\n// );\r\n\r\n// export default function RecordList() {\r\n//   const [records, setRecords] = useState([]);\r\n\r\n//   // This method fetches the records from the database.\r\n//   useEffect(() => {\r\n//     async function getRecords() {\r\n//       const response = await fetch(`http://localhost:5000/record/`);\r\n\r\n//       if (!response.ok) {\r\n//         const message = `An error occured: ${response.statusText}`;\r\n//         window.alert(message);\r\n//         return;\r\n//       }\r\n\r\n//       const records = await response.json();\r\n//       setRecords(records);\r\n//     }\r\n\r\n//     getRecords();\r\n\r\n//     return;\r\n//   }, [records.length]);\r\n\r\n//   // This method will delete a record\r\n//   async function deleteRecord(id) {\r\n//     await fetch(`http://localhost:5000/${id}`, {\r\n//       method: \"DELETE\"\r\n//     });\r\n\r\n//     const newRecords = records.filter((el) => el._id !== id);\r\n//     setRecords(newRecords);\r\n//   }\r\n\r\n//   // This method will map out the records on the table\r\n//   function recordList() {\r\n//     return records.map((record) => {\r\n//       return (\r\n//         <Record\r\n//           record={record}\r\n//           deleteRecord={() => deleteRecord(record._id)}\r\n//           key={record._id}\r\n//         />\r\n//       );\r\n//     });\r\n//   }\r\n\r\n//   // This following section will display the table with the records of individuals.\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         <NavLink className=\"btn btn-secondary mt-2\" to=\"/create\">\r\n//           Create Agent\r\n//         </NavLink>\r\n//       </div>\r\n//       <h3 style={{ textAlign: \"center\" }}>Record List</h3>\r\n//       <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>First Name</th>\r\n//             <th>Last Name</th>\r\n//             <th>Email</th>\r\n//             <th>Region</th>\r\n//             <th>Rating</th>\r\n//             <th>Fee</th>\r\n//             <th>Sale</th>\r\n//             <th>Action</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>{recordList()}</tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// RecordList.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Record = (props) => {\r\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\r\n  const [record, setRecord] = useState(props.record);\r\n\r\n  function ConfirmationModal({ message, showConfirmationModal, onConfirm, onCancel }) {\r\n    return (\r\n      <>\r\n        {showConfirmationModal && (\r\n          <div className=\"modal\">\r\n            <div className=\"modal-content\">\r\n              <p>{message}</p>\r\n              <div>\r\n                <button onClick={onConfirm}>Confirm</button>\r\n                <button onClick={onCancel}>Cancel</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  // This method will delete a record\r\n  async function deleteRecord(id) {\r\n    await fetch(`http://localhost:5000/record/${id}`, {\r\n      method: \"DELETE\"\r\n    });\r\n  }\r\n\r\n  // This method will delete an agent\r\n  const handleDeleteAgent = async () => {\r\n    await deleteRecord(record._id);\r\n    setShowConfirmationModal(false);\r\n    setRecord(null);\r\n  };\r\n\r\n  // This method will cancel the deletion of an agent\r\n  const handleCancelDelete = () => {\r\n    setShowConfirmationModal(false);\r\n  };\r\n\r\n  if (!record) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>{record.First_Name}</td>\r\n      <td>{record.Last_Name}</td>\r\n      <td>{record.Email}</td>\r\n      <td>{record.Region}</td>\r\n      <td>{record.Rating}</td>\r\n      <td>{record.Fee}</td>\r\n      <td>{record.Sale}</td>\r\n      <td>\r\n        <Link className=\"btn btn-link\" to={`/edit/${record._id}`}>Edit</Link> |\r\n        <button className=\"btn btn-link\"\r\n          onClick={() => {\r\n            setShowConfirmationModal(true);\r\n          }}\r\n        >\r\n          Delete\r\n        </button>\r\n        <ConfirmationModal\r\n          message=\"Are you sure you want to delete this agent?\"\r\n          showConfirmationModal={showConfirmationModal}\r\n          onConfirm={handleDeleteAgent}\r\n          onCancel={handleCancelDelete}\r\n        />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default function RecordList() {\r\n  const [records, setRecords] = useState([]);\r\n\r\n  // This method fetches the records from the database.\r\n  useEffect(() => {\r\n    async function getRecords() {\r\n      const response = await fetch(`http://localhost:5000/record/`);\r\n\r\n      if (!response.ok) {\r\n        const message = `An error occured: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n\r\n      const records = await response.json();\r\n      setRecords(records);\r\n    }\r\n\r\n    getRecords();\r\n\r\n    return;\r\n  }, []);\r\n\r\n  if (records.length === 0) {\r\n    return <p>No records found.</p>;\r\n  }\r\n\r\n  return (\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Email</th>\r\n          <th>Region</th>\r\n          <th>Rating</th>\r\n          <th>Fee</th>\r\n          <th>Sale</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {records.map((record) => (\r\n          <Record record={record} key={record._id} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}