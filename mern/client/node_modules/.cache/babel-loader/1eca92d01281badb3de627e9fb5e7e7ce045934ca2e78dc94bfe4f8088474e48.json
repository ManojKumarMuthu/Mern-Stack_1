{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manoj\\\\CodeBoxxManojKumarMuthu\\\\mern-stack-example\\\\mern\\\\client\\\\src\\\\components\\\\edit.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useParams, useNavigate } from \"react-router\";\n// import Button from 'react-bootstrap/Button';\n// import Modal from 'react-bootstrap/Modal';\n\n// export default function Edit() {\n//   const [form, setForm] = useState({\n//     First_Name: \"\",\n//     Last_Name: \"\",\n//     Email: \"\",\n//     Region: \"\",\n//     Rating: \"\",\n//     Fee: \"\",\n//     Sale: \"\",\n//     records: [],\n//   });\n//   const params = useParams();\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       const id = params.id.toString();\n//       const response = await fetch(`http://localhost:5000/record/${id}`);\n\n//       if (!response.ok) {\n//         const message = `An error has occurred: ${response.statusText}`;\n//         window.alert(message);\n//         return;\n//       }\n\n//       const record = await response.json();\n//       if (!record) {\n//         window.alert(`Record with id ${id} not found`);\n//         navigate(\"/\");\n//         return;\n//       }\n\n//       setForm(record);\n//     }\n\n//     fetchData();\n//   }, [params.id, navigate]);\n\n//   function updateForm(value) {\n//     setForm((prev) => {\n//       return { ...prev, ...value };\n//     });\n//   }\n\n//   async function onSubmit(e) {\n//     e.preventDefault();\n//     const editedPerson = {\n//       First_Name: form.First_Name,\n//       Last_Name: form.Last_Name,\n//       Email: form.Email,\n//       Region: form.Region,\n//       Rating: form.Rating,\n//       Fee: form.Fee,\n//       Sale: form.Sale,\n//     };\n\n//     await fetch(`http://localhost:5000/update/${params.id}`, {\n//       method: \"POST\",\n//       body: JSON.stringify(editedPerson),\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//     });\n\n//     navigate(\"/recordList\");\n//   }\n\n//   function Example() {\n//     const [show, setShow] = useState(false);\n\n//     const handleClose = () => setShow(false);\n//     const handleShow = () => setShow(true);\n\n//     return (\n//       <>\n\n//         <Modal show={show} onHide={handleClose}>\n//           <Modal.Header closeButton>\n//             <Modal.Title>Modal heading</Modal.Title>\n//           </Modal.Header>\n//           <Modal.Body>Are you sure you want to update the Agent!</Modal.Body>\n//           <Modal.Footer>\n//             <Button variant=\"secondary\" onClick={handleClose}>\n//               Close\n//             </Button>\n//             <Button variant=\"primary\" onClick={handleClose}>\n//               Save Changes\n//             </Button>\n//           </Modal.Footer>\n//         </Modal>\n//       </>\n//     );\n//   }\n\n//   // This following section will display the form that takes input from the user to update the data.\n//   return (\n//     <div>\n//       <h3>Update Record</h3>\n//       <form onSubmit={onSubmit}>\n//       <div className=\"form-group\">\n//           <label htmlFor=\"First_Name\">First Name</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"First_Name\"\n//             value={form.First_Name}\n//             onChange={(e) => updateForm({ First_Name: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Last_Name\">Last Name</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Last_Name1\"\n//             value={form.Last_Name}\n//             onChange={(e) => updateForm({ Last_Name: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Email\">Email</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Email1\"\n//             value={form.Email}\n//             onChange={(e) => updateForm({ Email: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Rating\">Rating</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Rating1\"\n//             value={form.Rating}\n//             onChange={(e) => updateForm({ Rating: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Fee\">Fee</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Fee1\"\n//             value={form.Fee}\n//             onChange={(e) => updateForm({ Fee: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Sale\">Sale</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Sale1\"\n//             value={form.Sale}\n//             onChange={(e) => updateForm({ Sale: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <div className=\"form-check form-check-inline\">\n//             <input\n//               className=\"form-check-input\"\n//               type=\"radio\"\n//               name=\"regionOptions\"\n//               id=\"regionEast1\"\n//               value=\"East\"\n//               checked={form.Region === \"East\"}\n//               onChange={(e) => updateForm({ Region: e.target.value })}\n//             />\n//             <label htmlFor=\"regionEast\" className=\"form-check-label\">East</label>\n//           </div>\n//           <div className=\"form-check form-check-inline\">\n//             <input\n//               className=\"form-check-input\"\n//               type=\"radio\"\n//               name=\"regionOptions\"\n//               id=\"regionWest11\"\n//               value=\"West\"\n//               checked={form.Region === \"West\"}\n//               onChange={(e) => updateForm({ Region: e.target.value })}\n//             />\n//             <label htmlFor=\"regionWest\" className=\"form-check-label\">West</label>\n//           </div>\n//           <div className=\"form-check form-check-inline\">\n//             <input\n//               className=\"form-check-input\"\n//               type=\"radio\"\n//               name=\"regionOptions\"\n//               id=\"regionNorth1\"\n//               value=\"North\"\n//               checked={form.Region === \"North\"}\n//               onChange={(e) => updateForm({ Region: e.target.value })}\n//             />\n//             <label htmlFor=\"regionNorth\" className=\"form-check-label\">North</label>\n//           </div>\n//           <div className=\"form-check form-check-inline\">\n//             <input\n//               className=\"form-check-input\"\n//               type=\"radio\"\n//               name=\"regionOptions\"\n//               id=\"regionSouth1\"\n//               value=\"South\"\n//               checked={form.Region === \"South\"}\n//               onChange={(e) => updateForm({ Region: e.target.value })}\n//             />\n//             <label htmlFor=\"regionSouth\" className=\"form-check-label\">South</label>\n//           </div>\n//         </div>\n//         <div className=\"form-group\">\n//           <input\n//             type=\"submit\"\n//             value=\"Update Agent\"\n//             className=\"btn btn-primary\"\n//           />\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\n// import React, { useState, useEffect } from \"react\";\n// import { useParams, useNavigate } from \"react-router\";\n// import Button from 'react-bootstrap/Button';\n// import Modal from 'react-bootstrap/Modal';\n\n// export default function Edit() {\n//   const [form, setForm] = useState({\n//     First_Name: \"\",\n//     Last_Name: \"\",\n//     Email: \"\",\n//     Region: \"\",\n//     Rating: \"\",\n//     Fee: \"\",\n//     Sale: \"\",\n//     records: [],\n//   });\n//   const params = useParams();\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       const id = params.id.toString();\n//       const response = await fetch(`http://localhost:5000/record/${id}`);\n\n//       if (!response.ok) {\n//         const message = `An error has occurred: ${response.statusText}`;\n//         window.alert(message);\n//         return;\n//       }\n\n//       const record = await response.json();\n//       if (!record) {\n//         window.alert(`Record with id ${id} not found`);\n//         navigate(\"/\");\n//         return;\n//       }\n\n//       setForm(record);\n//     }\n\n//     fetchData();\n//   }, [params.id, navigate]);\n\n//   function updateForm(value) {\n//     setForm((prev) => {\n//       return { ...prev, ...value };\n//     });\n//   }\n\n//   async function onSubmit(e) {\n//     e.preventDefault();\n//     const editedPerson = {\n//       First_Name: form.First_Name,\n//       Last_Name: form.Last_Name,\n//       Email: form.Email,\n//       Region: form.Region,\n//       Rating: form.Rating,\n//       Fee: form.Fee,\n//       Sale: form.Sale,\n//     };\n\n//     setShowModal(true); // show confirmation modal\n//   }\n\n//   async function confirmUpdate() {\n//     const editedPerson = {\n//       First_Name: form.First_Name,\n//       Last_Name: form.Last_Name,\n//       Email: form.Email,\n//       Region: form.Region,\n//       Rating: form.Rating,\n//       Fee: form.Fee,\n//       Sale: form.Sale,\n//     };\n\n//     await fetch(`http://localhost:5000/update/${params.id}`, {\n//       method: \"POST\",\n//       body: JSON.stringify(editedPerson),\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//     });\n\n//     navigate(\"/recordList\");\n//   }\n\n//   function closeModal() {\n//     setShowModal(false);\n//   }\n\n//   const [showModal, setShowModal] = useState(false);\n\n//   return (\n//     <div>\n//       <h3>Update Record</h3>\n//       <form onSubmit={onSubmit}>\n//          <div className=\"form-group\">\n//            <label htmlFor=\"First_Name\">First Name</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"First_Name\"\n//             value={form.First_Name}\n//             onChange={(e) => updateForm({ First_Name: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Last_Name\">Last Name</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Last_Name1\"\n//             value={form.Last_Name}\n//             onChange={(e) => updateForm({ Last_Name: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Email\">Email</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Email1\"\n//             value={form.Email}\n//             onChange={(e) => updateForm({ Email: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Rating\">Rating</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Rating1\"\n//             value={form.Rating}\n//             onChange={(e) => updateForm({ Rating: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Fee\">Fee</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Fee1\"\n//             value={form.Fee}\n//             onChange={(e) => updateForm({ Fee: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Sale\">Sale</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Sale1\"\n//             value={form.Sale}\n//             onChange={(e) => updateForm({ Sale: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <div className=\"form-check form-check-inline\">\n//             <input\n//               className=\"form-check-input\"\n//               type=\"radio\"\n//               name=\"regionOptions\"\n//               id=\"regionEast1\"\n//               value=\"East\"\n//               checked={form.Region === \"East\"}\n//               onChange={(e) => updateForm({ Region: e.target.value })}\n//             />\n//             <label htmlFor=\"regionEast\" className=\"form-check-label\">East</label>\n//           </div>\n//           <div className=\"form-check form-check-inline\">\n//             <input\n//               className=\"form-check-input\"\n//               type=\"radio\"\n//               name=\"regionOptions\"\n//               id=\"regionWest11\"\n//               value=\"West\"\n//               checked={form.Region === \"West\"}\n//               onChange={(e) => updateForm({ Region: e.target.value })}\n//             />\n//             <label htmlFor=\"regionWest\" className=\"form-check-label\">West</label>\n//           </div>\n//           <div className=\"form-check form-check-inline\">\n//             <input\n//               className=\"form-check-input\"\n//               type=\"radio\"\n//               name=\"regionOptions\"\n//               id=\"regionNorth1\"\n//               value=\"North\"\n//               checked={form.Region === \"North\"}\n//               onChange={(e) => updateForm({ Region: e.target.value })}\n//             />\n//             <label htmlFor=\"regionNorth\" className=\"form-check-label\">North</label>\n//           </div>\n//           <div className=\"form-check form-check-inline\">\n//             <input\n//               className=\"form-check-input\"\n//               type=\"radio\"\n//               name=\"regionOptions\"\n//               id=\"regionSouth1\"\n//               value=\"South\"\n//               checked={form.Region === \"South\"}\n//               onChange={(e) => updateForm({ Region: e.target.value })}\n//             />\n//             <label htmlFor=\"regionSouth\" className=\"form-check-label\">South</label>\n//           </div>\n//         </div>\n//         <div className=\"form-group\">\n//           <input\n//             type=\"submit\"\n//             value=\"Update Agent\"\n//             className=\"btn btn-primary\"\n//           />\n//         </div>\n//       </form>\n//       <Button variant=\"primary\" type=\"submit\" onClick={onSubmit}>\n//         Update\n//       </Button>\n\n//       <Modal show={showModal} onHide={closeModal}>\n//     <Modal.Header closeButton>\n//       <Modal.Title>Confirm Update</Modal.Title>\n//     </Modal.Header>\n//     <Modal.Body>Are you sure you want to update this record?</Modal.Body>\n//     <Modal.Footer>\n//       <Button variant=\"secondary\" onClick={closeModal}>\n//         Cancel\n//       </Button>\n//       <Button variant=\"primary\" onClick={confirmUpdate}>\n//         Update\n//       </Button>\n//     </Modal.Footer>\n//   </Modal>\n// </div>\n\n//   );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\n// move the Modal component declaration here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConfirmationModal(props) {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.showModal,\n    onHide: props.closeModal,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Confirmation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: \"Are you sure you want to update this record?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: props.closeModal,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: props.confirmUpdate,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 482,\n    columnNumber: 5\n  }, this);\n}\n_c = ConfirmationModal;\nexport default function Edit() {\n  _s();\n  const [form, setForm] = useState({\n    First_Name: \"\",\n    Last_Name: \"\",\n    Email: \"\",\n    Region: \"\",\n    Rating: \"\",\n    Fee: \"\",\n    Sale: \"\",\n    records: []\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${id}`);\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n      setForm(record);\n    }\n    fetchData();\n  }, [params.id, navigate]);\n  function updateForm(value) {\n    setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPerson = {\n      First_Name: form.First_Name,\n      Last_Name: form.Last_Name,\n      Email: form.Email,\n      Region: form.Region,\n      Rating: form.Rating,\n      Fee: form.Fee,\n      Sale: form.Sale\n    };\n    setShowModal(true); // show confirmation modal\n  }\n\n  async function confirmUpdate() {\n    const editedPerson = {\n      First_Name: form.First_Name,\n      Last_Name: form.Last_Name,\n      Email: form.Email,\n      Region: form.Region,\n      Rating: form.Rating,\n      Fee: form.Fee,\n      Sale: form.Sale\n    };\n    await fetch(`http://localhost:5000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    navigate(\"/recordList\");\n  }\n  function closeModal() {\n    setShowModal(false);\n  }\n  const [showModal, setShowModal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"First_Name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"First_Name\",\n          value: form.First_Name,\n          onChange: e => updateForm({\n            First_Name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Last_Name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"Last_Name1\",\n          value: form.Last_Name,\n          onChange: e => updateForm({\n            Last_Name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"Email1\",\n          value: form.Email,\n          onChange: e => updateForm({\n            Email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Rating\",\n          children: \"Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"Rating1\",\n          value: form.Rating,\n          onChange: e => updateForm({\n            Rating: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Fee\",\n          children: \"Fee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"Fee1\",\n          value: form.Fee,\n          onChange: e => updateForm({\n            Fee: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Sale\",\n          children: \"Sale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"Sale1\",\n          value: form.Sale,\n          onChange: e => updateForm({\n            Sale: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"regionOptions\",\n            id: \"regionEast1\",\n            value: \"East\",\n            checked: form.Region === \"East\",\n            onChange: e => updateForm({\n              Region: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"regionEast\",\n            className: \"form-check-label\",\n            children: \"East\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"regionOptions\",\n            id: \"regionWest11\",\n            value: \"West\",\n            checked: form.Region === \"West\",\n            onChange: e => updateForm({\n              Region: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"regionWest\",\n            className: \"form-check-label\",\n            children: \"West\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"regionOptions\",\n            id: \"regionNorth1\",\n            value: \"North\",\n            checked: form.Region === \"North\",\n            onChange: e => updateForm({\n              Region: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"regionNorth\",\n            className: \"form-check-label\",\n            children: \"North\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"regionOptions\",\n            id: \"regionSouth1\",\n            value: \"South\",\n            checked: form.Region === \"South\",\n            onChange: e => updateForm({\n              Region: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"regionSouth\",\n            className: \"form-check-label\",\n            children: \"South\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmationModal, {\n      showModal: showModal,\n      closeModal: closeModal,\n      confirmUpdate: confirmUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 587,\n    columnNumber: 5\n  }, this);\n}\n_s(Edit, \"DYp+L0eRAXRMPOAHkj0SjcpNNuw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c2 = Edit;\nvar _c, _c2;\n$RefreshReg$(_c, \"ConfirmationModal\");\n$RefreshReg$(_c2, \"Edit\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Button","Modal","jsxDEV","_jsxDEV","ConfirmationModal","props","show","showModal","onHide","closeModal","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Footer","variant","onClick","confirmUpdate","_c","Edit","_s","form","setForm","First_Name","Last_Name","Email","Region","Rating","Fee","Sale","records","params","navigate","fetchData","id","toString","response","fetch","ok","message","statusText","window","alert","record","json","updateForm","value","prev","onSubmit","e","preventDefault","editedPerson","setShowModal","method","body","JSON","stringify","headers","className","htmlFor","type","onChange","target","name","checked","_c2","$RefreshReg$"],"sources":["C:/Users/manoj/CodeBoxxManojKumarMuthu/mern-stack-example/mern/client/src/components/edit.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useParams, useNavigate } from \"react-router\";\r\n// import Button from 'react-bootstrap/Button';\r\n// import Modal from 'react-bootstrap/Modal';\r\n\r\n// export default function Edit() {\r\n//   const [form, setForm] = useState({\r\n//     First_Name: \"\",\r\n//     Last_Name: \"\",\r\n//     Email: \"\",\r\n//     Region: \"\",\r\n//     Rating: \"\",\r\n//     Fee: \"\",\r\n//     Sale: \"\",\r\n//     records: [],\r\n//   });\r\n//   const params = useParams();\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     async function fetchData() {\r\n//       const id = params.id.toString();\r\n//       const response = await fetch(`http://localhost:5000/record/${id}`);\r\n\r\n//       if (!response.ok) {\r\n//         const message = `An error has occurred: ${response.statusText}`;\r\n//         window.alert(message);\r\n//         return;\r\n//       }\r\n\r\n//       const record = await response.json();\r\n//       if (!record) {\r\n//         window.alert(`Record with id ${id} not found`);\r\n//         navigate(\"/\");\r\n//         return;\r\n//       }\r\n\r\n//       setForm(record);\r\n//     }\r\n\r\n//     fetchData();\r\n//   }, [params.id, navigate]);\r\n\r\n//   function updateForm(value) {\r\n//     setForm((prev) => {\r\n//       return { ...prev, ...value };\r\n//     });\r\n//   }\r\n\r\n//   async function onSubmit(e) {\r\n//     e.preventDefault();\r\n//     const editedPerson = {\r\n//       First_Name: form.First_Name,\r\n//       Last_Name: form.Last_Name,\r\n//       Email: form.Email,\r\n//       Region: form.Region,\r\n//       Rating: form.Rating,\r\n//       Fee: form.Fee,\r\n//       Sale: form.Sale,\r\n//     };\r\n\r\n//     await fetch(`http://localhost:5000/update/${params.id}`, {\r\n//       method: \"POST\",\r\n//       body: JSON.stringify(editedPerson),\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//     });\r\n\r\n//     navigate(\"/recordList\");\r\n//   }\r\n\r\n//   function Example() {\r\n//     const [show, setShow] = useState(false);\r\n\r\n//     const handleClose = () => setShow(false);\r\n//     const handleShow = () => setShow(true);\r\n\r\n//     return (\r\n//       <>\r\n\r\n\r\n//         <Modal show={show} onHide={handleClose}>\r\n//           <Modal.Header closeButton>\r\n//             <Modal.Title>Modal heading</Modal.Title>\r\n//           </Modal.Header>\r\n//           <Modal.Body>Are you sure you want to update the Agent!</Modal.Body>\r\n//           <Modal.Footer>\r\n//             <Button variant=\"secondary\" onClick={handleClose}>\r\n//               Close\r\n//             </Button>\r\n//             <Button variant=\"primary\" onClick={handleClose}>\r\n//               Save Changes\r\n//             </Button>\r\n//           </Modal.Footer>\r\n//         </Modal>\r\n//       </>\r\n//     );\r\n//   }\r\n\r\n\r\n//   // This following section will display the form that takes input from the user to update the data.\r\n//   return (\r\n//     <div>\r\n//       <h3>Update Record</h3>\r\n//       <form onSubmit={onSubmit}>\r\n//       <div className=\"form-group\">\r\n//           <label htmlFor=\"First_Name\">First Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"First_Name\"\r\n//             value={form.First_Name}\r\n//             onChange={(e) => updateForm({ First_Name: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Last_Name\">Last Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Last_Name1\"\r\n//             value={form.Last_Name}\r\n//             onChange={(e) => updateForm({ Last_Name: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Email\">Email</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Email1\"\r\n//             value={form.Email}\r\n//             onChange={(e) => updateForm({ Email: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Rating\">Rating</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Rating1\"\r\n//             value={form.Rating}\r\n//             onChange={(e) => updateForm({ Rating: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Fee\">Fee</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Fee1\"\r\n//             value={form.Fee}\r\n//             onChange={(e) => updateForm({ Fee: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Sale\">Sale</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Sale1\"\r\n//             value={form.Sale}\r\n//             onChange={(e) => updateForm({ Sale: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <div className=\"form-check form-check-inline\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"regionOptions\"\r\n//               id=\"regionEast1\"\r\n//               value=\"East\"\r\n//               checked={form.Region === \"East\"}\r\n//               onChange={(e) => updateForm({ Region: e.target.value })}\r\n//             />\r\n//             <label htmlFor=\"regionEast\" className=\"form-check-label\">East</label>\r\n//           </div>\r\n//           <div className=\"form-check form-check-inline\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"regionOptions\"\r\n//               id=\"regionWest11\"\r\n//               value=\"West\"\r\n//               checked={form.Region === \"West\"}\r\n//               onChange={(e) => updateForm({ Region: e.target.value })}\r\n//             />\r\n//             <label htmlFor=\"regionWest\" className=\"form-check-label\">West</label>\r\n//           </div>\r\n//           <div className=\"form-check form-check-inline\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"regionOptions\"\r\n//               id=\"regionNorth1\"\r\n//               value=\"North\"\r\n//               checked={form.Region === \"North\"}\r\n//               onChange={(e) => updateForm({ Region: e.target.value })}\r\n//             />\r\n//             <label htmlFor=\"regionNorth\" className=\"form-check-label\">North</label>\r\n//           </div>\r\n//           <div className=\"form-check form-check-inline\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"regionOptions\"\r\n//               id=\"regionSouth1\"\r\n//               value=\"South\"\r\n//               checked={form.Region === \"South\"}\r\n//               onChange={(e) => updateForm({ Region: e.target.value })}\r\n//             />\r\n//             <label htmlFor=\"regionSouth\" className=\"form-check-label\">South</label>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <input\r\n//             type=\"submit\"\r\n//             value=\"Update Agent\"\r\n//             className=\"btn btn-primary\"\r\n//           />\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { useParams, useNavigate } from \"react-router\";\r\n// import Button from 'react-bootstrap/Button';\r\n// import Modal from 'react-bootstrap/Modal';\r\n\r\n// export default function Edit() {\r\n//   const [form, setForm] = useState({\r\n//     First_Name: \"\",\r\n//     Last_Name: \"\",\r\n//     Email: \"\",\r\n//     Region: \"\",\r\n//     Rating: \"\",\r\n//     Fee: \"\",\r\n//     Sale: \"\",\r\n//     records: [],\r\n//   });\r\n//   const params = useParams();\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     async function fetchData() {\r\n//       const id = params.id.toString();\r\n//       const response = await fetch(`http://localhost:5000/record/${id}`);\r\n\r\n//       if (!response.ok) {\r\n//         const message = `An error has occurred: ${response.statusText}`;\r\n//         window.alert(message);\r\n//         return;\r\n//       }\r\n\r\n//       const record = await response.json();\r\n//       if (!record) {\r\n//         window.alert(`Record with id ${id} not found`);\r\n//         navigate(\"/\");\r\n//         return;\r\n//       }\r\n\r\n//       setForm(record);\r\n//     }\r\n\r\n//     fetchData();\r\n//   }, [params.id, navigate]);\r\n\r\n//   function updateForm(value) {\r\n//     setForm((prev) => {\r\n//       return { ...prev, ...value };\r\n//     });\r\n//   }\r\n\r\n//   async function onSubmit(e) {\r\n//     e.preventDefault();\r\n//     const editedPerson = {\r\n//       First_Name: form.First_Name,\r\n//       Last_Name: form.Last_Name,\r\n//       Email: form.Email,\r\n//       Region: form.Region,\r\n//       Rating: form.Rating,\r\n//       Fee: form.Fee,\r\n//       Sale: form.Sale,\r\n//     };\r\n\r\n//     setShowModal(true); // show confirmation modal\r\n//   }\r\n\r\n//   async function confirmUpdate() {\r\n//     const editedPerson = {\r\n//       First_Name: form.First_Name,\r\n//       Last_Name: form.Last_Name,\r\n//       Email: form.Email,\r\n//       Region: form.Region,\r\n//       Rating: form.Rating,\r\n//       Fee: form.Fee,\r\n//       Sale: form.Sale,\r\n//     };\r\n\r\n//     await fetch(`http://localhost:5000/update/${params.id}`, {\r\n//       method: \"POST\",\r\n//       body: JSON.stringify(editedPerson),\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//     });\r\n\r\n//     navigate(\"/recordList\");\r\n//   }\r\n\r\n//   function closeModal() {\r\n//     setShowModal(false);\r\n//   }\r\n\r\n//   const [showModal, setShowModal] = useState(false);\r\n\r\n//   return (\r\n//     <div>\r\n//       <h3>Update Record</h3>\r\n//       <form onSubmit={onSubmit}>\r\n//          <div className=\"form-group\">\r\n//            <label htmlFor=\"First_Name\">First Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"First_Name\"\r\n//             value={form.First_Name}\r\n//             onChange={(e) => updateForm({ First_Name: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Last_Name\">Last Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Last_Name1\"\r\n//             value={form.Last_Name}\r\n//             onChange={(e) => updateForm({ Last_Name: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Email\">Email</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Email1\"\r\n//             value={form.Email}\r\n//             onChange={(e) => updateForm({ Email: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Rating\">Rating</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Rating1\"\r\n//             value={form.Rating}\r\n//             onChange={(e) => updateForm({ Rating: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Fee\">Fee</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Fee1\"\r\n//             value={form.Fee}\r\n//             onChange={(e) => updateForm({ Fee: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Sale\">Sale</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Sale1\"\r\n//             value={form.Sale}\r\n//             onChange={(e) => updateForm({ Sale: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <div className=\"form-check form-check-inline\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"regionOptions\"\r\n//               id=\"regionEast1\"\r\n//               value=\"East\"\r\n//               checked={form.Region === \"East\"}\r\n//               onChange={(e) => updateForm({ Region: e.target.value })}\r\n//             />\r\n//             <label htmlFor=\"regionEast\" className=\"form-check-label\">East</label>\r\n//           </div>\r\n//           <div className=\"form-check form-check-inline\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"regionOptions\"\r\n//               id=\"regionWest11\"\r\n//               value=\"West\"\r\n//               checked={form.Region === \"West\"}\r\n//               onChange={(e) => updateForm({ Region: e.target.value })}\r\n//             />\r\n//             <label htmlFor=\"regionWest\" className=\"form-check-label\">West</label>\r\n//           </div>\r\n//           <div className=\"form-check form-check-inline\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"regionOptions\"\r\n//               id=\"regionNorth1\"\r\n//               value=\"North\"\r\n//               checked={form.Region === \"North\"}\r\n//               onChange={(e) => updateForm({ Region: e.target.value })}\r\n//             />\r\n//             <label htmlFor=\"regionNorth\" className=\"form-check-label\">North</label>\r\n//           </div>\r\n//           <div className=\"form-check form-check-inline\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"regionOptions\"\r\n//               id=\"regionSouth1\"\r\n//               value=\"South\"\r\n//               checked={form.Region === \"South\"}\r\n//               onChange={(e) => updateForm({ Region: e.target.value })}\r\n//             />\r\n//             <label htmlFor=\"regionSouth\" className=\"form-check-label\">South</label>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <input\r\n//             type=\"submit\"\r\n//             value=\"Update Agent\"\r\n//             className=\"btn btn-primary\"\r\n//           />\r\n//         </div>\r\n//       </form>\r\n//       <Button variant=\"primary\" type=\"submit\" onClick={onSubmit}>\r\n//         Update\r\n//       </Button>\r\n\r\n//       <Modal show={showModal} onHide={closeModal}>\r\n//     <Modal.Header closeButton>\r\n//       <Modal.Title>Confirm Update</Modal.Title>\r\n//     </Modal.Header>\r\n//     <Modal.Body>Are you sure you want to update this record?</Modal.Body>\r\n//     <Modal.Footer>\r\n//       <Button variant=\"secondary\" onClick={closeModal}>\r\n//         Cancel\r\n//       </Button>\r\n//       <Button variant=\"primary\" onClick={confirmUpdate}>\r\n//         Update\r\n//       </Button>\r\n//     </Modal.Footer>\r\n//   </Modal>\r\n// </div>\r\n  \r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\n// move the Modal component declaration here\r\nfunction ConfirmationModal(props) {\r\n  return (\r\n    <Modal show={props.showModal} onHide={props.closeModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Confirmation</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Are you sure you want to update this record?</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={props.closeModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={props.confirmUpdate}>\r\n          Save Changes\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default function Edit() {\r\n  const [form, setForm] = useState({\r\n    First_Name: \"\",\r\n    Last_Name: \"\",\r\n    Email: \"\",\r\n    Region: \"\",\r\n    Rating: \"\",\r\n    Fee: \"\",\r\n    Sale: \"\",\r\n    records: [],\r\n  });\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const id = params.id.toString();\r\n      const response = await fetch(`http://localhost:5000/record/${id}`);\r\n\r\n      if (!response.ok) {\r\n        const message = `An error has occurred: ${response.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n      }\r\n\r\n      const record = await response.json();\r\n      if (!record) {\r\n        window.alert(`Record with id ${id} not found`);\r\n        navigate(\"/\");\r\n        return;\r\n      }\r\n\r\n      setForm(record);\r\n    }\r\n\r\n    fetchData();\r\n  }, [params.id, navigate]);\r\n\r\n  function updateForm(value) {\r\n    setForm((prev) => {\r\n      return { ...prev, ...value };\r\n    });\r\n  }\r\n\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n    const editedPerson = {\r\n      First_Name: form.First_Name,\r\n      Last_Name: form.Last_Name,\r\n      Email: form.Email,\r\n      Region: form.Region,\r\n      Rating: form.Rating,\r\n      Fee: form.Fee,\r\n      Sale: form.Sale,\r\n    };\r\n\r\n    setShowModal(true); // show confirmation modal\r\n  }\r\n\r\n  async function confirmUpdate() {\r\n    const editedPerson = {\r\n      First_Name: form.First_Name,\r\n      Last_Name: form.Last_Name,\r\n      Email: form.Email,\r\n      Region: form.Region,\r\n      Rating: form.Rating,\r\n      Fee: form.Fee,\r\n      Sale: form.Sale,\r\n    };\r\n\r\n    await fetch(`http://localhost:5000/update/${params.id}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(editedPerson),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    navigate(\"/recordList\");\r\n  }\r\n\r\n  function closeModal() {\r\n    setShowModal(false);\r\n  }\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Update Record</h3>\r\n      <form onSubmit={onSubmit}>\r\n         <div className=\"form-group\">\r\n           <label htmlFor=\"First_Name\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"First_Name\"\r\n            value={form.First_Name}\r\n            onChange={(e) => updateForm({ First_Name: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Last_Name\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"Last_Name1\"\r\n            value={form.Last_Name}\r\n            onChange={(e) => updateForm({ Last_Name: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Email\">Email</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"Email1\"\r\n            value={form.Email}\r\n            onChange={(e) => updateForm({ Email: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Rating\">Rating</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"Rating1\"\r\n            value={form.Rating}\r\n            onChange={(e) => updateForm({ Rating: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Fee\">Fee</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"Fee1\"\r\n            value={form.Fee}\r\n            onChange={(e) => updateForm({ Fee: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"Sale\">Sale</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"Sale1\"\r\n            value={form.Sale}\r\n            onChange={(e) => updateForm({ Sale: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <div className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"regionOptions\"\r\n              id=\"regionEast1\"\r\n              value=\"East\"\r\n              checked={form.Region === \"East\"}\r\n              onChange={(e) => updateForm({ Region: e.target.value })}\r\n            />\r\n            <label htmlFor=\"regionEast\" className=\"form-check-label\">East</label>\r\n          </div>\r\n          <div className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"regionOptions\"\r\n              id=\"regionWest11\"\r\n              value=\"West\"\r\n              checked={form.Region === \"West\"}\r\n              onChange={(e) => updateForm({ Region: e.target.value })}\r\n            />\r\n            <label htmlFor=\"regionWest\" className=\"form-check-label\">West</label>\r\n          </div>\r\n          <div className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"regionOptions\"\r\n              id=\"regionNorth1\"\r\n              value=\"North\"\r\n              checked={form.Region === \"North\"}\r\n              onChange={(e) => updateForm({ Region: e.target.value })}\r\n            />\r\n            <label htmlFor=\"regionNorth\" className=\"form-check-label\">North</label>\r\n          </div>\r\n          <div className=\"form-check form-check-inline\">\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"radio\"\r\n              name=\"regionOptions\"\r\n              id=\"regionSouth1\"\r\n              value=\"South\"\r\n              checked={form.Region === \"South\"}\r\n              onChange={(e) => updateForm({ Region: e.target.value })}\r\n            />\r\n            <label htmlFor=\"regionSouth\" className=\"form-check-label\">South</label>\r\n          </div>\r\n        </div>\r\n        \r\n          <Button type=\"submit\" variant=\"primary\">\r\n             Save Changes\r\n          </Button>\r\n        </form>\r\n\r\n  {/* render the modal component */}\r\n        <ConfirmationModal\r\n    showModal={showModal}\r\n    closeModal={closeModal}\r\n    confirmUpdate={confirmUpdate}\r\n        />\r\n</div>\r\n\r\n);\r\n}"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAMA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,cAAc;AACrD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,uBAAuB;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EAChC,oBACEF,OAAA,CAACF,KAAK;IAACK,IAAI,EAAED,KAAK,CAACE,SAAU;IAACC,MAAM,EAAEH,KAAK,CAACI,UAAW;IAAAC,QAAA,gBACrDP,OAAA,CAACF,KAAK,CAACU,MAAM;MAACC,WAAW;MAAAF,QAAA,eACvBP,OAAA,CAACF,KAAK,CAACY,KAAK;QAAAH,QAAA,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAc;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC1B,eACfd,OAAA,CAACF,KAAK,CAACiB,IAAI;MAAAR,QAAA,EAAC;IAA4C;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAa,eACrEd,OAAA,CAACF,KAAK,CAACkB,MAAM;MAAAT,QAAA,gBACXP,OAAA,CAACH,MAAM;QAACoB,OAAO,EAAC,WAAW;QAACC,OAAO,EAAEhB,KAAK,CAACI,UAAW;QAAAC,QAAA,EAAC;MAEvD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACTd,OAAA,CAACH,MAAM;QAACoB,OAAO,EAAC,SAAS;QAACC,OAAO,EAAEhB,KAAK,CAACiB,aAAc;QAAAZ,QAAA,EAAC;MAExD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACT;AAEZ;AAACM,EAAA,GAjBQnB,iBAAiB;AAmB1B,eAAe,SAASoB,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG/B,QAAQ,CAAC;IAC/BgC,UAAU,EAAE,EAAE;IACdC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,GAAG,EAAE,EAAE;IACPC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAMC,MAAM,GAAGtC,SAAS,EAAE;EAC1B,MAAMuC,QAAQ,GAAGtC,WAAW,EAAE;EAE9BF,SAAS,CAAC,MAAM;IACd,eAAeyC,SAASA,CAAA,EAAG;MACzB,MAAMC,EAAE,GAAGH,MAAM,CAACG,EAAE,CAACC,QAAQ,EAAE;MAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BH,EAAG,EAAC,CAAC;MAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAMC,OAAO,GAAI,0BAAyBH,QAAQ,CAACI,UAAW,EAAC;QAC/DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;QACrB;MACF;MAEA,MAAMI,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;MACpC,IAAI,CAACD,MAAM,EAAE;QACXF,MAAM,CAACC,KAAK,CAAE,kBAAiBR,EAAG,YAAW,CAAC;QAC9CF,QAAQ,CAAC,GAAG,CAAC;QACb;MACF;MAEAV,OAAO,CAACqB,MAAM,CAAC;IACjB;IAEAV,SAAS,EAAE;EACb,CAAC,EAAE,CAACF,MAAM,CAACG,EAAE,EAAEF,QAAQ,CAAC,CAAC;EAEzB,SAASa,UAAUA,CAACC,KAAK,EAAE;IACzBxB,OAAO,CAAEyB,IAAI,IAAK;MAChB,OAAO;QAAE,GAAGA,IAAI;QAAE,GAAGD;MAAM,CAAC;IAC9B,CAAC,CAAC;EACJ;EAEA,eAAeE,QAAQA,CAACC,CAAC,EAAE;IACzBA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,YAAY,GAAG;MACnB5B,UAAU,EAAEF,IAAI,CAACE,UAAU;MAC3BC,SAAS,EAAEH,IAAI,CAACG,SAAS;MACzBC,KAAK,EAAEJ,IAAI,CAACI,KAAK;MACjBC,MAAM,EAAEL,IAAI,CAACK,MAAM;MACnBC,MAAM,EAAEN,IAAI,CAACM,MAAM;MACnBC,GAAG,EAAEP,IAAI,CAACO,GAAG;MACbC,IAAI,EAAER,IAAI,CAACQ;IACb,CAAC;IAEDuB,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;EACtB;;EAEA,eAAenC,aAAaA,CAAA,EAAG;IAC7B,MAAMkC,YAAY,GAAG;MACnB5B,UAAU,EAAEF,IAAI,CAACE,UAAU;MAC3BC,SAAS,EAAEH,IAAI,CAACG,SAAS;MACzBC,KAAK,EAAEJ,IAAI,CAACI,KAAK;MACjBC,MAAM,EAAEL,IAAI,CAACK,MAAM;MACnBC,MAAM,EAAEN,IAAI,CAACM,MAAM;MACnBC,GAAG,EAAEP,IAAI,CAACO,GAAG;MACbC,IAAI,EAAER,IAAI,CAACQ;IACb,CAAC;IAED,MAAMQ,KAAK,CAAE,gCAA+BN,MAAM,CAACG,EAAG,EAAC,EAAE;MACvDmB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,YAAY,CAAC;MAClCM,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEFzB,QAAQ,CAAC,aAAa,CAAC;EACzB;EAEA,SAAS5B,UAAUA,CAAA,EAAG;IACpBgD,YAAY,CAAC,KAAK,CAAC;EACrB;EAEA,MAAM,CAAClD,SAAS,EAAEkD,YAAY,CAAC,GAAG7D,QAAQ,CAAC,KAAK,CAAC;EAEjD,oBACEO,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtBd,OAAA;MAAMkD,QAAQ,EAAEA,QAAS;MAAA3C,QAAA,gBACtBP,OAAA;QAAK4D,SAAS,EAAC,YAAY;QAAArD,QAAA,gBACzBP,OAAA;UAAO6D,OAAO,EAAC,YAAY;UAAAtD,QAAA,EAAC;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAC/Cd,OAAA;UACE8D,IAAI,EAAC,MAAM;UACXF,SAAS,EAAC,cAAc;UACxBxB,EAAE,EAAC,YAAY;UACfY,KAAK,EAAEzB,IAAI,CAACE,UAAW;UACvBsC,QAAQ,EAAGZ,CAAC,IAAKJ,UAAU,CAAC;YAAEtB,UAAU,EAAE0B,CAAC,CAACa,MAAM,CAAChB;UAAM,CAAC;QAAE;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC5D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,eACNd,OAAA;QAAK4D,SAAS,EAAC,YAAY;QAAArD,QAAA,gBACzBP,OAAA;UAAO6D,OAAO,EAAC,WAAW;UAAAtD,QAAA,EAAC;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAC5Cd,OAAA;UACE8D,IAAI,EAAC,MAAM;UACXF,SAAS,EAAC,cAAc;UACxBxB,EAAE,EAAC,YAAY;UACfY,KAAK,EAAEzB,IAAI,CAACG,SAAU;UACtBqC,QAAQ,EAAGZ,CAAC,IAAKJ,UAAU,CAAC;YAAErB,SAAS,EAAEyB,CAAC,CAACa,MAAM,CAAChB;UAAM,CAAC;QAAE;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC3D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,eACNd,OAAA;QAAK4D,SAAS,EAAC,YAAY;QAAArD,QAAA,gBACzBP,OAAA;UAAO6D,OAAO,EAAC,OAAO;UAAAtD,QAAA,EAAC;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACpCd,OAAA;UACE8D,IAAI,EAAC,MAAM;UACXF,SAAS,EAAC,cAAc;UACxBxB,EAAE,EAAC,QAAQ;UACXY,KAAK,EAAEzB,IAAI,CAACI,KAAM;UAClBoC,QAAQ,EAAGZ,CAAC,IAAKJ,UAAU,CAAC;YAAEpB,KAAK,EAAEwB,CAAC,CAACa,MAAM,CAAChB;UAAM,CAAC;QAAE;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACvD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,eACNd,OAAA;QAAK4D,SAAS,EAAC,YAAY;QAAArD,QAAA,gBACzBP,OAAA;UAAO6D,OAAO,EAAC,QAAQ;UAAAtD,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACtCd,OAAA;UACE8D,IAAI,EAAC,MAAM;UACXF,SAAS,EAAC,cAAc;UACxBxB,EAAE,EAAC,SAAS;UACZY,KAAK,EAAEzB,IAAI,CAACM,MAAO;UACnBkC,QAAQ,EAAGZ,CAAC,IAAKJ,UAAU,CAAC;YAAElB,MAAM,EAAEsB,CAAC,CAACa,MAAM,CAAChB;UAAM,CAAC;QAAE;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACxD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,eACNd,OAAA;QAAK4D,SAAS,EAAC,YAAY;QAAArD,QAAA,gBACzBP,OAAA;UAAO6D,OAAO,EAAC,KAAK;UAAAtD,QAAA,EAAC;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAChCd,OAAA;UACE8D,IAAI,EAAC,MAAM;UACXF,SAAS,EAAC,cAAc;UACxBxB,EAAE,EAAC,MAAM;UACTY,KAAK,EAAEzB,IAAI,CAACO,GAAI;UAChBiC,QAAQ,EAAGZ,CAAC,IAAKJ,UAAU,CAAC;YAAEjB,GAAG,EAAEqB,CAAC,CAACa,MAAM,CAAChB;UAAM,CAAC;QAAE;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACrD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,eACNd,OAAA;QAAK4D,SAAS,EAAC,YAAY;QAAArD,QAAA,gBACzBP,OAAA;UAAO6D,OAAO,EAAC,MAAM;UAAAtD,QAAA,EAAC;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAClCd,OAAA;UACE8D,IAAI,EAAC,MAAM;UACXF,SAAS,EAAC,cAAc;UACxBxB,EAAE,EAAC,OAAO;UACVY,KAAK,EAAEzB,IAAI,CAACQ,IAAK;UACjBgC,QAAQ,EAAGZ,CAAC,IAAKJ,UAAU,CAAC;YAAEhB,IAAI,EAAEoB,CAAC,CAACa,MAAM,CAAChB;UAAM,CAAC;QAAE;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACtD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,eACNd,OAAA;QAAK4D,SAAS,EAAC,YAAY;QAAArD,QAAA,gBACzBP,OAAA;UAAK4D,SAAS,EAAC,8BAA8B;UAAArD,QAAA,gBAC3CP,OAAA;YACE4D,SAAS,EAAC,kBAAkB;YAC5BE,IAAI,EAAC,OAAO;YACZG,IAAI,EAAC,eAAe;YACpB7B,EAAE,EAAC,aAAa;YAChBY,KAAK,EAAC,MAAM;YACZkB,OAAO,EAAE3C,IAAI,CAACK,MAAM,KAAK,MAAO;YAChCmC,QAAQ,EAAGZ,CAAC,IAAKJ,UAAU,CAAC;cAAEnB,MAAM,EAAEuB,CAAC,CAACa,MAAM,CAAChB;YAAM,CAAC;UAAE;YAAArC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACxD,eACFd,OAAA;YAAO6D,OAAO,EAAC,YAAY;YAACD,SAAS,EAAC,kBAAkB;YAAArD,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACjE,eACNd,OAAA;UAAK4D,SAAS,EAAC,8BAA8B;UAAArD,QAAA,gBAC3CP,OAAA;YACE4D,SAAS,EAAC,kBAAkB;YAC5BE,IAAI,EAAC,OAAO;YACZG,IAAI,EAAC,eAAe;YACpB7B,EAAE,EAAC,cAAc;YACjBY,KAAK,EAAC,MAAM;YACZkB,OAAO,EAAE3C,IAAI,CAACK,MAAM,KAAK,MAAO;YAChCmC,QAAQ,EAAGZ,CAAC,IAAKJ,UAAU,CAAC;cAAEnB,MAAM,EAAEuB,CAAC,CAACa,MAAM,CAAChB;YAAM,CAAC;UAAE;YAAArC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACxD,eACFd,OAAA;YAAO6D,OAAO,EAAC,YAAY;YAACD,SAAS,EAAC,kBAAkB;YAAArD,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACjE,eACNd,OAAA;UAAK4D,SAAS,EAAC,8BAA8B;UAAArD,QAAA,gBAC3CP,OAAA;YACE4D,SAAS,EAAC,kBAAkB;YAC5BE,IAAI,EAAC,OAAO;YACZG,IAAI,EAAC,eAAe;YACpB7B,EAAE,EAAC,cAAc;YACjBY,KAAK,EAAC,OAAO;YACbkB,OAAO,EAAE3C,IAAI,CAACK,MAAM,KAAK,OAAQ;YACjCmC,QAAQ,EAAGZ,CAAC,IAAKJ,UAAU,CAAC;cAAEnB,MAAM,EAAEuB,CAAC,CAACa,MAAM,CAAChB;YAAM,CAAC;UAAE;YAAArC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACxD,eACFd,OAAA;YAAO6D,OAAO,EAAC,aAAa;YAACD,SAAS,EAAC,kBAAkB;YAAArD,QAAA,EAAC;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACnE,eACNd,OAAA;UAAK4D,SAAS,EAAC,8BAA8B;UAAArD,QAAA,gBAC3CP,OAAA;YACE4D,SAAS,EAAC,kBAAkB;YAC5BE,IAAI,EAAC,OAAO;YACZG,IAAI,EAAC,eAAe;YACpB7B,EAAE,EAAC,cAAc;YACjBY,KAAK,EAAC,OAAO;YACbkB,OAAO,EAAE3C,IAAI,CAACK,MAAM,KAAK,OAAQ;YACjCmC,QAAQ,EAAGZ,CAAC,IAAKJ,UAAU,CAAC;cAAEnB,MAAM,EAAEuB,CAAC,CAACa,MAAM,CAAChB;YAAM,CAAC;UAAE;YAAArC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACxD,eACFd,OAAA;YAAO6D,OAAO,EAAC,aAAa;YAACD,SAAS,EAAC,kBAAkB;YAAArD,QAAA,EAAC;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACnE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF,eAEJd,OAAA,CAACH,MAAM;QAACiE,IAAI,EAAC,QAAQ;QAAC7C,OAAO,EAAC,SAAS;QAAAV,QAAA,EAAC;MAExC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ,eAGPd,OAAA,CAACC,iBAAiB;MACtBG,SAAS,EAAEA,SAAU;MACrBE,UAAU,EAAEA,UAAW;MACvBa,aAAa,EAAEA;IAAc;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAGN;AAACQ,EAAA,CAxNuBD,IAAI;EAAA,QAWX1B,SAAS,EACPC,WAAW;AAAA;AAAAuE,GAAA,GAZN9C,IAAI;AAAA,IAAAD,EAAA,EAAA+C,GAAA;AAAAC,YAAA,CAAAhD,EAAA;AAAAgD,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}