{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { useParams, useNavigate } from \"react-router\";\n// import Button from 'react-bootstrap/Button';\n// import Modal from 'react-bootstrap/Modal';\n\n// export default function Edit() {\n//   const [form, setForm] = useState({\n//     First_Name: \"\",\n//     Last_Name: \"\",\n//     Email: \"\",\n//     Region: \"\",\n//     Rating: \"\",\n//     Fee: \"\",\n//     Sale: \"\",\n//     records: [],\n//   });\n//   const params = useParams();\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     async function fetchData() {\n//       const id = params.id.toString();\n//       const response = await fetch(`http://localhost:5000/record/${id}`);\n\n//       if (!response.ok) {\n//         const message = `An error has occurred: ${response.statusText}`;\n//         window.alert(message);\n//         return;\n//       }\n\n//       const record = await response.json();\n//       if (!record) {\n//         window.alert(`Record with id ${id} not found`);\n//         navigate(\"/\");\n//         return;\n//       }\n\n//       setForm(record);\n//     }\n\n//     fetchData();\n//   }, [params.id, navigate]);\n\n//   function updateForm(value) {\n//     setForm((prev) => {\n//       return { ...prev, ...value };\n//     });\n//   }\n\n//   async function onSubmit(e) {\n//     e.preventDefault();\n//     const editedPerson = {\n//       First_Name: form.First_Name,\n//       Last_Name: form.Last_Name,\n//       Email: form.Email,\n//       Region: form.Region,\n//       Rating: form.Rating,\n//       Fee: form.Fee,\n//       Sale: form.Sale,\n//     };\n\n//     await fetch(`http://localhost:5000/update/${params.id}`, {\n//       method: \"POST\",\n//       body: JSON.stringify(editedPerson),\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//     });\n\n//     navigate(\"/recordList\");\n//   }\n\n//   function Example() {\n//     const [show, setShow] = useState(false);\n\n//     const handleClose = () => setShow(false);\n//     const handleShow = () => setShow(true);\n\n//     return (\n//       <>\n\n//         <Modal show={show} onHide={handleClose}>\n//           <Modal.Header closeButton>\n//             <Modal.Title>Modal heading</Modal.Title>\n//           </Modal.Header>\n//           <Modal.Body>Are you sure you want to update the Agent!</Modal.Body>\n//           <Modal.Footer>\n//             <Button variant=\"secondary\" onClick={handleClose}>\n//               Close\n//             </Button>\n//             <Button variant=\"primary\" onClick={handleClose}>\n//               Save Changes\n//             </Button>\n//           </Modal.Footer>\n//         </Modal>\n//       </>\n//     );\n//   }\n\n//   // This following section will display the form that takes input from the user to update the data.\n//   return (\n//     <div>\n//       <h3>Update Record</h3>\n//       <form onSubmit={onSubmit}>\n//       <div className=\"form-group\">\n//           <label htmlFor=\"First_Name\">First Name</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"First_Name\"\n//             value={form.First_Name}\n//             onChange={(e) => updateForm({ First_Name: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Last_Name\">Last Name</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Last_Name1\"\n//             value={form.Last_Name}\n//             onChange={(e) => updateForm({ Last_Name: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Email\">Email</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Email1\"\n//             value={form.Email}\n//             onChange={(e) => updateForm({ Email: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Rating\">Rating</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Rating1\"\n//             value={form.Rating}\n//             onChange={(e) => updateForm({ Rating: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Fee\">Fee</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Fee1\"\n//             value={form.Fee}\n//             onChange={(e) => updateForm({ Fee: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"Sale\">Sale</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"Sale1\"\n//             value={form.Sale}\n//             onChange={(e) => updateForm({ Sale: e.target.value })}\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <div className=\"form-check form-check-inline\">\n//             <input\n//               className=\"form-check-input\"\n//               type=\"radio\"\n//               name=\"regionOptions\"\n//               id=\"regionEast1\"\n//               value=\"East\"\n//               checked={form.Region === \"East\"}\n//               onChange={(e) => updateForm({ Region: e.target.value })}\n//             />\n//             <label htmlFor=\"regionEast\" className=\"form-check-label\">East</label>\n//           </div>\n//           <div className=\"form-check form-check-inline\">\n//             <input\n//               className=\"form-check-input\"\n//               type=\"radio\"\n//               name=\"regionOptions\"\n//               id=\"regionWest11\"\n//               value=\"West\"\n//               checked={form.Region === \"West\"}\n//               onChange={(e) => updateForm({ Region: e.target.value })}\n//             />\n//             <label htmlFor=\"regionWest\" className=\"form-check-label\">West</label>\n//           </div>\n//           <div className=\"form-check form-check-inline\">\n//             <input\n//               className=\"form-check-input\"\n//               type=\"radio\"\n//               name=\"regionOptions\"\n//               id=\"regionNorth1\"\n//               value=\"North\"\n//               checked={form.Region === \"North\"}\n//               onChange={(e) => updateForm({ Region: e.target.value })}\n//             />\n//             <label htmlFor=\"regionNorth\" className=\"form-check-label\">North</label>\n//           </div>\n//           <div className=\"form-check form-check-inline\">\n//             <input\n//               className=\"form-check-input\"\n//               type=\"radio\"\n//               name=\"regionOptions\"\n//               id=\"regionSouth1\"\n//               value=\"South\"\n//               checked={form.Region === \"South\"}\n//               onChange={(e) => updateForm({ Region: e.target.value })}\n//             />\n//             <label htmlFor=\"regionSouth\" className=\"form-check-label\">South</label>\n//           </div>\n//         </div>\n//         <div className=\"form-group\">\n//           <input\n//             type=\"submit\"\n//             value=\"Update Agent\"\n//             className=\"btn btn-primary\"\n//           />\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/manoj/CodeBoxxManojKumarMuthu/mern-stack-example/mern/client/src/components/edit.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useParams, useNavigate } from \"react-router\";\r\n// import Button from 'react-bootstrap/Button';\r\n// import Modal from 'react-bootstrap/Modal';\r\n\r\n// export default function Edit() {\r\n//   const [form, setForm] = useState({\r\n//     First_Name: \"\",\r\n//     Last_Name: \"\",\r\n//     Email: \"\",\r\n//     Region: \"\",\r\n//     Rating: \"\",\r\n//     Fee: \"\",\r\n//     Sale: \"\",\r\n//     records: [],\r\n//   });\r\n//   const params = useParams();\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     async function fetchData() {\r\n//       const id = params.id.toString();\r\n//       const response = await fetch(`http://localhost:5000/record/${id}`);\r\n\r\n//       if (!response.ok) {\r\n//         const message = `An error has occurred: ${response.statusText}`;\r\n//         window.alert(message);\r\n//         return;\r\n//       }\r\n\r\n//       const record = await response.json();\r\n//       if (!record) {\r\n//         window.alert(`Record with id ${id} not found`);\r\n//         navigate(\"/\");\r\n//         return;\r\n//       }\r\n\r\n//       setForm(record);\r\n//     }\r\n\r\n//     fetchData();\r\n//   }, [params.id, navigate]);\r\n\r\n//   function updateForm(value) {\r\n//     setForm((prev) => {\r\n//       return { ...prev, ...value };\r\n//     });\r\n//   }\r\n\r\n//   async function onSubmit(e) {\r\n//     e.preventDefault();\r\n//     const editedPerson = {\r\n//       First_Name: form.First_Name,\r\n//       Last_Name: form.Last_Name,\r\n//       Email: form.Email,\r\n//       Region: form.Region,\r\n//       Rating: form.Rating,\r\n//       Fee: form.Fee,\r\n//       Sale: form.Sale,\r\n//     };\r\n\r\n//     await fetch(`http://localhost:5000/update/${params.id}`, {\r\n//       method: \"POST\",\r\n//       body: JSON.stringify(editedPerson),\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//     });\r\n\r\n//     navigate(\"/recordList\");\r\n//   }\r\n\r\n//   function Example() {\r\n//     const [show, setShow] = useState(false);\r\n\r\n//     const handleClose = () => setShow(false);\r\n//     const handleShow = () => setShow(true);\r\n\r\n//     return (\r\n//       <>\r\n\r\n\r\n//         <Modal show={show} onHide={handleClose}>\r\n//           <Modal.Header closeButton>\r\n//             <Modal.Title>Modal heading</Modal.Title>\r\n//           </Modal.Header>\r\n//           <Modal.Body>Are you sure you want to update the Agent!</Modal.Body>\r\n//           <Modal.Footer>\r\n//             <Button variant=\"secondary\" onClick={handleClose}>\r\n//               Close\r\n//             </Button>\r\n//             <Button variant=\"primary\" onClick={handleClose}>\r\n//               Save Changes\r\n//             </Button>\r\n//           </Modal.Footer>\r\n//         </Modal>\r\n//       </>\r\n//     );\r\n//   }\r\n\r\n\r\n//   // This following section will display the form that takes input from the user to update the data.\r\n//   return (\r\n//     <div>\r\n//       <h3>Update Record</h3>\r\n//       <form onSubmit={onSubmit}>\r\n//       <div className=\"form-group\">\r\n//           <label htmlFor=\"First_Name\">First Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"First_Name\"\r\n//             value={form.First_Name}\r\n//             onChange={(e) => updateForm({ First_Name: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Last_Name\">Last Name</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Last_Name1\"\r\n//             value={form.Last_Name}\r\n//             onChange={(e) => updateForm({ Last_Name: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Email\">Email</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Email1\"\r\n//             value={form.Email}\r\n//             onChange={(e) => updateForm({ Email: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Rating\">Rating</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Rating1\"\r\n//             value={form.Rating}\r\n//             onChange={(e) => updateForm({ Rating: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Fee\">Fee</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Fee1\"\r\n//             value={form.Fee}\r\n//             onChange={(e) => updateForm({ Fee: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"Sale\">Sale</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"Sale1\"\r\n//             value={form.Sale}\r\n//             onChange={(e) => updateForm({ Sale: e.target.value })}\r\n//           />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <div className=\"form-check form-check-inline\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"regionOptions\"\r\n//               id=\"regionEast1\"\r\n//               value=\"East\"\r\n//               checked={form.Region === \"East\"}\r\n//               onChange={(e) => updateForm({ Region: e.target.value })}\r\n//             />\r\n//             <label htmlFor=\"regionEast\" className=\"form-check-label\">East</label>\r\n//           </div>\r\n//           <div className=\"form-check form-check-inline\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"regionOptions\"\r\n//               id=\"regionWest11\"\r\n//               value=\"West\"\r\n//               checked={form.Region === \"West\"}\r\n//               onChange={(e) => updateForm({ Region: e.target.value })}\r\n//             />\r\n//             <label htmlFor=\"regionWest\" className=\"form-check-label\">West</label>\r\n//           </div>\r\n//           <div className=\"form-check form-check-inline\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"regionOptions\"\r\n//               id=\"regionNorth1\"\r\n//               value=\"North\"\r\n//               checked={form.Region === \"North\"}\r\n//               onChange={(e) => updateForm({ Region: e.target.value })}\r\n//             />\r\n//             <label htmlFor=\"regionNorth\" className=\"form-check-label\">North</label>\r\n//           </div>\r\n//           <div className=\"form-check form-check-inline\">\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               type=\"radio\"\r\n//               name=\"regionOptions\"\r\n//               id=\"regionSouth1\"\r\n//               value=\"South\"\r\n//               checked={form.Region === \"South\"}\r\n//               onChange={(e) => updateForm({ Region: e.target.value })}\r\n//             />\r\n//             <label htmlFor=\"regionSouth\" className=\"form-check-label\">South</label>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <input\r\n//             type=\"submit\"\r\n//             value=\"Update Agent\"\r\n//             className=\"btn btn-primary\"\r\n//           />\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}