{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manoj\\\\CodeBoxxManojKumarMuthu\\\\mern-stack-example\\\\mern\\\\client\\\\src\\\\components\\\\createTransaction.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router\";\n\n// export default function Create() {\n//   const [form, setForm] = useState({\n//     agent_name: \"\",\n//     transaction_number: \"\",\n//     sale: \"\",\n//     date: \"\"\n//   });\n//   const navigate = useNavigate();\n\n//   // These methods will update the state properties.\n//   function updateForm(value) {\n//     return setForm((prev) => {\n//       return { ...prev, ...value };\n//     });\n//   }\n\n//   // This function will handle the submission.\n//   async function onSubmit(e) {\n//     e.preventDefault();\n\n//     // When a post request is sent to the create url, we'll add a new record to the database.\n//     const newPerson = { ...form };\n\n//     await fetch(\"http://localhost:5000/transaction/add\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(newPerson),\n//     })\n//     .catch(error => {\n//       window.alert(error);\n//       return;\n//     });\n\n//     setForm({ \n//     agent_name: \"\",\n//     transaction_number: \"\",\n//     sale: \"\",\n//     date: \"\" });\n//     navigate(\"/transaction\");\n//   }\n\n//   // This following section will display the form that takes the input from the user.\n//   return (\n//     <div>\n//       <h3>Create New Transaction</h3>\n//       <form onSubmit={onSubmit}>\n//         <div className=\"form-group\">\n//          <label htmlFor=\"agent_name\">Agent Name</label>\n//           <select\n//             className=\"form-control\"\n//             id=\"agent_name\"\n//             value={form.agent_name}\n//             onChange={(e) => updateForm({ agent_name: e.target.value })}\n//           >\n//             <option value=\"\">Select Agent</option>\n//             <option value=\"Goku\">Goku</option>\n//             <option value=\"Lelouch\">Lelouch</option>\n//             <option value=\"Naruto\">Naruto</option>\n//             <option value=\"Bleach\">Bleach</option>\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"transaction_number\">Transaction Number</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"transaction_number\"\n//             value={form.transaction_number}\n//             onChange={(e) => updateForm({ transaction_number: e.target.value })}\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"sale\">Sale</label>\n//           <input\n//             type=\"number\"\n//             className=\"form-control\"\n//             id=\"sale\"\n//             value={form.sale}\n//             min=\"0\"\n//             onChange={(e) => updateForm({ sale: Math.max(0, e.target.value) })}\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <input\n//             type=\"submit\"\n//             value=\"Create Transaction\"\n//             className=\"btn btn-primary\"\n//           />\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  const [form, setForm] = useState({\n    agent_name: \"\",\n    transaction_number: \"\",\n    sale: \"\",\n    date: \"\"\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // Show confirmation modal before creating the transaction\n    const confirmation = window.confirm(\"Are you sure you want to continue?\");\n    if (!confirmation) {\n      return;\n    }\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = {\n      ...form\n    };\n    await fetch(\"http://localhost:5000/transaction/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      agent_name: \"\",\n      transaction_number: \"\",\n      sale: \"\",\n      date: \"\"\n    });\n    navigate(\"/transaction\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"agent_name\",\n          children: \"Agent Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          id: \"agent_name\",\n          value: form.agent_name,\n          onChange: e => updateForm({\n            agent_name: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Agent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Goku\",\n            children: \"Goku\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Lelouch\",\n            children: \"Lelouch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Naruto\",\n            children: \"Naruto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Bleach\",\n            children: \"Bleach\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"transaction_number\",\n          children: \"Transaction Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"transaction_number\",\n          value: form.transaction_number,\n          onChange: e => updateForm({\n            transaction_number: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sale\",\n          children: \"Sale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"sale\",\n          value: form.sale,\n          min: \"0\",\n          onChange: e => updateForm({\n            sale: Math.max(0, e.target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create Transaction\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: \"confirmationModal\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"confirmationModalLabel\",\n      \"aria-hidden\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        role: \"document\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              id: \"confirmationModalLabel\",\n              children: \"Are you sure you want to\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              \"data-dismiss\": \"modal\",\n              \"aria-label\": \"Close\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-hidden\": \"true\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 1\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: \"This action will create a new transaction. Are you sure you want to continue?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              \"data-dismiss\": \"modal\",\n              children: \"No/Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Yes/Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n}\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router\";\n\n// export default function Create() {\n//   const [form, setForm] = useState({\n//     agent_name: \"\",\n//     transaction_number: \"\",\n//     sale: \"\",\n//     date: \"\"\n//   });\n//   const navigate = useNavigate();\n\n//   // Update the form state with the provided values\n//   function updateForm(values) {\n//     setForm(prev => ({ ...prev, ...values }));\n//   }\n\n//   // Handle form submission\n//   async function onSubmit(event) {\n//     event.preventDefault();\n\n//     // Show confirmation dialog before creating the transaction\n//     const confirmation = window.confirm(\n//       \"Are you sure you want to create a new transaction?\"\n//     );\n//     if (!confirmation) {\n//       return;\n//     }\n\n//     try {\n//       // Send a POST request to the backend to create a new transaction\n//       await fetch(\"http://localhost:5000/transaction/add\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify(form),\n//       });\n\n//       // Reset the form state and navigate to the transaction page\n//       setForm({\n//         agent_name: \"\",\n//         transaction_number: \"\",\n//         sale: \"\",\n//         date: \"\"\n//       });\n//       navigate(\"/transaction\");\n//     } catch (error) {\n//       // Show an error alert if the request fails\n//       window.alert(error);\n//     }\n//   }\n\n//   // Render the form component\n//   return (\n//     <div>\n//       <h3>Create New Transaction</h3>\n//       <form onSubmit={onSubmit}>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"agent_name\">Agent Name</label>\n//           <select\n//             className=\"form-control\"\n//             id=\"agent_name\"\n//             value={form.agent_name}\n//             onChange={event => updateForm({ agent_name: event.target.value })}\n//           >\n//             <option value=\"\">Select Agent</option>\n//             <option value=\"Goku\">Goku</option>\n//             <option value=\"Lelouch\">Lelouch</option>\n//             <option value=\"Naruto\">Naruto</option>\n//             <option value=\"Bleach\">Bleach</option>\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <label htmlFor=\"transaction_number\">Transaction Number</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             id=\"transaction_number\"\n//             value={form.transaction_number}\n//             onChange={event =>\n//               updateForm({ transaction_number: event.target.value })\n//             }\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"sale\">Sale</label>\n//           <input\n//             type=\"number\"\n//             className=\"form-control\"\n//             id=\"sale\"\n//             value={form.sale}\n//             min=\"0\"\n//             onChange={event =>\n//               updateForm({ sale: Math.max(0, event.target.value) })\n//             }\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <input\n//             type=\"submit\"\n//             value=\"Create Transaction\"\n//             className=\"btn btn-primary\"\n//           />\n//         </div>\n//       </form>\n//       {/* Confirmation Modal */}\n//       <div\n//         className=\"modal fade\"\n//         id=\"confirmationModal\"\n//         tabIndex=\"-1\"\n//         role=\"dialog\"\n//         aria-labelledby=\"confirmationModalLabel\"\n//         aria-hidden=\"true\"\n//       >\n//         <div className=\"modal-dialog\" role=\"document\">\n//           <div className=\"modal-content\">\n//             <div className=\"modal-header\">\n//               <h5 className=\"modal-title\" id=\"confirmationModalLabel\">\n//                 Are you sure you want to create a new transaction?\n//               </h5>\n//               <button\n//                 type=\"button\"\n//                 className=\"close\"\n//                 data-dismiss=\"modal\"\n//                 aria-label=\"Close\"\n//               >\n//                 <span aria-hidden=\"true\">×</span>\n//               </button>\n//             </div>\n//             <div className=\"modal-body\">\n//               <p>Please confirm that you want to create a new transaction.</p>\n//             </div>\n//           <div className=\"modal-footer\">\n//               <button\n//               type=\"button\"\n//               className=\"btn btn-secondary\"\n//               data-dismiss=\"modal\"\n//               >\n//                 Cancel\n//               </button>\n//               <button\n//               type=\"button\"\n//               className=\"btn btn-primary\"\n//               onClick={onSubmit}\n//               >\n//                 Create Transaction\n//               </button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n// </div>\n// );\n// }\n_s(Create, \"6Rrw4+3lFeCnza+XbsIFeXHpUDo=\", false, function () {\n  return [useNavigate];\n});\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Create","_s","form","setForm","agent_name","transaction_number","sale","date","navigate","updateForm","value","prev","onSubmit","e","preventDefault","confirmation","window","confirm","newPerson","fetch","method","headers","body","JSON","stringify","catch","error","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","id","onChange","target","type","min","Math","max","tabIndex","role","_c","$RefreshReg$"],"sources":["C:/Users/manoj/CodeBoxxManojKumarMuthu/mern-stack-example/mern/client/src/components/createTransaction.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router\";\r\n\r\n// export default function Create() {\r\n//   const [form, setForm] = useState({\r\n//     agent_name: \"\",\r\n//     transaction_number: \"\",\r\n//     sale: \"\",\r\n//     date: \"\"\r\n//   });\r\n//   const navigate = useNavigate();\r\n\r\n//   // These methods will update the state properties.\r\n//   function updateForm(value) {\r\n//     return setForm((prev) => {\r\n//       return { ...prev, ...value };\r\n//     });\r\n//   }\r\n\r\n//   // This function will handle the submission.\r\n//   async function onSubmit(e) {\r\n//     e.preventDefault();\r\n\r\n//     // When a post request is sent to the create url, we'll add a new record to the database.\r\n//     const newPerson = { ...form };\r\n\r\n//     await fetch(\"http://localhost:5000/transaction/add\", {\r\n//       method: \"POST\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//       body: JSON.stringify(newPerson),\r\n//     })\r\n//     .catch(error => {\r\n//       window.alert(error);\r\n//       return;\r\n//     });\r\n\r\n//     setForm({ \r\n//     agent_name: \"\",\r\n//     transaction_number: \"\",\r\n//     sale: \"\",\r\n//     date: \"\" });\r\n//     navigate(\"/transaction\");\r\n//   }\r\n\r\n//   // This following section will display the form that takes the input from the user.\r\n//   return (\r\n//     <div>\r\n//       <h3>Create New Transaction</h3>\r\n//       <form onSubmit={onSubmit}>\r\n//         <div className=\"form-group\">\r\n//          <label htmlFor=\"agent_name\">Agent Name</label>\r\n//           <select\r\n//             className=\"form-control\"\r\n//             id=\"agent_name\"\r\n//             value={form.agent_name}\r\n//             onChange={(e) => updateForm({ agent_name: e.target.value })}\r\n//           >\r\n//             <option value=\"\">Select Agent</option>\r\n//             <option value=\"Goku\">Goku</option>\r\n//             <option value=\"Lelouch\">Lelouch</option>\r\n//             <option value=\"Naruto\">Naruto</option>\r\n//             <option value=\"Bleach\">Bleach</option>\r\n//           </select>\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"transaction_number\">Transaction Number</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"transaction_number\"\r\n//             value={form.transaction_number}\r\n//             onChange={(e) => updateForm({ transaction_number: e.target.value })}\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"sale\">Sale</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             className=\"form-control\"\r\n//             id=\"sale\"\r\n//             value={form.sale}\r\n//             min=\"0\"\r\n//             onChange={(e) => updateForm({ sale: Math.max(0, e.target.value) })}\r\n//           />\r\n//         </div>\r\n  \r\n//         <div className=\"form-group\">\r\n//           <input\r\n//             type=\"submit\"\r\n//             value=\"Create Transaction\"\r\n//             className=\"btn btn-primary\"\r\n//           />\r\n//         </div>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\nexport default function Create() {\r\n  const [form, setForm] = useState({\r\n    agent_name: \"\",\r\n    transaction_number: \"\",\r\n    sale: \"\",\r\n    date: \"\"\r\n  });\r\n  const navigate = useNavigate();\r\n\r\n  // These methods will update the state properties.\r\n  function updateForm(value) {\r\n    return setForm((prev) => {\r\n      return { ...prev, ...value };\r\n    });\r\n  }\r\n\r\n  // This function will handle the submission.\r\n  async function onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // Show confirmation modal before creating the transaction\r\n    const confirmation = window.confirm(\"Are you sure you want to continue?\");\r\n    if (!confirmation) {\r\n      return;\r\n    }\r\n\r\n    // When a post request is sent to the create url, we'll add a new record to the database.\r\n    const newPerson = { ...form };\r\n\r\n    await fetch(\"http://localhost:5000/transaction/add\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newPerson),\r\n    })\r\n    .catch(error => {\r\n      window.alert(error);\r\n      return;\r\n    });\r\n\r\n    setForm({ \r\n    agent_name: \"\",\r\n    transaction_number: \"\",\r\n    sale: \"\",\r\n    date: \"\" });\r\n    navigate(\"/transaction\");\r\n  }\r\n\r\n  // This following section will display the form that takes the input from the user.\r\n  return (\r\n    <div>\r\n      <h3>Create New Transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n         <label htmlFor=\"agent_name\">Agent Name</label>\r\n          <select\r\n            className=\"form-control\"\r\n            id=\"agent_name\"\r\n            value={form.agent_name}\r\n            onChange={(e) => updateForm({ agent_name: e.target.value })}\r\n          >\r\n            <option value=\"\">Select Agent</option>\r\n            <option value=\"Goku\">Goku</option>\r\n            <option value=\"Lelouch\">Lelouch</option>\r\n            <option value=\"Naruto\">Naruto</option>\r\n            <option value=\"Bleach\">Bleach</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"transaction_number\">Transaction Number</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"transaction_number\"\r\n            value={form.transaction_number}\r\n            onChange={(e) => updateForm({ transaction_number: e.target.value })}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"sale\">Sale</label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"sale\"\r\n            value={form.sale}\r\n            min=\"0\"\r\n            onChange={(e) => updateForm({ sale: Math.max(0, e.target.value) })}\r\n          />\r\n        </div>\r\n  \r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Create Transaction\"\r\n            className=\"btn btn-primary\"\r\n          />\r\n        </div>\r\n      </form>\r\n      {/* Confirmation Modal */}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"confirmationModal\"\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"confirmationModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"confirmationModalLabel\">\r\n                Are you sure you want to\r\n\r\n                </h5>\r\n<button\r\n             type=\"button\"\r\n             className=\"close\"\r\n             data-dismiss=\"modal\"\r\n             aria-label=\"Close\"\r\n           >\r\n<span aria-hidden=\"true\">×</span>\r\n</button>\r\n</div>\r\n<div className=\"modal-body\">\r\nThis action will create a new transaction. Are you sure you want to continue?\r\n</div>\r\n<div className=\"modal-footer\">\r\n<button\r\n             type=\"button\"\r\n             className=\"btn btn-secondary\"\r\n             data-dismiss=\"modal\"\r\n           >\r\nNo/Back\r\n</button>\r\n<button type=\"submit\" className=\"btn btn-primary\">\r\nYes/Confirm\r\n</button>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router\";\r\n\r\n// export default function Create() {\r\n//   const [form, setForm] = useState({\r\n//     agent_name: \"\",\r\n//     transaction_number: \"\",\r\n//     sale: \"\",\r\n//     date: \"\"\r\n//   });\r\n//   const navigate = useNavigate();\r\n\r\n//   // Update the form state with the provided values\r\n//   function updateForm(values) {\r\n//     setForm(prev => ({ ...prev, ...values }));\r\n//   }\r\n\r\n//   // Handle form submission\r\n//   async function onSubmit(event) {\r\n//     event.preventDefault();\r\n\r\n//     // Show confirmation dialog before creating the transaction\r\n//     const confirmation = window.confirm(\r\n//       \"Are you sure you want to create a new transaction?\"\r\n//     );\r\n//     if (!confirmation) {\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       // Send a POST request to the backend to create a new transaction\r\n//       await fetch(\"http://localhost:5000/transaction/add\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify(form),\r\n//       });\r\n\r\n//       // Reset the form state and navigate to the transaction page\r\n//       setForm({\r\n//         agent_name: \"\",\r\n//         transaction_number: \"\",\r\n//         sale: \"\",\r\n//         date: \"\"\r\n//       });\r\n//       navigate(\"/transaction\");\r\n//     } catch (error) {\r\n//       // Show an error alert if the request fails\r\n//       window.alert(error);\r\n//     }\r\n//   }\r\n\r\n//   // Render the form component\r\n//   return (\r\n//     <div>\r\n//       <h3>Create New Transaction</h3>\r\n//       <form onSubmit={onSubmit}>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"agent_name\">Agent Name</label>\r\n//           <select\r\n//             className=\"form-control\"\r\n//             id=\"agent_name\"\r\n//             value={form.agent_name}\r\n//             onChange={event => updateForm({ agent_name: event.target.value })}\r\n//           >\r\n//             <option value=\"\">Select Agent</option>\r\n//             <option value=\"Goku\">Goku</option>\r\n//             <option value=\"Lelouch\">Lelouch</option>\r\n//             <option value=\"Naruto\">Naruto</option>\r\n//             <option value=\"Bleach\">Bleach</option>\r\n//           </select>\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"transaction_number\">Transaction Number</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             id=\"transaction_number\"\r\n//             value={form.transaction_number}\r\n//             onChange={event =>\r\n//               updateForm({ transaction_number: event.target.value })\r\n//             }\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"sale\">Sale</label>\r\n//           <input\r\n//             type=\"number\"\r\n//             className=\"form-control\"\r\n//             id=\"sale\"\r\n//             value={form.sale}\r\n//             min=\"0\"\r\n//             onChange={event =>\r\n//               updateForm({ sale: Math.max(0, event.target.value) })\r\n//             }\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <input\r\n//             type=\"submit\"\r\n//             value=\"Create Transaction\"\r\n//             className=\"btn btn-primary\"\r\n//           />\r\n//         </div>\r\n//       </form>\r\n//       {/* Confirmation Modal */}\r\n//       <div\r\n//         className=\"modal fade\"\r\n//         id=\"confirmationModal\"\r\n//         tabIndex=\"-1\"\r\n//         role=\"dialog\"\r\n//         aria-labelledby=\"confirmationModalLabel\"\r\n//         aria-hidden=\"true\"\r\n//       >\r\n//         <div className=\"modal-dialog\" role=\"document\">\r\n//           <div className=\"modal-content\">\r\n//             <div className=\"modal-header\">\r\n//               <h5 className=\"modal-title\" id=\"confirmationModalLabel\">\r\n//                 Are you sure you want to create a new transaction?\r\n//               </h5>\r\n//               <button\r\n//                 type=\"button\"\r\n//                 className=\"close\"\r\n//                 data-dismiss=\"modal\"\r\n//                 aria-label=\"Close\"\r\n//               >\r\n//                 <span aria-hidden=\"true\">×</span>\r\n//               </button>\r\n//             </div>\r\n//             <div className=\"modal-body\">\r\n//               <p>Please confirm that you want to create a new transaction.</p>\r\n//             </div>\r\n//           <div className=\"modal-footer\">\r\n//               <button\r\n//               type=\"button\"\r\n//               className=\"btn btn-secondary\"\r\n//               data-dismiss=\"modal\"\r\n//               >\r\n//                 Cancel\r\n//               </button>\r\n//               <button\r\n//               type=\"button\"\r\n//               className=\"btn btn-primary\"\r\n//               onClick={onSubmit}\r\n//               >\r\n//                 Create Transaction\r\n//               </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n// </div>\r\n// );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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UAAA;YAAAC,YAAA;UAAA,QACH,eACNjC,OAAA;YAAKkC,SAAS,EAAC,YAAY;YAAAL,QAAA,EAAC;UAE5B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACNjC,OAAA;YAAKkC,SAAS,EAAC,cAAc;YAAAL,QAAA,gBAC7B7B,OAAA;cACauC,IAAI,EAAC,QAAQ;cACbL,SAAS,EAAC,mBAAmB;cAC7B,gBAAa,OAAO;cAAAL,QAAA,EACrB;YAEZ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAS,eACTjC,OAAA;cAAQuC,IAAI,EAAC,QAAQ;cAACL,SAAS,EAAC,iBAAiB;cAAAL,QAAA,EAAC;YAElD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAS;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACH;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEN;;AASA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA/B,EAAA,CAtTwBD,MAAM;EAAA,QAOXH,WAAW;AAAA;AAAA+C,EAAA,GAPN5C,MAAM;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}